{
  "apiProduct": {
    "tableName": "ApiProduct",
    "endpoints": [
      {
        "operationId": "listApiProduct",
        "path": "/apiProduct",
        "method": "get"
      },
      {
        "operationId": "retrieveApiProduct",
        "path": "/apiProduct/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the product. It could be the same as the name of the product offering"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Is the description of the product. It could be same description than Product Offering one."
              },
              "productOffering": {
                "name": "productOffering",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "Version of the product offering"
                  }
                }
              },
              "productSpecification": {
                "name": "productSpecification",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "Version of the product specification"
                  },
                  "targetProductSchema": {
                    "name": "targetProductSchema",
                    "type": "object",
                    "description": "The reference object to the schema and type of target product which is described by product specification",
                    "properties": {
                      "@type": {
                        "name": "@type",
                        "type": "string",
                        "description": "Class type of the target product"
                      },
                      "@schemaLocation": {
                        "name": "@schemaLocation",
                        "type": "string",
                        "description": "This field provides a link to the schema describing the target product",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "apiName": {
                "name": "apiName",
                "type": "string",
                "description": "Standardized name of the API."
              },
              "apiVersionDetails": {
                "name": "apiVersionDetails",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "apiMajorVersion": {
                      "name": "apiMajorVersion",
                      "type": "integer",
                      "description": "Major version of the API standard specification."
                    },
                    "basePath": {
                      "name": "basePath",
                      "type": "string",
                      "description": "Base path of the API."
                    },
                    "countryCode": {
                      "name": "countryCode",
                      "type": "object",
                      "properties": {
                        "value": {
                          "name": "value",
                          "type": "string",
                          "description": "The value of the resource in the ISO 3166-1 Alpha 2 standard"
                        }
                      }
                    },
                    "apiGrantInformation": {
                      "name": "apiGrantInformation",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "purpose": {
                            "name": "purpose",
                            "type": "string",
                            "description": "Valid values for the purpose based on W3C Data Privacy Vocabulary v2 https://w3c.github.io/dpv/2.0/dpv/ ",
                            "enum": [
                              "dpv:AcademicResearch",
                              "dpv:AccountManagement",
                              "dpv:Advertising",
                              "dpv:AgeVerification",
                              "dpv:CombatClimateChange",
                              "dpv:CommercialPurpose",
                              "dpv:CommercialResearch",
                              "dpv:CommunicationForCustomerCare",
                              "dpv:CommunicationManagement",
                              "dpv:CounterMoneyLaundering",
                              "dpv:Counterterrorism",
                              "dpv:CreditChecking",
                              "dpv:CustomerCare",
                              "dpv:CustomerClaimsManagement",
                              "dpv:CustomerManagement",
                              "dpv:CustomerOrderManagement",
                              "dpv:CustomerRelationshipManagement",
                              "dpv:CustomerSolvencyMonitoring",
                              "dpv:DataAltruism",
                              "dpv:DeliveryOfGoods",
                              "dpv:DirectMarketing",
                              "dpv:DisputeManagement",
                              "dpv:EnforceAccessControl",
                              "dpv:EnforceSecurity",
                              "dpv:EstablishContractualAgreement",
                              "dpv:FraudPreventionAndDetection",
                              "dpv:FulfilmentOfContractualObligation",
                              "dpv:FulfilmentOfObligation",
                              "dpv:HumanResourceManagement",
                              "dpv:IdentityAuthentication",
                              "dpv:IdentityVerification",
                              "dpv:ImproveExistingProductsAndServices",
                              "dpv:ImproveHealthcare",
                              "dpv:ImproveInternalCRMProcesses",
                              "dpv:ImprovePublicServices",
                              "dpv:ImproveTransportMobility",
                              "dpv:IncreaseServiceRobustness",
                              "dpv:InternalResourceOptimisation",
                              "dpv:LegalCompliance",
                              "dpv:MaintainCreditCheckingDatabase",
                              "dpv:MaintainCreditRatingDatabase",
                              "dpv:MaintainFraudDatabase",
                              "dpv:Marketing",
                              "dpv:MemberPartnerManagement",
                              "dpv:MisusePreventionAndDetection",
                              "dpv:NonCommercialPurpose",
                              "dpv:NonCommercialResearch",
                              "dpv:OptimisationForConsumer",
                              "dpv:OptimisationForController",
                              "dpv:OptimiseUserInterface",
                              "dpv:OrganisationComplianceManagement",
                              "dpv:OrganisationGovernance",
                              "dpv:OrganisationRiskManagement",
                              "dpv:PaymentManagement",
                              "dpv:Personalisation",
                              "dpv:PersonalisedAdvertising",
                              "dpv:PersonalisedBenefits",
                              "dpv:PersonnelHiring",
                              "dpv:PersonnelManagement",
                              "dpv:PersonnelPayment",
                              "dpv:ProtectionOfIPR",
                              "dpv:ProtectionOfNationalSecurity",
                              "dpv:ProtectionOfPublicSecurity",
                              "dpv:ProvideEventRecommendations",
                              "dpv:ProvideOfficialStatistics",
                              "dpv:ProvidePersonalisedRecommendations",
                              "dpv:ProvideProductRecommendations",
                              "dpv:PublicBenefit",
                              "dpv:PublicPolicyMaking",
                              "dpv:PublicRelations",
                              "dpv:RecordManagement",
                              "dpv:RepairImpairments",
                              "dpv:RequestedServiceProvision",
                              "dpv:ResearchAndDevelopment",
                              "dpv:RightsFulfillment",
                              "dpv:ScientificResearch",
                              "dpv:SearchFunctionalities",
                              "dpv:SellDataToThirdParties",
                              "dpv:SellInsightsFromData",
                              "dpv:SellProducts",
                              "dpv:SellProductsToDataSubject",
                              "dpv:ServiceOptimisation",
                              "dpv:ServicePersonalisation",
                              "dpv:ServiceProvision",
                              "dpv:ServiceRegistration",
                              "dpv:ServiceUsageAnalytics",
                              "dpv:SocialMediaMarketing",
                              "dpv:TargetedAdvertising",
                              "dpv:TechnicalServiceProvision",
                              "dpv:UserInterfacePersonalisation",
                              "dpv:VendorManagement",
                              "dpv:VendorPayment",
                              "dpv:VendorRecordsManagement",
                              "dpv:VendorSelectionAssessment",
                              "dpv:Verification"
                            ]
                          },
                          "scope": {
                            "name": "scope",
                            "type": "array",
                            "description": "One or several scopes of the API, as stated in the API ProductSpecification. Examples:\n  \"sim-swap:retrieve-date\" \n",
                            "items": {
                              "name": "items",
                              "type": "string"
                            }
                          },
                          "grantType": {
                            "name": "grantType",
                            "type": "array",
                            "description": "One or several grantType of the API, as stated in the API ProductSpecification. Examples:\n  \"authorization_code\"   \"client_credentials\"   \"urn:ietf:params:oauth:grant-type:token-exchange\"   \"urn:ietf:params:oauth:grant-type:jwt-bearer\"   \"urn:ietf:params:oauth:grant-type:saml2-bearer\"   \"urn:ietf:params:oauth:grant-type:device_code\"   \"urn:openid:params:grant-type:ciba\"",
                            "items": {
                              "name": "items",
                              "type": "string"
                            }
                          },
                          "legalBasis": {
                            "name": "legalBasis",
                            "type": "string",
                            "description": "Valid values for Legal Basis based on W3C Data Privacy Vocabulary v2 https://w3c.github.io/dpv/2.0/dpv/ ",
                            "enum": [
                              "dpv:Consent",
                              "dpv:Contract",
                              "dpv:ContractPerformance",
                              "dpv:DataTransferLegalBasis",
                              "dpv:EnterIntoContract",
                              "dpv:LegalBasis",
                              "dpv:LegalObligation",
                              "dpv:LegitimateInterest",
                              "dpv:LegitimateInterestOfController",
                              "dpv:LegitimateInterestOfDataSubject",
                              "dpv:LegitimateInterestOfThirdParty",
                              "dpv:OfficialAuthorityOfController",
                              "dpv:PublicInterest",
                              "dpv:VitalInterest",
                              "dpv:VitalInterestOfDataSubject",
                              "dpv:VitalInterestOfNaturalPerson",
                              "dpv:InformedConsent",
                              "dpv:DataControllerContract",
                              "dpv:ImpliedConsent",
                              "dpv:DataSubjectContract",
                              "dpv:ExplicitlyExpressedConsent",
                              "dpv:UninformedConsent",
                              "dpv:DataProcessorContract",
                              "dpv:ExpressedConsent",
                              "dpv:ThirdPartyContract"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "purpose": {
                "name": "purpose",
                "type": "object",
                "description": "Reference to DpvPurposeType"
              },
              "countryCode": {
                "name": "countryCode",
                "type": "array",
                "description": "One or several countries were API are operated.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ISO31661Alpha2StandardIdentifier"
                }
              },
              "productOrderItem": {
                "name": "productOrderItem",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "orderItemAction": {
                      "name": "orderItemAction",
                      "type": "string",
                      "description": "action to be performed on the entity managed by the item",
                      "enum": [
                        "add",
                        "modify",
                        "delete",
                        "noChange"
                      ]
                    },
                    "orderHref": {
                      "name": "orderHref",
                      "type": "string",
                      "description": "Reference of the related entity."
                    },
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string",
                      "description": "The actual type of the target instance when needed for disambiguation."
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the order"
                    },
                    "orderId": {
                      "name": "orderId",
                      "type": "string",
                      "description": "Unique identifier of a related  Order."
                    },
                    "orderItemId": {
                      "name": "orderItemId",
                      "type": "string",
                      "description": "Id of an item of a product order"
                    }
                  }
                }
              },
              "approvedProductOfferingTermOrCondition": {
                "name": "approvedProductOfferingTermOrCondition",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the ProductOfferingTermOrCondition."
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Identifier of the ProductOfferingTermOrCondition."
                    },
                    "productOfferingTermOrConditionSpecRef": {
                      "name": "productOfferingTermOrConditionSpecRef",
                      "type": "object",
                      "properties": {
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "Version of the ProductOfferingTermOrCondition specification."
                        }
                      }
                    },
                    "productOfferingTermOrConditionApproval": {
                      "name": "productOfferingTermOrConditionApproval",
                      "type": "object",
                      "description": "Approval entity for the ProductOfferingTermOrCondition. Exists when Terms or Conditions are approved.",
                      "properties": {
                        "approvalDate": {
                          "name": "approvalDate",
                          "type": "string",
                          "description": "Date of the approval.",
                          "format": "date-time"
                        },
                        "authorization": {
                          "name": "authorization",
                          "type": "array",
                          "description": "DEPRECATED not possible yet to have the ID of the individual that made the approval.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "name": {
                                "name": "name",
                                "type": "string",
                                "description": "Name of the required authorization"
                              },
                              "approver": {
                                "name": "approver",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                  },
                                  "partyOrPartyRole": {
                                    "name": "partyOrPartyRole",
                                    "type": "union",
                                    "description": "",
                                    "oneOf": [
                                      {
                                        "name": "partyOrPartyRole_variant_0",
                                        "type": "object",
                                        "description": "A Party reference",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "partyId": {
                                            "name": "partyId",
                                            "type": "string",
                                            "description": "The identifier of the engaged party that is linked to the PartyRole object."
                                          },
                                          "partyName": {
                                            "name": "partyName",
                                            "type": "string",
                                            "description": "The name of the engaged party that is linked to the PartyRole object."
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "product": {
                      "name": "product",
                      "type": "object",
                      "description": "A Product reference",
                      "properties": {}
                    },
                    "applicationLegalBasisForInputData": {
                      "name": "applicationLegalBasisForInputData",
                      "type": "object",
                      "description": "Reference to DpvLegalBasisType"
                    },
                    "process": {
                      "name": "process",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "processingOperation": {
                            "name": "processingOperation",
                            "type": "array",
                            "description": "operations of the data processing of the API.",
                            "items": {
                              "name": "items",
                              "type": "string",
                              "description": "Valid values for the data processing operation based on W3C Data Privacy Vocabulary v2 https://w3c.github.io/dpv/2.0/dpv/.",
                              "enum": [
                                "dpv:Access",
                                "dpv:Acquire",
                                "dpv:Adapt",
                                "dpv:Aggregate",
                                "dpv:Align",
                                "dpv:Alter",
                                "dpv:Analyse",
                                "dpv:Anonymise",
                                "dpv:Assess",
                                "dpv:Collect",
                                "dpv:Combine",
                                "dpv:Consult",
                                "dpv:Copy",
                                "dpv:CrossBorderTransfer",
                                "dpv:Delete",
                                "dpv:Derive",
                                "dpv:Destruct",
                                "dpv:Disclose",
                                "dpv:DiscloseByTransmission",
                                "dpv:Display",
                                "dpv:Disseminate",
                                "dpv:Download",
                                "dpv:Erase",
                                "dpv:Export",
                                "dpv:Filter",
                                "dpv:Format",
                                "dpv:Generate",
                                "dpv:Infer",
                                "dpv:MakeAvailable",
                                "dpv:Match",
                                "dpv:Modify",
                                "dpv:Monitor",
                                "dpv:Move",
                                "dpv:Observe",
                                "dpv:Obtain",
                                "dpv:Organise",
                                "dpv:Profiling",
                                "dpv:Pseudonymise",
                                "dpv:Query",
                                "dpv:Record",
                                "dpv:Reformat",
                                "dpv:Remove",
                                "dpv:Restrict",
                                "dpv:Retrieve",
                                "dpv:Screen",
                                "dpv:Share",
                                "dpv:Store",
                                "dpv:Structure",
                                "dpv:Transfer",
                                "dpv:Transform",
                                "dpv:Transmit",
                                "dpv:Use"
                              ]
                            }
                          },
                          "context": {
                            "name": "context",
                            "type": "object",
                            "properties": {
                              "processingContext": {
                                "name": "processingContext",
                                "type": "array",
                                "description": "context classes of the data processing of the API.",
                                "items": {
                                  "name": "items",
                                  "type": "string",
                                  "description": "Valid values for the data processing context classes based on W3C Data Privacy Vocabulary v2 https://w3c.github.io/dpv/2.0/dpv/",
                                  "enum": [
                                    "dpv:AlgorithmicLogic",
                                    "dpv:AssistiveAutomation",
                                    "dpv:AutomatedDecisionMaking",
                                    "dpv:AutomatedScoringOfIndividuals",
                                    "dpv:AutomationLevel",
                                    "dpv:Autonomous",
                                    "dpv:CannotChallengeProcess",
                                    "dpv:CannotChallengeProcessInput",
                                    "dpv:CannotChallengeProcessOutput",
                                    "dpv:CannotCorrectProcess",
                                    "dpv:CannotCorrectProcessInput",
                                    "dpv:CannotCorrectProcessOutput",
                                    "dpv:CannotObjectToProcess",
                                    "dpv:CannotOptInToProcess",
                                    "dpv:CannotOptOutFromProcess",
                                    "dpv:CannotReverseProcessEffects",
                                    "dpv:CannotReverseProcessInput",
                                    "dpv:CannotReverseProcessOutput",
                                    "dpv:CannotWithdrawFromProcess",
                                    "dpv:ChallengingProcess",
                                    "dpv:ChallengingProcessInput",
                                    "dpv:ChallengingProcessOutput",
                                    "dpv:ConditionalAutomation",
                                    "dpv:ConsentControl",
                                    "dpv:CorrectingProcess",
                                    "dpv:CorrectingProcessInput",
                                    "dpv:CorrectingProcessOutput",
                                    "dpv:CompletelyManualProcessing",
                                    "dpv:DataControllerDataSource",
                                    "dpv:DataPublishedByDataSubject",
                                    "dpv:DataSource",
                                    "dpv:DataSubject",
                                    "dpv:DataSubjectDataSource",
                                    "dpv:DataSubjectScale",
                                    "dpv:DataVolume",
                                    "dpv:DecisionMaking",
                                    "dpv:EntityActiveInvolvement",
                                    "dpv:EntityInvolvement",
                                    "dpv:EntityNonInvolvement",
                                    "dpv:EntityNonPermissiveInvolvement",
                                    "dpv:EntityPassiveInvolvement",
                                    "dpv:EntityPermissiveInvolvement",
                                    "dpv:EvaluationOfIndividuals",
                                    "dpv:EvaluationScoring",
                                    "dpv:FullAutomation",
                                    "dpv:GeographicCoverage",
                                    "dpv:GlobalScale",
                                    "dpv:HighAutomation",
                                    "dpv:HugeDataVolume",
                                    "dpv:HugeScaleOfDataSubjects",
                                    "dpv:HumanInvolved",
                                    "dpv:HumanInvolvement",
                                    "dpv:HumanInvolvementForControl",
                                    "dpv:HumanInvolvementForDecision",
                                    "dpv:HumanInvolvementForInput",
                                    "dpv:HumanInvolvementForIntervention",
                                    "dpv:HumanInvolvementForOversight",
                                    "dpv:HumanInvolvementForVerification",
                                    "dpv:HumanNotInvolved",
                                    "dpv:InnovativeUseOfExistingTechnology",
                                    "dpv:InnovativeUseOfNewTechnologies",
                                    "dpv:InnovativeUseOfTechnology",
                                    "dpv:LargeDataVolume",
                                    "dpv:LargeScaleOfDataSubjects",
                                    "dpv:LargeScaleProcessing",
                                    "dpv:LocalEnvironmentScale",
                                    "dpv:LocalityScale",
                                    "dpv:MediumDataVolume",
                                    "dpv:MediumScaleOfDataSubjects",
                                    "dpv:MediumScaleProcessing",
                                    "dpv:MultiNationalScale",
                                    "dpv:NationalScale",
                                    "dpv:NearlyGlobalScale",
                                    "dpv:NonPublicDataSource",
                                    "dpv:NotAutomated",
                                    "dpv:ObjectingToProcess",
                                    "dpv:ObtainConsent",
                                    "dpv:OptingInToProcess",
                                    "dpv:OptingOutFromProcess",
                                    "dpv:PartialAutomation",
                                    "dpv:ProcessingCondition",
                                    "dpv:ProcessingDuration",
                                    "dpv:ProcessingLocation",
                                    "dpv:ProcessingScale",
                                    "dpv:ProvideConsent",
                                    "dpv:PublicDataSource",
                                    "dpv:ReaffirmConsent",
                                    "dpv:RegionalScale",
                                    "dpv:ReversingProcessEffects",
                                    "dpv:ReversingProcessInput",
                                    "dpv:ReversingProcessOutput",
                                    "dpv:Scale",
                                    "dpv:ScoringOfIndividuals",
                                    "dpv:SingularDataVolume",
                                    "dpv:SingularScaleOfDataSubjects",
                                    "dpv:SmallDataVolume",
                                    "dpv:SmallScaleOfDataSubjects",
                                    "dpv:SmallScaleProcessing",
                                    "dpv:SporadicDataVolume",
                                    "dpv:SporadicScaleOfDataSubjects",
                                    "dpv:StorageCondition",
                                    "dpv:StorageDeletion",
                                    "dpv:StorageDuration",
                                    "dpv:StorageLocation",
                                    "dpv:StorageRestoration",
                                    "dpv:SystematicMonitoring",
                                    "dpv:ThirdPartyDataSource",
                                    "dpv:WithdrawConsent",
                                    "dpv:WithdrawingFromProcess"
                                  ]
                                }
                              },
                              "duration": {
                                "name": "duration",
                                "type": "string",
                                "description": "Valid values for the data processing duration based on W3C Data Privacy Vocabulary v2 https://w3c.github.io/dpv/2.0/dpv/",
                                "enum": [
                                  "dpv:EndlessDuration",
                                  "dpv:FixedOccurrencesDuration",
                                  "dpv:IndeterminateDuration",
                                  "dpv:TemporalDuration",
                                  "dpv:UntilEventDuration",
                                  "dpv:UntilTimeDuration"
                                ]
                              },
                              "frequency": {
                                "name": "frequency",
                                "type": "string",
                                "description": "Valid values for the data processing frequency based on W3C Data Privacy Vocabulary v2 https://w3c.github.io/dpv/2.0/dpv/",
                                "enum": [
                                  "dpv:ContinuousFrequency",
                                  "dpv:OftenFrequency",
                                  "dpv:SingularFrequency",
                                  "dpv:SporadicFrequency"
                                ]
                              }
                            }
                          },
                          "dataExportTransitCountry": {
                            "name": "dataExportTransitCountry",
                            "type": "array",
                            "description": "Field to contain all the traceability of the data until the last storage site.",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "countryCode": {
                                  "name": "countryCode",
                                  "type": "object",
                                  "description": "Reference to ISO31661Alpha2StandardIdentifier"
                                },
                                "commercialActivity": {
                                  "name": "commercialActivity",
                                  "type": "boolean",
                                  "description": "Flag to indicate if commercial activity applies to these data management."
                                },
                                "commercialOrganizationName": {
                                  "name": "commercialOrganizationName",
                                  "type": "string",
                                  "description": "Organization who is managing the data."
                                },
                                "dataPrivacyFrameworkURL": {
                                  "name": "dataPrivacyFrameworkURL",
                                  "type": "string",
                                  "description": "URL to the organization or governmental data privacy framework if applies."
                                }
                              }
                            }
                          },
                          "dataExportStorageCountry": {
                            "name": "dataExportStorageCountry",
                            "type": "array",
                            "description": "Field to contain all the information related the last data storage site.",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "description": "Reference to DataExportCountry"
                            }
                          }
                        }
                      }
                    },
                    "purposeReason": {
                      "name": "purposeReason",
                      "type": "string",
                      "description": "Explain the reason justifying the purpose, indicating specifically which is the reason why the API is employed as part of the application's use case."
                    },
                    "userConsentScreenshot": {
                      "name": "userConsentScreenshot",
                      "type": "object",
                      "properties": {
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types",
                          "enum": [
                            "application/pdf"
                          ]
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        }
                      }
                    }
                  }
                }
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Possible values for the status of the product",
                "enum": [
                  "created",
                  "pendingActive",
                  "cancelled",
                  "active",
                  "pendingTerminate",
                  "terminated",
                  "suspended",
                  "aborted "
                ]
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date and time when the product was created",
                "format": "date-time"
              },
              "startDate": {
                "name": "startDate",
                "type": "string",
                "description": "Is the date from which the product starts",
                "format": "date-time"
              },
              "orderDate": {
                "name": "orderDate",
                "type": "string",
                "description": "Is the date when the product was ordered",
                "format": "date-time"
              },
              "terminationDate": {
                "name": "terminationDate",
                "type": "string",
                "description": "Is the date when the product was terminated",
                "format": "date-time"
              },
              "channelPartner": {
                "name": "channelPartner",
                "type": "object",
                "description": "Reference to PartyRoleRef"
              },
              "agreementItem": {
                "name": "agreementItem",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "agreementName": {
                      "name": "agreementName",
                      "type": "string",
                      "description": "Name of the related entity."
                    },
                    "agreementHref": {
                      "name": "agreementHref",
                      "type": "string",
                      "description": "Reference of the related entity."
                    },
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string",
                      "description": "The actual type of the target instance when needed for disambiguation."
                    },
                    "agreementId": {
                      "name": "agreementId",
                      "type": "string",
                      "description": "Unique identifier of a related entity."
                    },
                    "agreementItemId": {
                      "name": "agreementItemId",
                      "type": "string",
                      "description": "Id of an item of a Agreement"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "apiProductOrder": {
    "tableName": "ApiProductOrder",
    "endpoints": [
      {
        "operationId": "listApiProductOrder",
        "path": "/apiProductOrder",
        "method": "get"
      },
      {
        "operationId": "createApiProductOrder",
        "path": "/apiProductOrder",
        "method": "post"
      },
      {
        "operationId": "retrieveApiProductOrder",
        "path": "/apiProductOrder/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the product order"
              },
              "externalId": {
                "name": "externalId",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              },
              "productOrderItem": {
                "name": "productOrderItem",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "An identified part of the order. A product order is decomposed into one or more order items.",
                  "properties": {}
                }
              },
              "agreement": {
                "name": "agreement",
                "type": "array",
                "description": "A reference to an agreement defined in the context of the product order",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                  "properties": {}
                }
              },
              "channelPartner": {
                "name": "channelPartner",
                "type": "object",
                "properties": {
                  "partyId": {
                    "name": "partyId",
                    "type": "string",
                    "description": "The identifier of the engaged party that is linked to the PartyRole object."
                  },
                  "partyName": {
                    "name": "partyName",
                    "type": "string",
                    "description": "The name of the engaged party that is linked to the PartyRole object."
                  }
                }
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Possible values for the state of the order",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "pending",
                  "held",
                  "inProgress",
                  "cancelled",
                  "completed",
                  "failed",
                  "partial",
                  "assessingCancellation",
                  "pendingCancellation",
                  "draft",
                  "inProgress.accepted"
                ]
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date and time when the ProductOrder was created",
                "format": "date-time"
              },
              "expectedCompletionDate": {
                "name": "expectedCompletionDate",
                "type": "string",
                "description": "Expected delivery date amended by the provider",
                "format": "date-time"
              },
              "completionDate": {
                "name": "completionDate",
                "type": "string",
                "description": "Date when the ProductOrder was completed",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "application": {
    "tableName": "Application",
    "endpoints": [
      {
        "operationId": "listApplication",
        "path": "/application",
        "method": "get"
      },
      {
        "operationId": "createApplication",
        "path": "/application",
        "method": "post"
      },
      {
        "operationId": "retrieveApplication",
        "path": "/application/{id}",
        "method": "get"
      },
      {
        "operationId": "patchApplication",
        "path": "/application/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "free-text description of the resource"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "the name of the resource"
              },
              "operationalState": {
                "name": "operationalState",
                "type": "string",
                "description": "ResourceOperationalStateType enumerations; values defined by ITU X.731: 'disable': The resource is totally inoperable and unable to provide service to the user(s); 'enable': The resource is partially or fully operable and available for use.",
                "enum": [
                  "enable",
                  "disable"
                ]
              },
              "resourceVersion": {
                "name": "resourceVersion",
                "type": "string",
                "description": "A field that identifies the specific version of an instance of a resource."
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "description": "An identification of this resource that is owned by or originates in a software system different from the current system. The structure identifies the system itself, the nature of the resource within the system and the unique ID of the resource within the system. It is anticipated that multiple external IDs can be held for a single resource, e.g. if the resource passed through multiple systems on the way to the current system.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              },
              "commercialName": {
                "name": "commercialName",
                "type": "string",
                "description": "Exact name of the Application as marketed (and known by the end-user)."
              },
              "logoUrl": {
                "name": "logoUrl",
                "type": "string",
                "description": "Url to retrieve the Application official logo."
              },
              "privacyPolicyURL": {
                "name": "privacyPolicyURL",
                "type": "string",
                "description": "Url to Application privacy policy, if applicable."
              },
              "redirectUrl": {
                "name": "redirectUrl",
                "type": "array",
                "description": "After a user successfully authorizes an application, the authorization server will redirect the user back to the application.",
                "items": {
                  "name": "items",
                  "type": "string"
                }
              },
              "jwksUri": {
                "name": "jwksUri",
                "type": "string",
                "description": "Uri pointing to a JSON Web Key (JWK) : data structure that represents a cryptographic key"
              },
              "category": {
                "name": "category",
                "type": "string",
                "description": "Valid values for the category of the Application. Please refer to main Application stores in order to retrieve a more precise definition of the categories.",
                "enum": [
                  "agriculture",
                  "artAndDesign",
                  "autoAndVehicle",
                  "beauty",
                  "booksAndReference",
                  "business",
                  "construction",
                  "defense",
                  "developerTools",
                  "education",
                  "engineering",
                  "eventsAndEntertainment",
                  "finance",
                  "foodAndDrink",
                  "games",
                  "healthAndFitness",
                  "healthcare",
                  "information",
                  "kids",
                  "librariesAndDemo",
                  "lifestyle",
                  "manufacturing",
                  "mapsAndNavigation",
                  "media",
                  "medical",
                  "mining",
                  "musicAndAudio",
                  "newsAndMagazines",
                  "organizations",
                  "other",
                  "photoAndVideo",
                  "productivity",
                  "publicService",
                  "realEstate",
                  "shopping",
                  "socialNetworkingAndCommunications",
                  "sports",
                  "tourism",
                  "utilities",
                  "trading",
                  "transportation",
                  "travelAndLocal",
                  "water",
                  "weather"
                ]
              },
              "approvalStatus": {
                "name": "approvalStatus",
                "type": "string",
                "description": "Valid values for an approvalStatus in the context of an approval process.",
                "enum": [
                  "pendingApproval",
                  "approved",
                  "rejected"
                ]
              },
              "approvalStatusReason": {
                "name": "approvalStatusReason",
                "type": "string",
                "description": "The reason why the approval status changed. DEPRECATED in the PATCH (bug to be fixed on next major version)."
              },
              "applicationOwner": {
                "name": "applicationOwner",
                "type": "object",
                "properties": {
                  "partyId": {
                    "name": "partyId",
                    "type": "string",
                    "description": "The identifier of the engaged party that is linked to the PartyRole object."
                  },
                  "partyName": {
                    "name": "partyName",
                    "type": "string",
                    "description": "The name of the engaged party that is linked to the PartyRole object."
                  }
                }
              },
              "privacyRightsRequestContact": {
                "name": "privacyRightsRequestContact",
                "type": "array",
                "description": "Contact information for the exercise of data protection rights to which the End Users can address. Must be only EmailContactMedium or WebFormContactMedium for this context.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier for this contact medium."
                    },
                    "preferred": {
                      "name": "preferred",
                      "type": "boolean",
                      "description": "If true, indicates that is the preferred contact medium"
                    },
                    "contactType": {
                      "name": "contactType",
                      "type": "string",
                      "description": "Type of the contact medium to qualify it like pro email / personal email. This is not used to define the contact medium used."
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                      "properties": {
                        "startDateTime": {
                          "name": "startDateTime",
                          "type": "string",
                          "description": "Start of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        },
                        "endDateTime": {
                          "name": "endDateTime",
                          "type": "string",
                          "description": "End of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              },
              "channelPartner": {
                "name": "channelPartner",
                "type": "object",
                "description": "Reference to PartyRoleRef"
              },
              "digitalIdentity": {
                "name": "digitalIdentity",
                "type": "object",
                "properties": {
                  "clientId": {
                    "name": "clientId",
                    "type": "string",
                    "description": "OAuth2 Client ID: A public identifier for apps. Even though it is public, it is best that it is not guessable by third parties, so many implementations use something like a 32-character hex string. DEPRECATED in the POST and the PATCH, this attribute can't be valued by the API consumer in this context."
                  },
                  "redirectUrl": {
                    "name": "redirectUrl",
                    "type": "array",
                    "description": "DEPRECATED : moved to Application schema. After a user successfully authorizes an application, the authorization server will redirect the user back to the application.",
                    "items": {
                      "name": "items",
                      "type": "string"
                    }
                  },
                  "jwksUri": {
                    "name": "jwksUri",
                    "type": "string",
                    "description": "DEPRECATED : moved to Application schema. JSON Web Key (JWK) is a data structure that represents a cryptographic key"
                  },
                  "validFor": {
                    "name": "validFor",
                    "type": "object",
                    "description": "Reference to TimePeriod"
                  },
                  "status": {
                    "name": "status",
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status of this digital identity (unknown, active, suspended, archived)."
                  },
                  "credential": {
                    "name": "credential",
                    "type": "array",
                    "description": "A list of credential/authentification method that are used for this digital identity.",
                    "items": {
                      "name": "items",
                      "type": "object",
                      "properties": {
                        "clientSecret": {
                          "name": "clientSecret",
                          "type": "string",
                          "description": "clientSecret"
                        },
                        "state": {
                          "name": "state",
                          "type": "string",
                          "description": "Used to indicate the current lifecycle state of this credential (like active, inactive, expired)."
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        }
                      }
                    }
                  }
                }
              },
              "apiConsumerRole": {
                "name": "apiConsumerRole",
                "type": "array",
                "description": "Each GSMA Service-API plays a role, and has specific permissions for use",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Logic Resource Role",
                  "properties": {
                    "grantedPermissionSet": {
                      "name": "grantedPermissionSet",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "creationDate": {
                            "name": "creationDate",
                            "type": "string",
                            "description": "Date when the PermissionSet was created and assigned to a user",
                            "format": "date-time"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "Text describing the permission set"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "permission": {
                            "name": "permission",
                            "type": "object",
                            "properties": {
                              "managedAssetGroup": {
                                "name": "managedAssetGroup",
                                "type": "object",
                                "properties": {
                                  "apiProduct": {
                                    "name": "apiProduct",
                                    "type": "array",
                                    "description": "The list of permissions in this set",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "description": "A Product reference",
                                      "properties": {}
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "applicationOwner": {
    "tableName": "ApplicationOwner",
    "endpoints": [
      {
        "operationId": "listApplicationOwner",
        "path": "/applicationOwner",
        "method": "get"
      },
      {
        "operationId": "createApplicationOwner",
        "path": "/applicationOwner",
        "method": "post"
      },
      {
        "operationId": "retrieveApplicationOwner",
        "path": "/applicationOwner/{id}",
        "method": "get"
      },
      {
        "operationId": "patchApplicationOwner",
        "path": "/applicationOwner/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "A word, term, or phrase by which the ApplicationOwner is known and distinguished from other PartyRoles. It's the name of the ApplicationOwner unique entity."
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "A description of the ApplicationOwner."
              },
              "engagedParty": {
                "name": "engagedParty",
                "type": "object",
                "properties": {
                  "name": {
                    "name": "name",
                    "type": "string",
                    "description": "Organization name (department name for example)"
                  },
                  "nameType": {
                    "name": "nameType",
                    "type": "string",
                    "description": "Type of the name : Co, Inc, Ltd, etc."
                  },
                  "tradingName": {
                    "name": "tradingName",
                    "type": "string",
                    "description": "Name that the organization (unit) trades under"
                  },
                  "organizationType": {
                    "name": "organizationType",
                    "type": "string",
                    "description": "Valid values for a type of organization based on W3C Data Privacy Vocabulary v2 https://w3c.github.io/dpv/2.0/dpv.",
                    "enum": [
                      "dpv:AcademicScientificOrganisation",
                      "dpv:ForProfitOrganisation",
                      "dpv:GovernmentalOrganisation",
                      "dpv:IndustryConsortium",
                      "dpv:InternationalOrganisation",
                      "dpv:NonGovernmentalOrganisation",
                      "dpv:NonProfitOrganisation",
                      "dpv:OrganisationalUnit"
                    ]
                  },
                  "organizationIdentification": {
                    "name": "organizationIdentification",
                    "type": "array",
                    "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                    "items": {
                      "name": "items",
                      "type": "object",
                      "properties": {
                        "identificationId": {
                          "name": "identificationId",
                          "type": "string",
                          "description": "Identifier"
                        },
                        "issuingAuthority": {
                          "name": "issuingAuthority",
                          "type": "string",
                          "description": "Authority which has issued the identifier (chamber of commerce...)"
                        },
                        "issuingDate": {
                          "name": "issuingDate",
                          "type": "string",
                          "description": "Date at which the identifier was issued",
                          "format": "date-time"
                        },
                        "identificationType": {
                          "name": "identificationType",
                          "type": "string",
                          "description": "Type of identification information used to identify the company in a country or internationally"
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                          "properties": {
                            "startDateTime": {
                              "name": "startDateTime",
                              "type": "string",
                              "description": "Start of the time period, using IETC-RFC-3339 format",
                              "format": "date-time"
                            },
                            "endDateTime": {
                              "name": "endDateTime",
                              "type": "string",
                              "description": "End of the time period, using IETC-RFC-3339 format",
                              "format": "date-time"
                            }
                          }
                        },
                        "attachment": {
                          "name": "attachment",
                          "type": "union",
                          "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                          "oneOf": [
                            {
                              "name": "attachment_variant_0",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The name of the attachment"
                                },
                                "description": {
                                  "name": "description",
                                  "type": "string",
                                  "description": "A narrative text describing the content of the attachment"
                                },
                                "url": {
                                  "name": "url",
                                  "type": "string",
                                  "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                },
                                "content": {
                                  "name": "content",
                                  "type": "string",
                                  "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                  "format": "base64"
                                },
                                "size": {
                                  "name": "size",
                                  "type": "object",
                                  "description": "An amount in a given unit",
                                  "properties": {
                                    "amount": {
                                      "name": "amount",
                                      "type": "number",
                                      "description": "Numeric value in a given unit",
                                      "format": "float"
                                    },
                                    "units": {
                                      "name": "units",
                                      "type": "string",
                                      "description": "Unit"
                                    }
                                  }
                                },
                                "validFor": {
                                  "name": "validFor",
                                  "type": "object",
                                  "description": "Reference to TimePeriod"
                                },
                                "attachmentType": {
                                  "name": "attachmentType",
                                  "type": "string",
                                  "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                },
                                "mimeType": {
                                  "name": "mimeType",
                                  "type": "string",
                                  "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                }
                              }
                            },
                            {
                              "name": "attachment_variant_1",
                              "type": "object",
                              "properties": {
                                "description": {
                                  "name": "description",
                                  "type": "string",
                                  "description": "A narrative text describing the content of the attachment"
                                },
                                "url": {
                                  "name": "url",
                                  "type": "string",
                                  "description": "Link to the attachment media/content"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "isLegalEntity": {
                    "name": "isLegalEntity",
                    "type": "boolean",
                    "description": "If value is true, the organization is a legal entity known by a national referential."
                  },
                  "externalReference": {
                    "name": "externalReference",
                    "type": "array",
                    "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                    "items": {
                      "name": "items",
                      "type": "object",
                      "properties": {
                        "owner": {
                          "name": "owner",
                          "type": "string",
                          "description": "Name of the external system that owns the entity."
                        },
                        "externalIdentifierType": {
                          "name": "externalIdentifierType",
                          "type": "string",
                          "description": "Type of the identification, typically would be the type of the entity within the external system"
                        },
                        "id": {
                          "name": "id",
                          "type": "string",
                          "description": "identification of the entity within the external system."
                        }
                      }
                    }
                  },
                  "contactMedium": {
                    "name": "contactMedium",
                    "type": "array",
                    "description": "List of means for contacting the party, e.g. mobile phone, email address",
                    "items": {
                      "name": "items",
                      "type": "object",
                      "properties": {
                        "id": {
                          "name": "id",
                          "type": "string",
                          "description": "Identifier for this contact medium."
                        },
                        "preferred": {
                          "name": "preferred",
                          "type": "boolean",
                          "description": "If true, indicates that is the preferred contact medium"
                        },
                        "contactType": {
                          "name": "contactType",
                          "type": "string",
                          "description": "Type of the contact medium to qualify it like pro email / personal email. This is not used to define the contact medium used."
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        }
                      }
                    }
                  },
                  "legalRepresentative": {
                    "name": "legalRepresentative",
                    "type": "object",
                    "properties": {
                      "familyName": {
                        "name": "familyName",
                        "type": "string",
                        "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                      },
                      "givenName": {
                        "name": "givenName",
                        "type": "string",
                        "description": "First name of the individual"
                      },
                      "contactMedium": {
                        "name": "contactMedium",
                        "type": "array",
                        "description": "List of means for contacting the party, e.g. mobile phone, email address",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to ContactMedium"
                        }
                      }
                    }
                  },
                  "localRepresentative": {
                    "name": "localRepresentative",
                    "type": "array",
                    "items": {
                      "name": "items",
                      "type": "object",
                      "properties": {
                        "countryCode": {
                          "name": "countryCode",
                          "type": "object",
                          "properties": {
                            "value": {
                              "name": "value",
                              "type": "string",
                              "description": "The value of the resource in the ISO 3166-1 Alpha 2 standard"
                            }
                          }
                        },
                        "representative": {
                          "name": "representative",
                          "type": "object",
                          "description": "Reference to ApplicationOwnerRelatedIndividual"
                        }
                      }
                    }
                  },
                  "dataProtectionOfficer": {
                    "name": "dataProtectionOfficer",
                    "type": "union",
                    "description": "",
                    "oneOf": [
                      {
                        "name": "dataProtectionOfficer_variant_0",
                        "type": "object",
                        "description": "Reference to ApplicationOwnerRelatedIndividual"
                      },
                      {
                        "name": "dataProtectionOfficer_variant_1",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Organization name (department name for example)"
                          },
                          "contactMedium": {
                            "name": "contactMedium",
                            "type": "array",
                            "description": "List of means for contacting the party, e.g. mobile phone, email address",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "description": "Reference to ContactMedium"
                            }
                          },
                          "organizationType": {
                            "name": "organizationType",
                            "type": "object",
                            "description": "Reference to DpvOrganizationType"
                          }
                        }
                      }
                    ]
                  },
                  "privacyManager": {
                    "name": "privacyManager",
                    "type": "object",
                    "description": "Reference to ApplicationOwnerPartyOrPartyRole"
                  },
                  "registeredGeographicAddress": {
                    "name": "registeredGeographicAddress",
                    "type": "object",
                    "properties": {
                      "streetNr": {
                        "name": "streetNr",
                        "type": "string",
                        "description": "Number identifying a specific property on a public street."
                      },
                      "streetName": {
                        "name": "streetName",
                        "type": "string",
                        "description": "Name of the street"
                      },
                      "locality": {
                        "name": "locality",
                        "type": "string",
                        "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature, or a suburb, a bounded locality within a city, town or shire principally of urban character"
                      },
                      "city": {
                        "name": "city",
                        "type": "string",
                        "description": "City that the address is in"
                      },
                      "stateOrProvince": {
                        "name": "stateOrProvince",
                        "type": "string",
                        "description": "the State or Province that the address is in"
                      },
                      "countryCode": {
                        "name": "countryCode",
                        "type": "object",
                        "description": "Reference to ISO31661Alpha2StandardIdentifier"
                      },
                      "postcode": {
                        "name": "postcode",
                        "type": "string",
                        "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                      },
                      "geographicSubAddress": {
                        "name": "geographicSubAddress",
                        "type": "object",
                        "properties": {
                          "buildingName": {
                            "name": "buildingName",
                            "type": "string",
                            "description": "allows for buildings that have well-known names"
                          },
                          "levelNumber": {
                            "name": "levelNumber",
                            "type": "string",
                            "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                          },
                          "levelType": {
                            "name": "levelType",
                            "type": "string",
                            "description": "describes level types within a building"
                          },
                          "privateStreetName": {
                            "name": "privateStreetName",
                            "type": "string",
                            "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                          },
                          "privateStreetNumber": {
                            "name": "privateStreetNumber",
                            "type": "string",
                            "description": "private streets numbers internal to a private street"
                          }
                        }
                      }
                    }
                  },
                  "taxNumber": {
                    "name": "taxNumber",
                    "type": "string",
                    "description": "Tax number of the Organization in the country"
                  },
                  "privacyPolicyURL": {
                    "name": "privacyPolicyURL",
                    "type": "string",
                    "description": "Url to privacy policy."
                  }
                }
              },
              "channelPartner": {
                "name": "channelPartner",
                "type": "object",
                "properties": {
                  "partyId": {
                    "name": "partyId",
                    "type": "string",
                    "description": "The identifier of the engaged party that is linked to the PartyRole object."
                  },
                  "partyName": {
                    "name": "partyName",
                    "type": "string",
                    "description": "The name of the engaged party that is linked to the PartyRole object."
                  }
                }
              },
              "approvalStatus": {
                "name": "approvalStatus",
                "type": "string",
                "description": "Valid values for an approvalStatus in the context of an approval process.",
                "enum": [
                  "pendingApproval",
                  "approved",
                  "rejected"
                ]
              },
              "approvalStatusReason": {
                "name": "approvalStatusReason",
                "type": "string",
                "description": "The reason why the approval status changed."
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Used to track the lifecycle status of the ApplicationOwner in Channel Partner IT. So this attribute is allowed to be contributed by the Channel Partner and patchable..",
                "enum": [
                  "active",
                  "inactive"
                ]
              },
              "statusReason": {
                "name": "statusReason",
                "type": "string",
                "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "Reference to TimePeriod"
              }
            }
          }
        }
      }
    }
  },
  "monitor": {
    "tableName": "Monitor",
    "endpoints": [
      {
        "operationId": "listMonitor",
        "path": "/monitor",
        "method": "get"
      },
      {
        "operationId": "retrieveMonitor",
        "path": "/monitor/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "request": {
                "name": "request",
                "type": "object",
                "description": "A response to a request",
                "properties": {
                  "method": {
                    "name": "method",
                    "type": "string",
                    "description": "The protocol of the request, e.g. http"
                  },
                  "to": {
                    "name": "to",
                    "type": "string",
                    "description": "The target of the request, e.g. a URL for an HTTP request"
                  },
                  "body": {
                    "name": "body",
                    "type": "object",
                    "description": "The body of the request. For example for an HTTP request might contain content of a form ."
                  },
                  "header": {
                    "name": "header",
                    "type": "array",
                    "description": "Items included in the header of the request. For example for an HTTP request might contain requested locale, basic authentication.",
                    "items": {
                      "name": "items",
                      "type": "object",
                      "description": "An item typically included in a request or response",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the header item, e.g. locale"
                        },
                        "value": {
                          "name": "value",
                          "type": "string",
                          "description": "The value of the header item, e.g. en-us"
                        }
                      }
                    }
                  }
                }
              },
              "response": {
                "name": "response",
                "type": "object",
                "description": "A response to a request",
                "properties": {
                  "statusCode": {
                    "name": "statusCode",
                    "type": "string",
                    "description": "The status of the response. For example for an HTTP response would be codes such as 200, 400, etc."
                  },
                  "body": {
                    "name": "body",
                    "type": "object",
                    "description": "The body of the response. For example for an HTTP response might contain HTML for rendering."
                  },
                  "header": {
                    "name": "header",
                    "type": "array",
                    "description": "Items included in the header of the response. For example for an HTTP response might contain negotiated locale.",
                    "items": {
                      "name": "items",
                      "type": "object",
                      "description": "Reference to HeaderItem"
                    }
                  }
                }
              },
              "sourceHref": {
                "name": "sourceHref",
                "type": "string",
                "description": "The monitored resource href"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "The Monitor state of the resource.  InProgress, InError, Completed"
              }
            }
          }
        }
      }
    }
  },
  "service": {
    "tableName": "Service",
    "endpoints": [
      {
        "operationId": "listService",
        "path": "/service",
        "method": "get"
      },
      {
        "operationId": "createService",
        "path": "/service",
        "method": "post"
      },
      {
        "operationId": "retrieveService",
        "path": "/service/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteService",
        "path": "/service/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchService",
        "path": "/service/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Free-text description of the service"
              },
              "isServiceEnabled": {
                "name": "isServiceEnabled",
                "type": "boolean",
                "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed "
              },
              "hasStarted": {
                "name": "hasStarted",
                "type": "boolean",
                "description": "If TRUE, this Service has already been started"
              },
              "startMode": {
                "name": "startMode",
                "type": "string",
                "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above"
              },
              "isStateful": {
                "name": "isStateful",
                "type": "boolean",
                "description": "If TRUE, this Service can be changed without affecting any other services"
              },
              "startDate": {
                "name": "startDate",
                "type": "string",
                "description": "Date when the service starts",
                "format": "date-time"
              },
              "endDate": {
                "name": "endDate",
                "type": "string",
                "description": "Date when the service ends",
                "format": "date-time"
              },
              "serviceOrderItem": {
                "name": "serviceOrderItem",
                "type": "array",
                "description": "A list of service order items related to this service",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string",
                      "description": "The actual type of the target instance when needed for disambiguation."
                    },
                    "serviceOrderHref": {
                      "name": "serviceOrderHref",
                      "type": "string",
                      "description": "Reference of the related entity."
                    },
                    "serviceOrderId": {
                      "name": "serviceOrderId",
                      "type": "string",
                      "description": "Unique identifier of a related entity."
                    },
                    "itemAction": {
                      "name": "itemAction",
                      "type": "string",
                      "description": "action to be performed on the product",
                      "enum": [
                        "add",
                        "modify",
                        "delete",
                        "noChange"
                      ]
                    },
                    "itemId": {
                      "name": "itemId",
                      "type": "string",
                      "description": "Identifier of the order item where the service was managed"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "role of the service order item for this service"
                    }
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "A list of notes made on this service",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "serviceType": {
                "name": "serviceType",
                "type": "string",
                "description": "Business type of the service"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf)."
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the service"
              },
              "category": {
                "name": "category",
                "type": "string",
                "description": "Is it a customer facing or resource facing service"
              },
              "feature": {
                "name": "feature",
                "type": "array",
                "description": "A list of feature associated with this service ",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "isBundle": {
                      "name": "isBundle",
                      "type": "boolean",
                      "description": "True if this is a feature group. Default is false."
                    },
                    "featureRelationship": {
                      "name": "featureRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Configuration feature",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "This is the type of the feature relationship.",
                            "enum": [
                              "excluded",
                              "includes",
                              "may include",
                              "requires"
                            ]
                          },
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the target feature."
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "This is the name of the target feature."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                            "properties": {
                              "startDateTime": {
                                "name": "startDateTime",
                                "type": "string",
                                "description": "Start of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              },
                              "endDateTime": {
                                "name": "endDateTime",
                                "type": "string",
                                "description": "End of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    },
                    "featureCharacteristic": {
                      "name": "featureCharacteristic",
                      "type": "array",
                      "description": "This is a list of Characteristics for a particular feature.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the characteristic"
                          },
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "Data type of the value of the characteristic"
                          },
                          "characteristicRelationship": {
                            "name": "characteristicRelationship",
                            "type": "array",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "name": "id",
                                  "type": "string",
                                  "description": "Unique identifier of the characteristic"
                                },
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "The type of relationship"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "constraint": {
                      "name": "constraint",
                      "type": "array",
                      "description": "This is a list of feature constraints.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "version": {
                            "name": "version",
                            "type": "string",
                            "description": "constraint version"
                          }
                        }
                      }
                    },
                    "isEnabled": {
                      "name": "isEnabled",
                      "type": "boolean",
                      "description": "True if this feature is enabled. Default is true."
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "unique identifier"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "This is the name for the feature."
                    }
                  }
                }
              },
              "relatedEntity": {
                "name": "relatedEntity",
                "type": "array",
                "description": "A list of related entities in relationship with this service",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "entity": {
                      "name": "entity",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "entity_variant_0",
                          "type": "object",
                          "description": "Reference to Entity"
                        },
                        {
                          "name": "entity_variant_1",
                          "type": "object",
                          "description": "Reference to EntityRef"
                        }
                      ]
                    }
                  }
                }
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "description": "A list of external identifiers assoicated with this service",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              },
              "serviceCharacteristic": {
                "name": "serviceCharacteristic",
                "type": "array",
                "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to Characteristic"
                }
              },
              "serviceRelationship": {
                "name": "serviceRelationship",
                "type": "array",
                "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "serviceRelationshipCharacteristic": {
                      "name": "serviceRelationshipCharacteristic",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to Characteristic"
                      }
                    },
                    "service": {
                      "name": "service",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Service entity and not the ServiceRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "service_variant_0",
                          "type": "object",
                          "description": "Reference to Service"
                        },
                        {
                          "name": "service_variant_1",
                          "type": "object",
                          "description": "Service reference, for when Service is used by other entities.",
                          "properties": {}
                        }
                      ]
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string"
                    }
                  }
                }
              },
              "supportingService": {
                "name": "supportingService",
                "type": "array",
                "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ServiceRefOrValue"
                }
              },
              "supportingResource": {
                "name": "supportingResource",
                "type": "array",
                "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Resource reference, for when Resource is used by other entities.",
                  "properties": {}
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "place": {
                "name": "place",
                "type": "array",
                "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "place": {
                      "name": "place",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place entity and not the PlaceRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "place_variant_0",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the geographic location"
                            },
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "An URI used to access to the geographic location resource"
                            },
                            "@type": {
                              "name": "@type",
                              "type": "string",
                              "description": "The name of the GeoJSON structure used in the geometry attribute",
                              "enum": [
                                "GeoJsonPoint",
                                "GeoJsonMultiPoint",
                                "GeoJsonLineString",
                                "GeoJsonMultiLineString",
                                "GeoJsonPolygon"
                              ]
                            },
                            "bbox": {
                              "name": "bbox",
                              "type": "array",
                              "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                              "items": {
                                "name": "items",
                                "type": "number"
                              }
                            }
                          }
                        },
                        {
                          "name": "place_variant_1",
                          "type": "object",
                          "properties": {
                            "code": {
                              "name": "code",
                              "type": "string",
                              "description": "A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]"
                            },
                            "creationDate": {
                              "name": "creationDate",
                              "type": "string",
                              "description": "Date and time when the GeographicSite was created",
                              "format": "date-time"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Text describing additional information regarding the site"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former"
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                  },
                                  "partyOrPartyRole": {
                                    "name": "partyOrPartyRole",
                                    "type": "union",
                                    "description": "",
                                    "oneOf": [
                                      {
                                        "name": "partyOrPartyRole_variant_0",
                                        "type": "object",
                                        "description": "Reference to PartyRef"
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_1",
                                        "type": "object",
                                        "description": "Reference to PartyRoleRef"
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_2",
                                        "type": "object",
                                        "properties": {
                                          "gender": {
                                            "name": "gender",
                                            "type": "string",
                                            "description": "Gender"
                                          },
                                          "placeOfBirth": {
                                            "name": "placeOfBirth",
                                            "type": "string",
                                            "description": "Reference to the place where the individual was born"
                                          },
                                          "countryOfBirth": {
                                            "name": "countryOfBirth",
                                            "type": "string",
                                            "description": "Country where the individual was born"
                                          },
                                          "nationality": {
                                            "name": "nationality",
                                            "type": "string",
                                            "description": "Nationality"
                                          },
                                          "maritalStatus": {
                                            "name": "maritalStatus",
                                            "type": "string",
                                            "description": "Marital status (married, divorced, widow ...)"
                                          },
                                          "birthDate": {
                                            "name": "birthDate",
                                            "type": "string",
                                            "description": "Birth date",
                                            "format": "date-time"
                                          },
                                          "deathDate": {
                                            "name": "deathDate",
                                            "type": "string",
                                            "description": "Date of death",
                                            "format": "date-time"
                                          },
                                          "title": {
                                            "name": "title",
                                            "type": "string",
                                            "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                                          },
                                          "aristocraticTitle": {
                                            "name": "aristocraticTitle",
                                            "type": "string",
                                            "description": "e.g. Baron, Graf, Earl"
                                          },
                                          "generation": {
                                            "name": "generation",
                                            "type": "string",
                                            "description": "e.g.. Sr, Jr, III (the third)"
                                          },
                                          "preferredGivenName": {
                                            "name": "preferredGivenName",
                                            "type": "string",
                                            "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                          },
                                          "familyNamePrefix": {
                                            "name": "familyNamePrefix",
                                            "type": "string",
                                            "description": "Family name prefix"
                                          },
                                          "legalName": {
                                            "name": "legalName",
                                            "type": "string",
                                            "description": "Legal name or birth name (name one has for official purposes)"
                                          },
                                          "middleName": {
                                            "name": "middleName",
                                            "type": "string",
                                            "description": "Middles name or initial"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                                          },
                                          "formattedName": {
                                            "name": "formattedName",
                                            "type": "string",
                                            "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                                          },
                                          "location": {
                                            "name": "location",
                                            "type": "string",
                                            "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Valid values for the lifecycle state of the individual",
                                            "enum": [
                                              "initialized",
                                              "validated",
                                              "deceased"
                                            ]
                                          },
                                          "otherName": {
                                            "name": "otherName",
                                            "type": "array",
                                            "description": "List of other names by which this individual is known",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                              "properties": {
                                                "title": {
                                                  "name": "title",
                                                  "type": "string",
                                                  "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                                },
                                                "aristocraticTitle": {
                                                  "name": "aristocraticTitle",
                                                  "type": "string",
                                                  "description": "e.g. Baron, Graf, Earl, etc."
                                                },
                                                "generation": {
                                                  "name": "generation",
                                                  "type": "string",
                                                  "description": "e.g. Sr, Jr, etc."
                                                },
                                                "givenName": {
                                                  "name": "givenName",
                                                  "type": "string",
                                                  "description": "First name"
                                                },
                                                "preferredGivenName": {
                                                  "name": "preferredGivenName",
                                                  "type": "string",
                                                  "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                                },
                                                "familyNamePrefix": {
                                                  "name": "familyNamePrefix",
                                                  "type": "string",
                                                  "description": "Family name prefix"
                                                },
                                                "familyName": {
                                                  "name": "familyName",
                                                  "type": "string",
                                                  "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                                },
                                                "legalName": {
                                                  "name": "legalName",
                                                  "type": "string",
                                                  "description": "Legal name or birth name (name one has for official purposes)"
                                                },
                                                "middleName": {
                                                  "name": "middleName",
                                                  "type": "string",
                                                  "description": "Middle name or initial"
                                                },
                                                "fullName": {
                                                  "name": "fullName",
                                                  "type": "string",
                                                  "description": "Full name flatten (first, middle, and last names)"
                                                },
                                                "formattedName": {
                                                  "name": "formattedName",
                                                  "type": "string",
                                                  "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "individualIdentification": {
                                            "name": "individualIdentification",
                                            "type": "array",
                                            "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "identificationId": {
                                                  "name": "identificationId",
                                                  "type": "string",
                                                  "description": "Identifier"
                                                },
                                                "issuingAuthority": {
                                                  "name": "issuingAuthority",
                                                  "type": "string",
                                                  "description": "Authority which has issued the identifier, such as: social security, town hall"
                                                },
                                                "issuingDate": {
                                                  "name": "issuingDate",
                                                  "type": "string",
                                                  "description": "Date at which the identifier was issued",
                                                  "format": "date-time"
                                                },
                                                "identificationType": {
                                                  "name": "identificationType",
                                                  "type": "string",
                                                  "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "attachment": {
                                                  "name": "attachment",
                                                  "type": "union",
                                                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                                  "oneOf": [
                                                    {
                                                      "name": "attachment_variant_0",
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "name": "name",
                                                          "type": "string",
                                                          "description": "The name of the attachment"
                                                        },
                                                        "description": {
                                                          "name": "description",
                                                          "type": "string",
                                                          "description": "A narrative text describing the content of the attachment"
                                                        },
                                                        "url": {
                                                          "name": "url",
                                                          "type": "string",
                                                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                                        },
                                                        "content": {
                                                          "name": "content",
                                                          "type": "string",
                                                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                                          "format": "base64"
                                                        },
                                                        "size": {
                                                          "name": "size",
                                                          "type": "object",
                                                          "description": "An amount in a given unit",
                                                          "properties": {
                                                            "amount": {
                                                              "name": "amount",
                                                              "type": "number",
                                                              "description": "Numeric value in a given unit",
                                                              "format": "float"
                                                            },
                                                            "units": {
                                                              "name": "units",
                                                              "type": "string",
                                                              "description": "Unit"
                                                            }
                                                          }
                                                        },
                                                        "validFor": {
                                                          "name": "validFor",
                                                          "type": "object",
                                                          "description": "Reference to TimePeriod"
                                                        },
                                                        "attachmentType": {
                                                          "name": "attachmentType",
                                                          "type": "string",
                                                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                                        },
                                                        "mimeType": {
                                                          "name": "mimeType",
                                                          "type": "string",
                                                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "attachment_variant_1",
                                                      "type": "object",
                                                      "properties": {
                                                        "description": {
                                                          "name": "description",
                                                          "type": "string",
                                                          "description": "A narrative text describing the content of the attachment"
                                                        },
                                                        "url": {
                                                          "name": "url",
                                                          "type": "string",
                                                          "description": "Link to the attachment media/content"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "disability": {
                                            "name": "disability",
                                            "type": "array",
                                            "description": "List of disabilities suffered by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Lack or inadequate strength or ability.",
                                              "properties": {
                                                "disabilityCode": {
                                                  "name": "disabilityCode",
                                                  "type": "string",
                                                  "description": "Code of the disability"
                                                },
                                                "disabilityName": {
                                                  "name": "disabilityName",
                                                  "type": "string",
                                                  "description": "Name of the disability"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "languageAbility": {
                                            "name": "languageAbility",
                                            "type": "array",
                                            "description": "List of national languages known by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Ability of an individual to understand or converse in a language.",
                                              "properties": {
                                                "languageCode": {
                                                  "name": "languageCode",
                                                  "type": "string",
                                                  "description": "Language code (RFC 5646)"
                                                },
                                                "languageName": {
                                                  "name": "languageName",
                                                  "type": "string",
                                                  "description": "Language name"
                                                },
                                                "isFavouriteLanguage": {
                                                  "name": "isFavouriteLanguage",
                                                  "type": "boolean",
                                                  "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                                },
                                                "writingProficiency": {
                                                  "name": "writingProficiency",
                                                  "type": "string",
                                                  "description": "Writing proficiency evaluated for this language"
                                                },
                                                "readingProficiency": {
                                                  "name": "readingProficiency",
                                                  "type": "string",
                                                  "description": "Reading proficiency evaluated for this language"
                                                },
                                                "speakingProficiency": {
                                                  "name": "speakingProficiency",
                                                  "type": "string",
                                                  "description": "Speaking proficiency evaluated for this language"
                                                },
                                                "listeningProficiency": {
                                                  "name": "listeningProficiency",
                                                  "type": "string",
                                                  "description": "Listening proficiency evaluated for this language"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "skill": {
                                            "name": "skill",
                                            "type": "array",
                                            "description": "List of skills exhibited by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                              "properties": {
                                                "skillCode": {
                                                  "name": "skillCode",
                                                  "type": "string",
                                                  "description": "Code of the skill"
                                                },
                                                "skillName": {
                                                  "name": "skillName",
                                                  "type": "string",
                                                  "description": "Name of the skill, such as Java language"
                                                },
                                                "evaluatedLevel": {
                                                  "name": "evaluatedLevel",
                                                  "type": "string",
                                                  "description": "Level of expertise in a skill evaluated for an individual"
                                                },
                                                "comment": {
                                                  "name": "comment",
                                                  "type": "string",
                                                  "description": "A free text comment linked to the evaluation done"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "familyName": {
                                            "name": "familyName",
                                            "type": "string",
                                            "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                          },
                                          "givenName": {
                                            "name": "givenName",
                                            "type": "string",
                                            "description": "First name of the individual"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_3",
                                        "type": "object",
                                        "properties": {
                                          "isLegalEntity": {
                                            "name": "isLegalEntity",
                                            "type": "boolean",
                                            "description": "If value is true, the organization is a legal entity known by a national referential."
                                          },
                                          "isHeadOffice": {
                                            "name": "isHeadOffice",
                                            "type": "boolean",
                                            "description": "If value is true, the organization is the head office"
                                          },
                                          "organizationType": {
                                            "name": "organizationType",
                                            "type": "string",
                                            "description": "Type of Organization (company, department...)"
                                          },
                                          "existsDuring": {
                                            "name": "existsDuring",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "Organization name (department name for example)"
                                          },
                                          "nameType": {
                                            "name": "nameType",
                                            "type": "string",
                                            "description": "Type of the name : Co, Inc, Ltd, etc."
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Valid values for the lifecycle state of the organization",
                                            "enum": [
                                              "initialized",
                                              "validated",
                                              "closed"
                                            ]
                                          },
                                          "otherName": {
                                            "name": "otherName",
                                            "type": "array",
                                            "description": "List of additional names by which the organization is known",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "tradingName": {
                                                  "name": "tradingName",
                                                  "type": "string",
                                                  "description": "The name that the organization trades under"
                                                },
                                                "nameType": {
                                                  "name": "nameType",
                                                  "type": "string",
                                                  "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                                },
                                                "name": {
                                                  "name": "name",
                                                  "type": "string",
                                                  "description": "Organization name (department name for example)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "organizationIdentification": {
                                            "name": "organizationIdentification",
                                            "type": "array",
                                            "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "identificationId": {
                                                  "name": "identificationId",
                                                  "type": "string",
                                                  "description": "Identifier"
                                                },
                                                "issuingAuthority": {
                                                  "name": "issuingAuthority",
                                                  "type": "string",
                                                  "description": "Authority which has issued the identifier (chamber of commerce...)"
                                                },
                                                "issuingDate": {
                                                  "name": "issuingDate",
                                                  "type": "string",
                                                  "description": "Date at which the identifier was issued",
                                                  "format": "date-time"
                                                },
                                                "identificationType": {
                                                  "name": "identificationType",
                                                  "type": "string",
                                                  "description": "Type of identification information used to identify the company in a country or internationally"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "attachment": {
                                                  "name": "attachment",
                                                  "type": "object",
                                                  "description": "Reference to AttachmentRefOrValue"
                                                }
                                              }
                                            }
                                          },
                                          "organizationChildRelationship": {
                                            "name": "organizationChildRelationship",
                                            "type": "array",
                                            "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "relationshipType": {
                                                  "name": "relationshipType",
                                                  "type": "string",
                                                  "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                                },
                                                "organization": {
                                                  "name": "organization",
                                                  "type": "object",
                                                  "properties": {}
                                                }
                                              }
                                            }
                                          },
                                          "organizationParentRelationship": {
                                            "name": "organizationParentRelationship",
                                            "type": "object",
                                            "properties": {
                                              "relationshipType": {
                                                "name": "relationshipType",
                                                "type": "string",
                                                "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                              },
                                              "organization": {
                                                "name": "organization",
                                                "type": "object",
                                                "description": "Reference to OrganizationRef"
                                              }
                                            }
                                          },
                                          "tradingName": {
                                            "name": "tradingName",
                                            "type": "string",
                                            "description": "Name that the organization (unit) trades under"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_4",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A description of the PartyRole."
                                          },
                                          "role": {
                                            "name": "role",
                                            "type": "string",
                                            "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
                                          },
                                          "engagedParty": {
                                            "name": "engagedParty",
                                            "type": "object",
                                            "description": "Reference to PartyRef"
                                          },
                                          "partyRoleSpecification": {
                                            "name": "partyRoleSpecification",
                                            "type": "object",
                                            "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                                            "properties": {}
                                          },
                                          "characteristic": {
                                            "name": "characteristic",
                                            "type": "array",
                                            "description": "Describes the characteristic of a party role.",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to Characteristic"
                                            }
                                          },
                                          "account": {
                                            "name": "account",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Account reference. A account may be a party account or a financial account.",
                                              "properties": {}
                                            }
                                          },
                                          "agreement": {
                                            "name": "agreement",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                              "properties": {}
                                            }
                                          },
                                          "contactMedium": {
                                            "name": "contactMedium",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Identifier for this contact medium."
                                                },
                                                "preferred": {
                                                  "name": "preferred",
                                                  "type": "boolean",
                                                  "description": "If true, indicates that is the preferred contact medium"
                                                },
                                                "contactType": {
                                                  "name": "contactType",
                                                  "type": "string",
                                                  "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "paymentMethod": {
                                            "name": "paymentMethod",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                              "properties": {}
                                            }
                                          },
                                          "creditProfile": {
                                            "name": "creditProfile",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "creditProfileDate": {
                                                  "name": "creditProfileDate",
                                                  "type": "string",
                                                  "description": "The date the profile was established",
                                                  "format": "date-time"
                                                },
                                                "creditRiskRating": {
                                                  "name": "creditRiskRating",
                                                  "type": "integer",
                                                  "description": "This is an integer whose value is used to rate the risk"
                                                },
                                                "creditScore": {
                                                  "name": "creditScore",
                                                  "type": "integer",
                                                  "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "relatedParty": {
                                            "name": "relatedParty",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to RelatedPartyOrPartyRole"
                                            }
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Used to track the lifecycle status of the party role."
                                          },
                                          "statusReason": {
                                            "name": "statusReason",
                                            "type": "string",
                                            "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_5",
                                        "type": "object",
                                        "description": "When business partner is the Supplier ",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_6",
                                        "type": "object",
                                        "description": "When business partner is the BusinessPartner ",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_7",
                                        "type": "object",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_8",
                                        "type": "object",
                                        "properties": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "externalIdentifier": {
                              "name": "externalIdentifier",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ExternalIdentifier"
                              }
                            },
                            "calendar": {
                              "name": "calendar",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "day": {
                                    "name": "day",
                                    "type": "string",
                                    "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, ...)"
                                  },
                                  "timeZone": {
                                    "name": "timeZone",
                                    "type": "string",
                                    "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)"
                                  },
                                  "hourPeriod": {
                                    "name": "hourPeriod",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "endHour": {
                                          "name": "endHour",
                                          "type": "string",
                                          "description": "The time when the status ends applying"
                                        },
                                        "startHour": {
                                          "name": "startHour",
                                          "type": "string",
                                          "description": "The time when the status starts applying"
                                        }
                                      }
                                    }
                                  },
                                  "status": {
                                    "name": "status",
                                    "type": "string",
                                    "description": "Indication of the availability of the caledar period (e.g.: available, booked, etc.)"
                                  }
                                }
                              }
                            },
                            "place": {
                              "name": "place",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to PlaceRefOrValue"
                              }
                            },
                            "siteRelationship": {
                              "name": "siteRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Reference of the related geographic site"
                                  },
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role of the related site in the relationship"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the related site entity within the server"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Type of relationship"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "name": "place_variant_2",
                          "type": "object",
                          "properties": {
                            "city": {
                              "name": "city",
                              "type": "string",
                              "description": "City that the address is in"
                            },
                            "country": {
                              "name": "country",
                              "type": "string",
                              "description": "Country that the address is in"
                            },
                            "locality": {
                              "name": "locality",
                              "type": "string",
                              "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                            },
                            "postcode": {
                              "name": "postcode",
                              "type": "string",
                              "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                            },
                            "stateOrProvince": {
                              "name": "stateOrProvince",
                              "type": "string",
                              "description": "the State or Province that the address is in"
                            },
                            "streetName": {
                              "name": "streetName",
                              "type": "string",
                              "description": "Name of the street or other street type"
                            },
                            "streetNr": {
                              "name": "streetNr",
                              "type": "string",
                              "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                            },
                            "streetNrLast": {
                              "name": "streetNrLast",
                              "type": "string",
                              "description": "Last number in a range of street numbers allocated to a property"
                            },
                            "streetNrLastSuffix": {
                              "name": "streetNrLastSuffix",
                              "type": "string",
                              "description": "Last street number suffix for a ranged address"
                            },
                            "streetNrSuffix": {
                              "name": "streetNrSuffix",
                              "type": "string",
                              "description": "the first street number suffix"
                            },
                            "streetSuffix": {
                              "name": "streetSuffix",
                              "type": "string",
                              "description": "A modifier denoting a relative direction"
                            },
                            "streetType": {
                              "name": "streetType",
                              "type": "string",
                              "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                            },
                            "countryCode": {
                              "name": "countryCode",
                              "type": "array",
                              "description": "Country codes are short alphabetic or numeric geographical codes (geocodes) developed to represent countries and dependent areas, for use in data processing and communications. Several different systems have been developed to do this. The term country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes, the E.164 country calling codes.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "format": {
                                    "name": "format",
                                    "type": "string",
                                    "description": "Standard/Regulatory definition identifier. e.g., ISO 3166-1"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "The value of the resource in the corresponding standard.e.g., a country code value"
                                  }
                                }
                              }
                            },
                            "externalIdentifier": {
                              "name": "externalIdentifier",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ExternalIdentifier"
                              }
                            },
                            "geographicLocation": {
                              "name": "geographicLocation",
                              "type": "union",
                              "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicLocation entity and not the GeographicLocationRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "geographicLocation_variant_0",
                                  "type": "object",
                                  "description": "Reference to GeographicLocation"
                                },
                                {
                                  "name": "geographicLocation_variant_1",
                                  "type": "object",
                                  "properties": {}
                                }
                              ]
                            },
                            "geographicSubAddress": {
                              "name": "geographicSubAddress",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "buildingName": {
                                    "name": "buildingName",
                                    "type": "string",
                                    "description": "allows for buildings that have well-known names"
                                  },
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Link to the subAddress"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique Identifier of the subAddress"
                                  },
                                  "levelNumber": {
                                    "name": "levelNumber",
                                    "type": "string",
                                    "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                                  },
                                  "levelType": {
                                    "name": "levelType",
                                    "type": "string",
                                    "description": "describes level types within a building"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the subAddress to identify it with a meaningful identification"
                                  },
                                  "privateStreetName": {
                                    "name": "privateStreetName",
                                    "type": "string",
                                    "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                                  },
                                  "privateStreetNumber": {
                                    "name": "privateStreetNumber",
                                    "type": "string",
                                    "description": "private streets numbers internal to a private street"
                                  },
                                  "subUnit": {
                                    "name": "subUnit",
                                    "type": "array",
                                    "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "subUnitNumber": {
                                          "name": "subUnitNumber",
                                          "type": "string",
                                          "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                                        },
                                        "subUnitType": {
                                          "name": "subUnitType",
                                          "type": "string",
                                          "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                                        }
                                      }
                                    }
                                  },
                                  "subAddressType": {
                                    "name": "subAddressType",
                                    "type": "string",
                                    "description": "Type of subAddress : it can be a subunit or a private street"
                                  }
                                }
                              }
                            },
                            "geographicAddressType": {
                              "name": "geographicAddressType",
                              "type": "string",
                              "description": "Classification of the address, e.g., residential, industrial "
                            }
                          }
                        },
                        {
                          "name": "place_variant_3",
                          "type": "object",
                          "description": "Place reference.",
                          "properties": {}
                        }
                      ]
                    }
                  }
                }
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Valid values for the lifecycle state of the service",
                "enum": [
                  "feasibilityChecked",
                  "designed",
                  "reserved",
                  "inactive",
                  "active",
                  "terminated",
                  "suspended"
                ]
              },
              "operatingStatus": {
                "name": "operatingStatus",
                "type": "string",
                "description": "Valid values for the Operating status of the service",
                "enum": [
                  "pending",
                  "configured",
                  "starting",
                  "running",
                  "degraded",
                  "failed",
                  "limited",
                  "stopping",
                  "stopped",
                  "unknown"
                ]
              },
              "serviceSpecification": {
                "name": "serviceSpecification",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "Service specification version"
                  }
                }
              },
              "serviceDate": {
                "name": "serviceDate",
                "type": "string",
                "description": "Date when the service was created (whatever its status)."
              },
              "intent": {
                "name": "intent",
                "type": "union",
                "description": "Intent Ref (if Intent already exists) or Value (if Intent be created or its details be presented)",
                "oneOf": [
                  {
                    "name": "intent_variant_0",
                    "type": "object",
                    "description": "Intent reference, for when Intent is used by other entities",
                    "properties": {}
                  },
                  {
                    "name": "intent_variant_1",
                    "type": "object",
                    "properties": {
                      "description": {
                        "name": "description",
                        "type": "string",
                        "description": "The description of the intent."
                      },
                      "validFor": {
                        "name": "validFor",
                        "type": "object",
                        "description": "Reference to TimePeriod"
                      },
                      "isBundle": {
                        "name": "isBundle",
                        "type": "boolean",
                        "description": "isBundle determines whether an intent represents a single intent (false), or a bundle of intents(true)."
                      },
                      "priority": {
                        "name": "priority",
                        "type": "string",
                        "description": "Can be used by intent owner to prioritize intents in an intent management system"
                      },
                      "statusChangeDate": {
                        "name": "statusChangeDate",
                        "type": "string",
                        "description": "A date time( DateTime). The date that the entity status changed to the current one",
                        "format": "date-time"
                      },
                      "context": {
                        "name": "context",
                        "type": "string",
                        "description": "A string used to give a context to the intent"
                      },
                      "version": {
                        "name": "version",
                        "type": "string",
                        "description": "A field that identifies the specific version of an instance of an intent."
                      },
                      "intentSpecification": {
                        "name": "intentSpecification",
                        "type": "object",
                        "description": "Reference to EntityRef"
                      },
                      "intentRelationship": {
                        "name": "intentRelationship",
                        "type": "array",
                        "description": "A list of intents related to this intent",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "A uni-directionmal relationship from this entity to a target entity instance",
                          "properties": {
                            "href": {
                              "name": "href",
                              "type": "string"
                            },
                            "name": {
                              "name": "name",
                              "type": "string"
                            },
                            "role": {
                              "name": "role",
                              "type": "string",
                              "description": "The association role for this entity"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "associationSpec": {
                              "name": "associationSpec",
                              "type": "object",
                              "description": "Reference to EntityRef"
                            },
                            "@baseType": {
                              "name": "@baseType",
                              "type": "string",
                              "description": "When sub-classing, this defines the super-class"
                            },
                            "@schemaLocation": {
                              "name": "@schemaLocation",
                              "type": "string",
                              "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                            },
                            "relationshipType": {
                              "name": "relationshipType",
                              "type": "string",
                              "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                            },
                            "id": {
                              "name": "id",
                              "type": "string"
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string"
                            },
                            "@type": {
                              "name": "@type",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "characteristic": {
                        "name": "characteristic",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to Characteristic"
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                        }
                      },
                      "attachment": {
                        "name": "attachment",
                        "type": "array",
                        "description": "Attachments that may be of relevance to this intent, such as picture, document, media",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to AttachmentRefOrValue"
                        }
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "The name of the intent."
                      },
                      "expression": {
                        "name": "expression",
                        "type": "object",
                        "properties": {
                          "expressionLanguage": {
                            "name": "expressionLanguage",
                            "type": "string",
                            "description": "Possible values for the serialized Expression language of an intent or Intent report",
                            "enum": [
                              "Turtle",
                              "JSON-LD",
                              "RDF-XML",
                              "Other"
                            ]
                          },
                          "iri": {
                            "name": "iri",
                            "type": "string",
                            "description": "Internationalized Resource Identifier of the intent Expression"
                          },
                          "expressionValue": {
                            "name": "expressionValue",
                            "type": "string",
                            "description": "expression value is the ontology-encoded form of the Intent such as RDF-XML, Turtle, Json-LD,..."
                          }
                        }
                      },
                      "creationDate": {
                        "name": "creationDate",
                        "type": "string",
                        "description": "Date and time of the creation of this REST resource",
                        "format": "date-time"
                      },
                      "lastUpdate": {
                        "name": "lastUpdate",
                        "type": "string",
                        "description": "Date and time of the last update of this REST resource",
                        "format": "date-time"
                      },
                      "lifecycleStatus": {
                        "name": "lifecycleStatus",
                        "type": "string",
                        "description": "Used to indicate the current lifecycle status of this intent"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "intent": {
    "tableName": "Intent",
    "endpoints": [
      {
        "operationId": "listIntent",
        "path": "/intent",
        "method": "get"
      },
      {
        "operationId": "createIntent",
        "path": "/intent",
        "method": "post"
      },
      {
        "operationId": "retrieveIntent",
        "path": "/intent/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteIntent",
        "path": "/intent/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchIntent",
        "path": "/intent/{id}",
        "method": "patch"
      },
      {
        "operationId": "listIntentIntentReport",
        "path": "/intent/{intentId}/intentReport",
        "method": "get"
      },
      {
        "operationId": "retrieveIntentIntentReport",
        "path": "/intent/{intentId}/intentReport/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteIntentIntentReport",
        "path": "/intent/{intentId}/intentReport/{id}",
        "method": "delete"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "The description of the intent."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether an intent represents a single intent (false), or a bundle of intents(true)."
              },
              "priority": {
                "name": "priority",
                "type": "string",
                "description": "Can be used by intent owner to prioritize intents in an intent management system"
              },
              "statusChangeDate": {
                "name": "statusChangeDate",
                "type": "string",
                "description": "A date time( DateTime). The date that the entity status changed to the current one",
                "format": "date-time"
              },
              "context": {
                "name": "context",
                "type": "string",
                "description": "A string used to give a context to the intent"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "A field that identifies the specific version of an instance of an intent."
              },
              "intentSpecification": {
                "name": "intentSpecification",
                "type": "object",
                "properties": {
                  "id": {
                    "name": "id",
                    "type": "string",
                    "description": "The identifier of the referred entity."
                  },
                  "href": {
                    "name": "href",
                    "type": "string",
                    "description": "The URI of the referred entity."
                  },
                  "name": {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the referred entity."
                  },
                  "@referredType": {
                    "name": "@referredType",
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                  }
                }
              },
              "intentRelationship": {
                "name": "intentRelationship",
                "type": "array",
                "description": "A list of intents related to this intent",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A uni-directionmal relationship from this entity to a target entity instance",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "name": {
                      "name": "name",
                      "type": "string"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this entity"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "associationSpec": {
                      "name": "associationSpec",
                      "type": "object",
                      "description": "Reference to EntityRef"
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string",
                      "description": "When sub-classing, this defines the super-class"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string",
                      "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    },
                    "id": {
                      "name": "id",
                      "type": "string"
                    },
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string"
                    },
                    "@type": {
                      "name": "@type",
                      "type": "string"
                    }
                  }
                }
              },
              "characteristic": {
                "name": "characteristic",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this intent, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "The name of the intent."
              },
              "expression": {
                "name": "expression",
                "type": "object",
                "properties": {
                  "iri": {
                    "name": "iri",
                    "type": "string",
                    "description": "Internationalized Resource Identifier of the intent Expression"
                  }
                }
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date and time of the creation of this REST resource",
                "format": "date-time"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of this REST resource",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this intent"
              }
            }
          }
        }
      }
    }
  },
  "intentReport": {
    "tableName": "IntentReport",
    "endpoints": [
      {
        "operationId": "listIntentIntentReport",
        "path": "/intent/{intentId}/intentReport",
        "method": "get"
      },
      {
        "operationId": "retrieveIntentIntentReport",
        "path": "/intent/{intentId}/intentReport/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteIntentIntentReport",
        "path": "/intent/{intentId}/intentReport/{id}",
        "method": "delete"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "The description of the intent report."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "intent": {
                "name": "intent",
                "type": "union",
                "description": "Intent Ref (if Intent already exists) or Value (if Intent be created or its details be presented)",
                "oneOf": [
                  {
                    "name": "intent_variant_0",
                    "type": "object",
                    "description": "Intent reference, for when Intent is used by other entities",
                    "properties": {}
                  },
                  {
                    "name": "intent_variant_1",
                    "type": "object",
                    "properties": {
                      "description": {
                        "name": "description",
                        "type": "string",
                        "description": "The description of the intent."
                      },
                      "validFor": {
                        "name": "validFor",
                        "type": "object",
                        "description": "Reference to TimePeriod"
                      },
                      "isBundle": {
                        "name": "isBundle",
                        "type": "boolean",
                        "description": "isBundle determines whether an intent represents a single intent (false), or a bundle of intents(true)."
                      },
                      "priority": {
                        "name": "priority",
                        "type": "string",
                        "description": "Can be used by intent owner to prioritize intents in an intent management system"
                      },
                      "statusChangeDate": {
                        "name": "statusChangeDate",
                        "type": "string",
                        "description": "A date time( DateTime). The date that the entity status changed to the current one",
                        "format": "date-time"
                      },
                      "context": {
                        "name": "context",
                        "type": "string",
                        "description": "A string used to give a context to the intent"
                      },
                      "version": {
                        "name": "version",
                        "type": "string",
                        "description": "A field that identifies the specific version of an instance of an intent."
                      },
                      "intentSpecification": {
                        "name": "intentSpecification",
                        "type": "object",
                        "description": "Reference to EntityRef"
                      },
                      "intentRelationship": {
                        "name": "intentRelationship",
                        "type": "array",
                        "description": "A list of intents related to this intent",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "A uni-directionmal relationship from this entity to a target entity instance",
                          "properties": {
                            "href": {
                              "name": "href",
                              "type": "string"
                            },
                            "name": {
                              "name": "name",
                              "type": "string"
                            },
                            "role": {
                              "name": "role",
                              "type": "string",
                              "description": "The association role for this entity"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "associationSpec": {
                              "name": "associationSpec",
                              "type": "object",
                              "description": "Reference to EntityRef"
                            },
                            "@baseType": {
                              "name": "@baseType",
                              "type": "string",
                              "description": "When sub-classing, this defines the super-class"
                            },
                            "@schemaLocation": {
                              "name": "@schemaLocation",
                              "type": "string",
                              "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                            },
                            "relationshipType": {
                              "name": "relationshipType",
                              "type": "string",
                              "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                            },
                            "id": {
                              "name": "id",
                              "type": "string"
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string"
                            },
                            "@type": {
                              "name": "@type",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "characteristic": {
                        "name": "characteristic",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the characteristic"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the characteristic"
                            },
                            "valueType": {
                              "name": "valueType",
                              "type": "string",
                              "description": "Data type of the value of the characteristic"
                            },
                            "characteristicRelationship": {
                              "name": "characteristicRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "The type of relationship"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "role": {
                              "name": "role",
                              "type": "string",
                              "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                            },
                            "partyOrPartyRole": {
                              "name": "partyOrPartyRole",
                              "type": "union",
                              "description": "",
                              "oneOf": [
                                {
                                  "name": "partyOrPartyRole_variant_0",
                                  "type": "object",
                                  "description": "A Party reference",
                                  "properties": {}
                                },
                                {
                                  "name": "partyOrPartyRole_variant_1",
                                  "type": "object",
                                  "properties": {
                                    "partyId": {
                                      "name": "partyId",
                                      "type": "string",
                                      "description": "The identifier of the engaged party that is linked to the PartyRole object."
                                    },
                                    "partyName": {
                                      "name": "partyName",
                                      "type": "string",
                                      "description": "The name of the engaged party that is linked to the PartyRole object."
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "attachment": {
                        "name": "attachment",
                        "type": "array",
                        "description": "Attachments that may be of relevance to this intent, such as picture, document, media",
                        "items": {
                          "name": "items",
                          "type": "union",
                          "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                          "oneOf": [
                            {
                              "name": "items_variant_0",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The name of the attachment"
                                },
                                "description": {
                                  "name": "description",
                                  "type": "string",
                                  "description": "A narrative text describing the content of the attachment"
                                },
                                "url": {
                                  "name": "url",
                                  "type": "string",
                                  "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                },
                                "content": {
                                  "name": "content",
                                  "type": "string",
                                  "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                  "format": "base64"
                                },
                                "size": {
                                  "name": "size",
                                  "type": "object",
                                  "description": "An amount in a given unit",
                                  "properties": {
                                    "amount": {
                                      "name": "amount",
                                      "type": "number",
                                      "description": "Numeric value in a given unit",
                                      "format": "float"
                                    },
                                    "units": {
                                      "name": "units",
                                      "type": "string",
                                      "description": "Unit"
                                    }
                                  }
                                },
                                "validFor": {
                                  "name": "validFor",
                                  "type": "object",
                                  "description": "Reference to TimePeriod"
                                },
                                "attachmentType": {
                                  "name": "attachmentType",
                                  "type": "string",
                                  "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                },
                                "mimeType": {
                                  "name": "mimeType",
                                  "type": "string",
                                  "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                }
                              }
                            },
                            {
                              "name": "items_variant_1",
                              "type": "object",
                              "properties": {
                                "description": {
                                  "name": "description",
                                  "type": "string",
                                  "description": "A narrative text describing the content of the attachment"
                                },
                                "url": {
                                  "name": "url",
                                  "type": "string",
                                  "description": "Link to the attachment media/content"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "The name of the intent."
                      },
                      "expression": {
                        "name": "expression",
                        "type": "object",
                        "properties": {
                          "iri": {
                            "name": "iri",
                            "type": "string",
                            "description": "Internationalized Resource Identifier of the intent Expression"
                          }
                        }
                      },
                      "creationDate": {
                        "name": "creationDate",
                        "type": "string",
                        "description": "Date and time of the creation of this REST resource",
                        "format": "date-time"
                      },
                      "lastUpdate": {
                        "name": "lastUpdate",
                        "type": "string",
                        "description": "Date and time of the last update of this REST resource",
                        "format": "date-time"
                      },
                      "lifecycleStatus": {
                        "name": "lifecycleStatus",
                        "type": "string",
                        "description": "Used to indicate the current lifecycle status of this intent"
                      }
                    }
                  }
                ]
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "The name of the intent report."
              },
              "expression": {
                "name": "expression",
                "type": "object",
                "description": "Reference to IntentExpression"
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date and time of the creation of this intent report",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "intentSpecification": {
    "tableName": "IntentSpecification",
    "endpoints": [
      {
        "operationId": "listIntentSpecification",
        "path": "/intentSpecification",
        "method": "get"
      },
      {
        "operationId": "createIntentSpecification",
        "path": "/intentSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveIntentSpecification",
        "path": "/intentSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteIntentSpecification",
        "path": "/intentSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchIntentSpecification",
        "path": "/intentSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the specification"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether an intent specification represents a single intent specification (false), or a bundle of intent specifications(true)."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "A field that identifies the specific version of this specification. If not specified version is defaulted to 1.0"
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "targetEntitySchema": {
                "name": "targetEntitySchema",
                "type": "object",
                "description": "The reference object to the schema and type of target entity which is described by a specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target entity"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target entity"
                  }
                }
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "constraint": {
                "name": "constraint",
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "constraint version"
                    }
                  }
                }
              },
              "entitySpecRelationship": {
                "name": "entitySpecRelationship",
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications.",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "name": {
                      "name": "name",
                      "type": "string"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this entity specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "associationSpec": {
                      "name": "associationSpec",
                      "type": "object",
                      "description": "reference to an AssociationSpecification object",
                      "properties": {}
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    }
                  }
                }
              },
              "expressionSpecification": {
                "name": "expressionSpecification",
                "type": "object",
                "properties": {
                  "expressionLanguage": {
                    "name": "expressionLanguage",
                    "type": "string",
                    "description": "The serialized Expression language of the target intent."
                  },
                  "iri": {
                    "name": "iri",
                    "type": "string",
                    "description": "Internationalized Resource Identifier of the intent Expression"
                  }
                }
              },
              "intentSpecRelationship": {
                "name": "intentSpecRelationship",
                "type": "array",
                "description": "A list of intent specifications related to this specification, e.g. substitution, dependency or exclusivity relationship",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this intent specification"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as substitution, dependency, exclusivity"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "aiContractSpecification": {
    "tableName": "AiContractSpecification",
    "endpoints": [
      {
        "operationId": "listAiContractSpecification",
        "path": "/aiContractSpecification",
        "method": "get"
      },
      {
        "operationId": "createAiContractSpecification",
        "path": "/aiContractSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveAiContractSpecification",
        "path": "/aiContractSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteAiContractSpecification",
        "path": "/aiContractSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchAiContractSpecification",
        "path": "/aiContractSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "aiModel": {
    "tableName": "AiModel",
    "endpoints": [
      {
        "operationId": "listAiModel",
        "path": "/aiModel",
        "method": "get"
      },
      {
        "operationId": "createAiModel",
        "path": "/aiModel",
        "method": "post"
      },
      {
        "operationId": "retrieveAiModel",
        "path": "/aiModel/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteAiModel",
        "path": "/aiModel/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchAiModel",
        "path": "/aiModel/{id}",
        "method": "patch"
      }
    ]
  },
  "aiModelSpecification": {
    "tableName": "AiModelSpecification",
    "endpoints": [
      {
        "operationId": "listAiModelSpecification",
        "path": "/aiModelSpecification",
        "method": "get"
      },
      {
        "operationId": "createAiModelSpecification",
        "path": "/aiModelSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveAiModelSpecification",
        "path": "/aiModelSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteAiModelSpecification",
        "path": "/aiModelSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchAiModelSpecification",
        "path": "/aiModelSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "aiContract": {
    "tableName": "AiContract",
    "endpoints": [
      {
        "operationId": "listAiContract",
        "path": "/aiContract",
        "method": "get"
      },
      {
        "operationId": "createAiContract",
        "path": "/aiContract",
        "method": "post"
      },
      {
        "operationId": "retrieveAiContract",
        "path": "/aiContract/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteAiContract",
        "path": "/aiContract/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchAiContract",
        "path": "/aiContract/{id}",
        "method": "patch"
      }
    ]
  },
  "aiContractViolation": {
    "tableName": "AiContractViolation",
    "endpoints": [
      {
        "operationId": "listAiContractViolation",
        "path": "/aiContractViolation",
        "method": "get"
      },
      {
        "operationId": "createAiContractViolation",
        "path": "/aiContractViolation",
        "method": "post"
      },
      {
        "operationId": "retrieveAiContractViolation",
        "path": "/aiContractViolation/{id}",
        "method": "get"
      }
    ]
  },
  "alarm": {
    "tableName": "Alarm",
    "endpoints": [
      {
        "operationId": "listAlarm",
        "path": "/alarm",
        "method": "get"
      },
      {
        "operationId": "createAlarm",
        "path": "/alarm",
        "method": "post"
      },
      {
        "operationId": "retrieveAlarm",
        "path": "/alarm/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteAlarm",
        "path": "/alarm/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchAlarm",
        "path": "/alarm/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "externalAlarmId": {
                "name": "externalAlarmId",
                "type": "string",
                "description": "An identifier of the alarm in the source system."
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Defines the alarm state during its life cycle (raised, updated, cleared).",
                "enum": [
                  "raised",
                  "updated",
                  "cleared"
                ]
              },
              "alarmType": {
                "name": "alarmType",
                "type": "string",
                "description": "Categorizes the alarm (X.733 8.1.1, 3GPP TS 32.111-2 Annex A)",
                "enum": [
                  "communicationsAlarm",
                  "processingErrorAlarm",
                  "environmentalAlarm",
                  "qualityOfServiceAlarm",
                  "equipmentAlarm",
                  "integrityViolation",
                  "operationalViolation",
                  "physicalViolation",
                  "securityService",
                  "mechanismViolation",
                  "timeDomainViolation"
                ]
              },
              "perceivedSeverity": {
                "name": "perceivedSeverity",
                "type": "string",
                "description": "Lists the possible severities that can be allocated to an Alarm. The values are consistent with ITU-T Recommendation X.733.\nOnce an alarm has been cleared, its perceived severity is set to 'cleared' and can no longer be set.",
                "enum": [
                  "critical",
                  "major",
                  "minor",
                  "warning",
                  "indeterminate",
                  "cleared"
                ]
              },
              "probableCause": {
                "name": "probableCause",
                "type": "string",
                "description": "Provides the probable cause of the alarm. The values are consistent with ITU-T Recommendation X.733 or 3GPP TS 32.111-2 Annex B."
              },
              "specificProblem": {
                "name": "specificProblem",
                "type": "string",
                "description": "Provides more specific information about the alarm."
              },
              "alarmedObjectType": {
                "name": "alarmedObjectType",
                "type": "string",
                "description": "The type (class) of the managed object associated with the event."
              },
              "alarmedObject": {
                "name": "alarmedObject",
                "type": "object",
                "description": "Reference to object which affected by Alarm (AlarmedObject).",
                "properties": {}
              },
              "reportingSystemId": {
                "name": "reportingSystemId",
                "type": "string",
                "description": "Reporting system identity."
              },
              "sourceSystemId": {
                "name": "sourceSystemId",
                "type": "string",
                "description": "Source system identity."
              },
              "alarmDetails": {
                "name": "alarmDetails",
                "type": "string",
                "description": "Contains further information on the alarm."
              },
              "alarmRaisedTime": {
                "name": "alarmRaisedTime",
                "type": "string",
                "description": "Indicates the time (as a date + time) at which the alarm occurred at its source.",
                "format": "date-time"
              },
              "alarmChangedTime": {
                "name": "alarmChangedTime",
                "type": "string",
                "description": "Indicates the last date and time when the alarm is changed on the alarm-owning system. Any change to the alarm whether coming from the alarmed resource, or triggered by a change from the client is changing this time.",
                "format": "date-time"
              },
              "alarmClearedTime": {
                "name": "alarmClearedTime",
                "type": "string",
                "description": "Indicates the time (as a date + time) at which the alarm is cleared at the source. ",
                "format": "date-time"
              },
              "alarmReportingTime": {
                "name": "alarmReportingTime",
                "type": "string",
                "description": "Indicates the time (as a date + time) at which the alarm was reported by the owning OSS. It might be different from the alarmRaisedTime. For instance, if the alarm list is maintained by an EMS, the alarmRaisedtime would be the time the alarm\n  was detected by the NE, while the alarmReportingTime would be the time this alarm was stored in the alarm list of the EMS.",
                "format": "date-time"
              },
              "ackState": {
                "name": "ackState",
                "type": "string",
                "description": "Provides the Acknowledgement State of the alarm (unacknowledged, acknowledged).",
                "enum": [
                  "unacknowledged",
                  "acknowledged"
                ]
              },
              "ackSystemId": {
                "name": "ackSystemId",
                "type": "string",
                "description": "Provides the name of the system that last changed the ackState of an alarm, i.e. acknowledged or unacknowledged the alarm."
              },
              "ackUserId": {
                "name": "ackUserId",
                "type": "string",
                "description": "Provides the id of the user who has last changed the ack state of the alarm, i.e. acknowledged or unacknowledged the alarm."
              },
              "affectedService": {
                "name": "affectedService",
                "type": "array",
                "description": "Provides list of affected services.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Service reference, for when Service is used by other entities.",
                  "properties": {}
                }
              },
              "alarmEscalation": {
                "name": "alarmEscalation",
                "type": "boolean",
                "description": "Indicates if this alarm has been escalated or not. "
              },
              "clearSystemId": {
                "name": "clearSystemId",
                "type": "string",
                "description": "Provides the id of the system where the user who invoked the alarmCleared operation is located. "
              },
              "clearUserId": {
                "name": "clearUserId",
                "type": "string",
                "description": "Provides the id of the user who invoked the alarmCleared operation"
              },
              "comment": {
                "name": "comment",
                "type": "array",
                "description": "Provides list of Comments regards Alarm.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "userId": {
                      "name": "userId",
                      "type": "string",
                      "description": "Indicates the user commenting the alarm."
                    },
                    "systemId": {
                      "name": "systemId",
                      "type": "string",
                      "description": "Indicates the system identifier on which the client set the comment."
                    },
                    "time": {
                      "name": "time",
                      "type": "string",
                      "description": "Indicates the time commenting the alarm",
                      "format": "date-time"
                    },
                    "comment": {
                      "name": "comment",
                      "type": "string",
                      "description": "Indicates the text of the comment."
                    }
                  }
                }
              },
              "correlatedAlarm": {
                "name": "correlatedAlarm",
                "type": "array",
                "description": "Provides list of correlated Alarms.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {}
                }
              },
              "crossedThresholdInformation": {
                "name": "crossedThresholdInformation",
                "type": "object",
                "description": "Identifies the details of the threshold that has been crossed.",
                "properties": {
                  "threshold": {
                    "name": "threshold",
                    "type": "object",
                    "properties": {}
                  },
                  "direction": {
                    "name": "direction",
                    "type": "string",
                    "description": "Indicates the threshold crossing direction: up or down."
                  },
                  "granularity": {
                    "name": "granularity",
                    "type": "string",
                    "description": "Indicates the granularity at which the indicator is evaluated for threshold crossing"
                  },
                  "indicatorName": {
                    "name": "indicatorName",
                    "type": "string",
                    "description": "Indicates the name of indicator which crossed the threshold."
                  },
                  "indicatorUnit": {
                    "name": "indicatorUnit",
                    "type": "string",
                    "description": "Indicates the unit of the measurement of the indicator corresponding to the threshold that has been crossed."
                  },
                  "observedValue": {
                    "name": "observedValue",
                    "type": "string",
                    "description": "Indicates the value of the indicator which crossed the threshold."
                  },
                  "thresholdCrossingDescription": {
                    "name": "thresholdCrossingDescription",
                    "type": "string",
                    "description": "Indicates further information on the threshold crossing alarm."
                  }
                }
              },
              "isRootCause": {
                "name": "isRootCause",
                "type": "boolean",
                "description": "Indicates whether the alarm is a root cause alarm.. "
              },
              "parentAlarm": {
                "name": "parentAlarm",
                "type": "array",
                "description": "Provides list of parrent Alarms.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to AlarmRef"
                }
              },
              "plannedOutageIndicator": {
                "name": "plannedOutageIndicator",
                "type": "string",
                "description": "Indicates that the Managed Object (related to this alarm) is in planned outage (in planned maintenance, or out-of-service). ",
                "enum": [
                  "InService",
                  "OutOfService"
                ]
              },
              "proposedRepairedActions": {
                "name": "proposedRepairedActions",
                "type": "string",
                "description": "Indicates proposed repair actions, if known to the system emitting the alarm."
              },
              "serviceAffecting": {
                "name": "serviceAffecting",
                "type": "boolean",
                "description": "Indicates whether the alarm affects service or not."
              },
              "place": {
                "name": "place",
                "type": "array",
                "description": "List of related places, which are affected by Alarm.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "relatedPlace": {
                      "name": "relatedPlace",
                      "type": "object",
                      "properties": {
                        "externalIdentifier": {
                          "name": "externalIdentifier",
                          "type": "array",
                          "description": "Collection of external identifiers",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "owner": {
                                "name": "owner",
                                "type": "string",
                                "description": "Name of the external system that owns the entity."
                              },
                              "externalIdentifierType": {
                                "name": "externalIdentifierType",
                                "type": "string",
                                "description": "Type of the identification, typically would be the type of the entity within the external system"
                              },
                              "id": {
                                "name": "id",
                                "type": "string",
                                "description": "identification of the entity within the external system."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "rule": {
    "tableName": "Rule",
    "endpoints": [
      {
        "operationId": "listRule",
        "path": "/rule",
        "method": "get"
      },
      {
        "operationId": "createRule",
        "path": "/rule",
        "method": "post"
      },
      {
        "operationId": "retrieveRule",
        "path": "/rule/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteRule",
        "path": "/rule/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchRule",
        "path": "/rule/{id}",
        "method": "patch"
      }
    ]
  },
  "event": {
    "tableName": "Event",
    "endpoints": [
      {
        "operationId": "listEvent",
        "path": "/topic/{topicId}/event",
        "method": "get"
      },
      {
        "operationId": "createEvent",
        "path": "/topic/{topicId}/event",
        "method": "post"
      },
      {
        "operationId": "retrieveEvent",
        "path": "/topic/{topicId}/event/{id}",
        "method": "get"
      }
    ]
  },
  "topic": {
    "tableName": "Topic",
    "endpoints": [
      {
        "operationId": "listTopic",
        "path": "/topic",
        "method": "get"
      },
      {
        "operationId": "createTopic",
        "path": "/topic",
        "method": "post"
      },
      {
        "operationId": "retrieveTopic",
        "path": "/topic/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTopic",
        "path": "/topic/{id}",
        "method": "delete"
      }
    ]
  },
  "hub": {
    "tableName": "Hub",
    "endpoints": [
      {
        "operationId": "listHub",
        "path": "/topic/{topicId}/hub",
        "method": "get"
      },
      {
        "operationId": "createHub",
        "path": "/topic/{topicId}/hub",
        "method": "post"
      },
      {
        "operationId": "retrieveHub",
        "path": "/topic/{topicId}/hub/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteHub",
        "path": "/topic/{topicId}/hub/{id}",
        "method": "delete"
      },
      {
        "operationId": "hubFind",
        "path": "/hub",
        "method": "get"
      },
      {
        "operationId": "hubCreate",
        "path": "/hub",
        "method": "post"
      },
      {
        "operationId": "hubGet",
        "path": "/hub/{hubId}",
        "method": "get"
      },
      {
        "operationId": "hubDelete",
        "path": "/hub/{hubId}",
        "method": "delete"
      }
    ]
  },
  "iotService": {
    "tableName": "IotService",
    "endpoints": [
      {
        "operationId": "listIotService",
        "path": "/iotService",
        "method": "get"
      },
      {
        "operationId": "createIotService",
        "path": "/iotService",
        "method": "post"
      },
      {
        "operationId": "retrieveIotService",
        "path": "/iotService/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteIotService",
        "path": "/iotService/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchIotService",
        "path": "/iotService/{id}",
        "method": "patch"
      }
    ]
  },
  "serviceCatalog": {
    "tableName": "ServiceCatalog",
    "endpoints": [
      {
        "operationId": "listServiceCatalog",
        "path": "/serviceCatalog",
        "method": "get"
      },
      {
        "operationId": "createServiceCatalog",
        "path": "/serviceCatalog",
        "method": "post"
      },
      {
        "operationId": "retrieveServiceCatalog",
        "path": "/serviceCatalog/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteServiceCatalog",
        "path": "/serviceCatalog/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchServiceCatalog",
        "path": "/serviceCatalog/{id}",
        "method": "patch"
      }
    ]
  },
  "serviceCategory": {
    "tableName": "ServiceCategory",
    "endpoints": [
      {
        "operationId": "listServiceCategory",
        "path": "/serviceCategory",
        "method": "get"
      },
      {
        "operationId": "createServiceCategory",
        "path": "/serviceCategory",
        "method": "post"
      },
      {
        "operationId": "retrieveServiceCategory",
        "path": "/serviceCategory/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteServiceCategory",
        "path": "/serviceCategory/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchServiceCategory",
        "path": "/serviceCategory/{id}",
        "method": "patch"
      }
    ]
  },
  "serviceCandidate": {
    "tableName": "ServiceCandidate",
    "endpoints": [
      {
        "operationId": "listServiceCandidate",
        "path": "/serviceCandidate",
        "method": "get"
      },
      {
        "operationId": "createServiceCandidate",
        "path": "/serviceCandidate",
        "method": "post"
      },
      {
        "operationId": "retrieveServiceCandidate",
        "path": "/serviceCandidate/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteServiceCandidate",
        "path": "/serviceCandidate/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchServiceCandidate",
        "path": "/serviceCandidate/{id}",
        "method": "patch"
      }
    ]
  },
  "serviceQualification": {
    "tableName": "ServiceQualification",
    "endpoints": [
      {
        "operationId": "listServiceQualification",
        "path": "/serviceQualification",
        "method": "get"
      },
      {
        "operationId": "createServiceQualification",
        "path": "/serviceQualification",
        "method": "post"
      },
      {
        "operationId": "retrieveServiceQualification",
        "path": "/serviceQualification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteServiceQualification",
        "path": "/serviceQualification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchServiceQualification",
        "path": "/serviceQualification/{id}",
        "method": "patch"
      }
    ]
  },
  "serviceProblem": {
    "tableName": "ServiceProblem",
    "endpoints": [
      {
        "operationId": "listServiceProblem",
        "path": "/serviceProblem",
        "method": "get"
      },
      {
        "operationId": "createServiceProblem",
        "path": "/serviceProblem",
        "method": "post"
      },
      {
        "operationId": "retrieveServiceProblem",
        "path": "/serviceProblem/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteServiceProblem",
        "path": "/serviceProblem/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchServiceProblem",
        "path": "/serviceProblem/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "affectedLocation": {
                "name": "affectedLocation",
                "type": "array",
                "description": "A list of the locations affected by the problem. At least one of affectedResource, affectedService or affectedLocation should be present.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "place": {
                      "name": "place",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place entity and not the PlaceRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "place_variant_0",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the geographic location"
                            },
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "An URI used to access to the geographic location resource"
                            },
                            "@type": {
                              "name": "@type",
                              "type": "string",
                              "description": "The name of the GeoJSON structure used in the geometry attribute",
                              "enum": [
                                "GeoJsonPoint",
                                "GeoJsonMultiPoint",
                                "GeoJsonLineString",
                                "GeoJsonMultiLineString",
                                "GeoJsonPolygon"
                              ]
                            },
                            "bbox": {
                              "name": "bbox",
                              "type": "array",
                              "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                              "items": {
                                "name": "items",
                                "type": "number"
                              }
                            }
                          }
                        },
                        {
                          "name": "place_variant_1",
                          "type": "object",
                          "properties": {
                            "code": {
                              "name": "code",
                              "type": "string",
                              "description": "A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]"
                            },
                            "creationDate": {
                              "name": "creationDate",
                              "type": "string",
                              "description": "Date and time when the GeographicSite was created",
                              "format": "date-time"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Text describing additional information regarding the site"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former"
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                  },
                                  "partyOrPartyRole": {
                                    "name": "partyOrPartyRole",
                                    "type": "union",
                                    "description": "",
                                    "oneOf": [
                                      {
                                        "name": "partyOrPartyRole_variant_0",
                                        "type": "object",
                                        "description": "A Party reference",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "partyId": {
                                            "name": "partyId",
                                            "type": "string",
                                            "description": "The identifier of the engaged party that is linked to the PartyRole object."
                                          },
                                          "partyName": {
                                            "name": "partyName",
                                            "type": "string",
                                            "description": "The name of the engaged party that is linked to the PartyRole object."
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "externalIdentifier": {
                              "name": "externalIdentifier",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "owner": {
                                    "name": "owner",
                                    "type": "string",
                                    "description": "Name of the external system that owns the entity."
                                  },
                                  "externalIdentifierType": {
                                    "name": "externalIdentifierType",
                                    "type": "string",
                                    "description": "Type of the identification, typically would be the type of the entity within the external system"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "identification of the entity within the external system."
                                  }
                                }
                              }
                            },
                            "calendar": {
                              "name": "calendar",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "day": {
                                    "name": "day",
                                    "type": "string",
                                    "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, ...)"
                                  },
                                  "timeZone": {
                                    "name": "timeZone",
                                    "type": "string",
                                    "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)"
                                  },
                                  "hourPeriod": {
                                    "name": "hourPeriod",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "endHour": {
                                          "name": "endHour",
                                          "type": "string",
                                          "description": "The time when the status ends applying"
                                        },
                                        "startHour": {
                                          "name": "startHour",
                                          "type": "string",
                                          "description": "The time when the status starts applying"
                                        }
                                      }
                                    }
                                  },
                                  "status": {
                                    "name": "status",
                                    "type": "string",
                                    "description": "Indication of the availability of the caledar period (e.g.: available, booked, etc.)"
                                  }
                                }
                              }
                            },
                            "place": {
                              "name": "place",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to PlaceRefOrValue"
                              }
                            },
                            "siteRelationship": {
                              "name": "siteRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Reference of the related geographic site"
                                  },
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role of the related site in the relationship"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                                    "properties": {
                                      "startDateTime": {
                                        "name": "startDateTime",
                                        "type": "string",
                                        "description": "Start of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      },
                                      "endDateTime": {
                                        "name": "endDateTime",
                                        "type": "string",
                                        "description": "End of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      }
                                    }
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the related site entity within the server"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Type of relationship"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "name": "place_variant_2",
                          "type": "object",
                          "properties": {
                            "city": {
                              "name": "city",
                              "type": "string",
                              "description": "City that the address is in"
                            },
                            "country": {
                              "name": "country",
                              "type": "string",
                              "description": "Country that the address is in"
                            },
                            "locality": {
                              "name": "locality",
                              "type": "string",
                              "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                            },
                            "postcode": {
                              "name": "postcode",
                              "type": "string",
                              "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                            },
                            "stateOrProvince": {
                              "name": "stateOrProvince",
                              "type": "string",
                              "description": "the State or Province that the address is in"
                            },
                            "streetName": {
                              "name": "streetName",
                              "type": "string",
                              "description": "Name of the street or other street type"
                            },
                            "streetNr": {
                              "name": "streetNr",
                              "type": "string",
                              "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                            },
                            "streetNrLast": {
                              "name": "streetNrLast",
                              "type": "string",
                              "description": "Last number in a range of street numbers allocated to a property"
                            },
                            "streetNrLastSuffix": {
                              "name": "streetNrLastSuffix",
                              "type": "string",
                              "description": "Last street number suffix for a ranged address"
                            },
                            "streetNrSuffix": {
                              "name": "streetNrSuffix",
                              "type": "string",
                              "description": "the first street number suffix"
                            },
                            "streetSuffix": {
                              "name": "streetSuffix",
                              "type": "string",
                              "description": "A modifier denoting a relative direction"
                            },
                            "streetType": {
                              "name": "streetType",
                              "type": "string",
                              "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                            },
                            "countryCode": {
                              "name": "countryCode",
                              "type": "array",
                              "description": "Country codes are short alphabetic or numeric geographical codes (geocodes) developed to represent countries and dependent areas, for use in data processing and communications. Several different systems have been developed to do this. The term country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes, the E.164 country calling codes.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "format": {
                                    "name": "format",
                                    "type": "string",
                                    "description": "Standard/Regulatory definition identifier. e.g., ISO 3166-1"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "The value of the resource in the corresponding standard.e.g., a country code value"
                                  }
                                }
                              }
                            },
                            "externalIdentifier": {
                              "name": "externalIdentifier",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ExternalIdentifier"
                              }
                            },
                            "geographicLocation": {
                              "name": "geographicLocation",
                              "type": "union",
                              "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicLocation entity and not the GeographicLocationRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "geographicLocation_variant_0",
                                  "type": "object",
                                  "description": "Reference to GeographicLocation"
                                },
                                {
                                  "name": "geographicLocation_variant_1",
                                  "type": "object",
                                  "properties": {}
                                }
                              ]
                            },
                            "geographicSubAddress": {
                              "name": "geographicSubAddress",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "buildingName": {
                                    "name": "buildingName",
                                    "type": "string",
                                    "description": "allows for buildings that have well-known names"
                                  },
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Link to the subAddress"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique Identifier of the subAddress"
                                  },
                                  "levelNumber": {
                                    "name": "levelNumber",
                                    "type": "string",
                                    "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                                  },
                                  "levelType": {
                                    "name": "levelType",
                                    "type": "string",
                                    "description": "describes level types within a building"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the subAddress to identify it with a meaningful identification"
                                  },
                                  "privateStreetName": {
                                    "name": "privateStreetName",
                                    "type": "string",
                                    "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                                  },
                                  "privateStreetNumber": {
                                    "name": "privateStreetNumber",
                                    "type": "string",
                                    "description": "private streets numbers internal to a private street"
                                  },
                                  "subUnit": {
                                    "name": "subUnit",
                                    "type": "array",
                                    "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "subUnitNumber": {
                                          "name": "subUnitNumber",
                                          "type": "string",
                                          "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                                        },
                                        "subUnitType": {
                                          "name": "subUnitType",
                                          "type": "string",
                                          "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                                        }
                                      }
                                    }
                                  },
                                  "subAddressType": {
                                    "name": "subAddressType",
                                    "type": "string",
                                    "description": "Type of subAddress : it can be a subunit or a private street"
                                  }
                                }
                              }
                            },
                            "geographicAddressType": {
                              "name": "geographicAddressType",
                              "type": "string",
                              "description": "Classification of the address, e.g., residential, industrial "
                            }
                          }
                        },
                        {
                          "name": "place_variant_3",
                          "type": "object",
                          "description": "Place reference.",
                          "properties": {}
                        }
                      ]
                    }
                  }
                }
              },
              "affectedNumberOfServices": {
                "name": "affectedNumberOfServices",
                "type": "integer",
                "description": "Number of affected services"
              },
              "affectedResource": {
                "name": "affectedResource",
                "type": "array",
                "description": "A list of the resources affected by the problem. At least one of affectedResource, affectedService or affectedLocation should be present.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Resource reference, for when Resource is used by other entities.",
                  "properties": {}
                }
              },
              "affectedService": {
                "name": "affectedService",
                "type": "array",
                "description": "List of affected services. At least one of affectedResource, affectedService or affectedLocation should be present.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Service reference, for when Service is used by other entities.",
                  "properties": {}
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "A list of comments or notes made on the problem",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ExternalIdentifier"
                }
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the Service Problem"
              },
              "characteristic": {
                "name": "characteristic",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "firstAlert": {
                "name": "firstAlert",
                "type": "object",
                "properties": {
                  "role": {
                    "name": "role",
                    "type": "string"
                  },
                  "entity": {
                    "name": "entity",
                    "type": "object",
                    "description": "Reference to EntityRef"
                  }
                }
              },
              "impactImportanceFactor": {
                "name": "impactImportanceFactor",
                "type": "string",
                "description": "Impact Importance is characterized by an Impact Importance Factor: overall importance of the impact of all the affected services, e.g. 0 (zero impact) to 100 (worst impact). The Impact Importance is a calculated field which is set by the OSS determining the impact."
              },
              "impactPattern": {
                "name": "impactPattern",
                "type": "object",
                "properties": {
                  "description": {
                    "name": "description",
                    "type": "string",
                    "description": "Basic description of the impact pattern"
                  },
                  "characteristic": {
                    "name": "characteristic",
                    "type": "array",
                    "description": "A generic list of any type of elements. Used for extensions or loose element encapsulation from other namespaces",
                    "items": {
                      "name": "items",
                      "type": "object",
                      "description": "Reference to Characteristic"
                    }
                  }
                }
              },
              "originatingSystem": {
                "name": "originatingSystem",
                "type": "string",
                "description": "Indicates where the problem was generated"
              },
              "parentProblem": {
                "name": "parentProblem",
                "type": "array",
                "description": "The parent problem to which this problem is attached.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {}
                }
              },
              "problemEscalation": {
                "name": "problemEscalation",
                "type": "string",
                "description": "Indicates if this service problem has been escalated or not. Possible values are 0 to 10. A value of zero means no escalation. The meanings of values 1-10 are to be determined by the user of the interface, but they show increasing levels of escalation."
              },
              "relatedEvent": {
                "name": "relatedEvent",
                "type": "array",
                "description": "List of events associated to this problem",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "The identifier of the referred entity."
                    },
                    "href": {
                      "name": "href",
                      "type": "string",
                      "description": "The URI of the referred entity."
                    },
                    "eventTime": {
                      "name": "eventTime",
                      "type": "string",
                      "description": "Time the event occurred",
                      "format": "date-time"
                    }
                  }
                }
              },
              "relatedEntity": {
                "name": "relatedEntity",
                "type": "array",
                "description": "List of entities associated with this problem",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to RelatedEntity"
                }
              },
              "responsibleParty": {
                "name": "responsibleParty",
                "type": "object",
                "description": "Reference to RelatedPartyRefOrPartyRoleRef"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "List of parties or party roles playing a role within the service problem",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                }
              },
              "rootCauseResource": {
                "name": "rootCauseResource",
                "type": "array",
                "description": "Resource(s) that are associated to the underlying service problems that are the Root Cause of this one if any (used only if applicable).",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ResourceRef"
                }
              },
              "rootCauseService": {
                "name": "rootCauseService",
                "type": "array",
                "description": "Service(s) that are associated to the underlying service problems that are the Root Cause of this one if any (used only if applicable)",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ServiceRef"
                }
              },
              "resolutionDate": {
                "name": "resolutionDate",
                "type": "string",
                "description": "Time the problem was resolved",
                "format": "date-time"
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Possible values for the state of the ServiceProblem",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "pending",
                  "held",
                  "inProgress",
                  "resolved",
                  "cancelled",
                  "closed"
                ]
              },
              "statusChangeDate": {
                "name": "statusChangeDate",
                "type": "string",
                "description": "Time the problem was last status changed",
                "format": "date-time"
              },
              "statusChangeReason": {
                "name": "statusChangeReason",
                "type": "string",
                "description": "The reason of state change"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Time the problem was last changed",
                "format": "date-time"
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Time the problem was created",
                "format": "date-time"
              },
              "trackingRecord": {
                "name": "trackingRecord",
                "type": "array",
                "description": "List of tracking records that allow the tracking of modifications on the problem.The tracking records should not be embedded in the problem to allow retrieving the problem without the tracking records",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "Describes the action being done, such as: ack, clear"
                    },
                    "characteristic": {
                      "name": "characteristic",
                      "type": "array",
                      "description": "A generic list of any type of elements. Used for vendor Extensions or loose element encapsulation from other namespaces",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to Characteristic"
                      }
                    },
                    "systemId": {
                      "name": "systemId",
                      "type": "string",
                      "description": "Describes the system Id from which the action was done"
                    },
                    "time": {
                      "name": "time",
                      "type": "string",
                      "description": "Describes the time at which the action was done",
                      "format": "date-time"
                    },
                    "user": {
                      "name": "user",
                      "type": "string",
                      "description": "Describes the user doing the action"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the TrackingRecord."
                    }
                  }
                }
              },
              "underlyingAlarm": {
                "name": "underlyingAlarm",
                "type": "array",
                "description": "A list of alarms underlying this problem.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "changeRequest": {
                      "name": "changeRequest",
                      "type": "object",
                      "description": "Reference to EntityRef"
                    }
                  }
                }
              },
              "slaViolation": {
                "name": "slaViolation",
                "type": "array",
                "description": "A List of SLA violations associated with this problem.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {}
                }
              },
              "troubleTicket": {
                "name": "troubleTicket",
                "type": "array",
                "description": "A list of trouble tickets associated with this problem.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "reference to an TroubleTicket object",
                  "properties": {}
                }
              },
              "underlyingProblem": {
                "name": "underlyingProblem",
                "type": "array",
                "description": "A list of underlying problems. Relevant only if this problem is derived from other problems.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ServiceProblemRef"
                }
              },
              "errorMessage": {
                "name": "errorMessage",
                "type": "array",
                "description": "A list of the error(s) associated to the Service Problem. This object is used for any asynchronous errors and error information to be shared with consumer.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "code": {
                      "name": "code",
                      "type": "string",
                      "description": "error code"
                    },
                    "reason": {
                      "name": "reason",
                      "type": "string",
                      "description": "Explanation of the reason for the error"
                    },
                    "message": {
                      "name": "message",
                      "type": "string",
                      "description": "More details and corrective actions related to the error"
                    },
                    "status": {
                      "name": "status",
                      "type": "string",
                      "description": "error code extension like sys-ABC-2001"
                    },
                    "referenceError": {
                      "name": "referenceError",
                      "type": "string",
                      "description": "URI of documentation describing the error"
                    }
                  }
                }
              },
              "category": {
                "name": "category",
                "type": "string",
                "description": "Classifier for the problem. Settable. For example, this is used for distinguish the category of problem originator in [role].[category] format. Example: serviceProvider.declarer, supplier.originated, system.originated"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Free form text describing the Service Problem"
              },
              "priority": {
                "name": "priority",
                "type": "integer",
                "description": "An indication varying from 1 (highest) to 10 (lowest) of how important it is for the service provider to correct the Service Problem."
              },
              "reason": {
                "name": "reason",
                "type": "string",
                "description": "Free text or optionally structured text. It can be Unknown."
              },
              "originatorParty": {
                "name": "originatorParty",
                "type": "object",
                "description": "Reference to RelatedPartyRefOrPartyRoleRef"
              }
            }
          }
        }
      }
    }
  },
  "iotServiceSpecification": {
    "tableName": "IotServiceSpecification",
    "endpoints": [
      {
        "operationId": "listIotServiceSpecification",
        "path": "/iotServiceSpecification",
        "method": "get"
      },
      {
        "operationId": "createIotServiceSpecification",
        "path": "/iotServiceSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveIotServiceSpecification",
        "path": "/iotServiceSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteIotServiceSpecification",
        "path": "/iotServiceSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchIotServiceSpecification",
        "path": "/iotServiceSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "serviceTest": {
    "tableName": "ServiceTest",
    "endpoints": [
      {
        "operationId": "listServiceTest",
        "path": "/serviceTest",
        "method": "get"
      },
      {
        "operationId": "createServiceTest",
        "path": "/serviceTest",
        "method": "post"
      },
      {
        "operationId": "retrieveServiceTest",
        "path": "/serviceTest/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteServiceTest",
        "path": "/serviceTest/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchServiceTest",
        "path": "/serviceTest/{id}",
        "method": "patch"
      }
    ]
  },
  "serviceTestSpecification": {
    "tableName": "ServiceTestSpecification",
    "endpoints": [
      {
        "operationId": "listServiceTestSpecification",
        "path": "/serviceTestSpecification",
        "method": "get"
      },
      {
        "operationId": "createServiceTestSpecification",
        "path": "/serviceTestSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveServiceTestSpecification",
        "path": "/serviceTestSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteServiceTestSpecification",
        "path": "/serviceTestSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchServiceTestSpecification",
        "path": "/serviceTestSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "usageConsumptionReportRequest": {
    "tableName": "UsageConsumptionReportRequest",
    "endpoints": [
      {
        "operationId": "listUsageConsumptionReportRequest",
        "path": "/usageConsumptionReportRequest",
        "method": "get"
      },
      {
        "operationId": "createUsageConsumptionReportRequest",
        "path": "/usageConsumptionReportRequest",
        "method": "post"
      },
      {
        "operationId": "retrieveUsageConsumptionReportRequest",
        "path": "/usageConsumptionReportRequest/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteUsageConsumptionReportRequest",
        "path": "/usageConsumptionReportRequest/{id}",
        "method": "delete"
      }
    ]
  },
  "user": {
    "tableName": "User",
    "endpoints": [
      {
        "operationId": "listUser",
        "path": "/user",
        "method": "get"
      },
      {
        "operationId": "createUser",
        "path": "/user",
        "method": "post"
      },
      {
        "operationId": "retrieveUser",
        "path": "/user/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteUser",
        "path": "/user/{id}",
        "method": "delete"
      }
    ]
  },
  "usageConsumptionReport": {
    "tableName": "UsageConsumptionReport",
    "endpoints": [
      {
        "operationId": "listUsageConsumptionReport",
        "path": "/usageConsumptionReport",
        "method": "get"
      },
      {
        "operationId": "retrieveUsageConsumptionReport",
        "path": "/usageConsumptionReport/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteUsageConsumptionReport",
        "path": "/usageConsumptionReport/{id}",
        "method": "delete"
      }
    ]
  },
  "importJob": {
    "tableName": "ImportJob",
    "endpoints": [
      {
        "operationId": "listImportJob",
        "path": "/importJob",
        "method": "get"
      },
      {
        "operationId": "createImportJob",
        "path": "/importJob",
        "method": "post"
      },
      {
        "operationId": "retrieveImportJob",
        "path": "/importJob/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteImportJob",
        "path": "/importJob/{id}",
        "method": "delete"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier for import job"
              },
              "completionDate": {
                "name": "completionDate",
                "type": "string",
                "description": "Date at which the job was completed",
                "format": "date-time"
              },
              "contentType": {
                "name": "contentType",
                "type": "string",
                "description": "Indicates the format of the imported data"
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date at which the job was created",
                "format": "date-time"
              },
              "errorLog": {
                "name": "errorLog",
                "type": "string",
                "description": "Path to file or stream where errors encountered during the job processing can be written"
              },
              "path": {
                "name": "path",
                "type": "string",
                "description": "URL of the root resource where the content of the file specified by the import job must be applied"
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Valid values for the state of a batch job (e.g. catalog import)",
                "enum": [
                  "Not Started",
                  "Running",
                  "Succeeded",
                  "Failed"
                ]
              },
              "url": {
                "name": "url",
                "type": "string",
                "description": "URL of the file containing the data to be imported",
                "format": "uri"
              }
            }
          }
        }
      }
    }
  },
  "exportJob": {
    "tableName": "ExportJob",
    "endpoints": [
      {
        "operationId": "listExportJob",
        "path": "/exportJob",
        "method": "get"
      },
      {
        "operationId": "createExportJob",
        "path": "/exportJob",
        "method": "post"
      },
      {
        "operationId": "retrieveExportJob",
        "path": "/exportJob/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteExportJob",
        "path": "/exportJob/{id}",
        "method": "delete"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier for export job"
              },
              "completionDate": {
                "name": "completionDate",
                "type": "string",
                "description": "Data at which the job was completed",
                "format": "date-time"
              },
              "contentType": {
                "name": "contentType",
                "type": "string",
                "description": "The format of the exported data"
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date at which the job was created",
                "format": "date-time"
              },
              "errorLog": {
                "name": "errorLog",
                "type": "string",
                "description": "Path to file or stream where errors encountered during the job processing can be written"
              },
              "path": {
                "name": "path",
                "type": "string",
                "description": "URL of the root resource acting as the source for streaming content to the file specified by the export job"
              },
              "query": {
                "name": "query",
                "type": "string",
                "description": "Used to scope the exported data"
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Valid values for the state of a batch job (e.g. catalog import)",
                "enum": [
                  "Not Started",
                  "Running",
                  "Succeeded",
                  "Failed"
                ]
              },
              "url": {
                "name": "url",
                "type": "string",
                "description": "URL of the file containing the data to be exported",
                "format": "uri"
              }
            }
          }
        }
      }
    }
  },
  "serviceSpecification": {
    "tableName": "ServiceSpecification",
    "endpoints": [
      {
        "operationId": "listServiceSpecification",
        "path": "/serviceSpecification",
        "method": "get"
      },
      {
        "operationId": "createServiceSpecification",
        "path": "/serviceSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveServiceSpecification",
        "path": "/serviceSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteServiceSpecification",
        "path": "/serviceSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchServiceSpecification",
        "path": "/serviceSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "iotDevice": {
    "tableName": "IotDevice",
    "endpoints": [
      {
        "operationId": "listIotDevice",
        "path": "/iotDevice",
        "method": "get"
      },
      {
        "operationId": "createIotDevice",
        "path": "/iotDevice",
        "method": "post"
      },
      {
        "operationId": "retrieveIotDevice",
        "path": "/iotDevice/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteIotDevice",
        "path": "/iotDevice/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchIotDevice",
        "path": "/iotDevice/{id}",
        "method": "patch"
      }
    ]
  },
  "dataAccessEndpoint": {
    "tableName": "DataAccessEndpoint",
    "endpoints": [
      {
        "operationId": "listDataAccessEndpoint",
        "path": "/dataAccessEndpoint",
        "method": "get"
      },
      {
        "operationId": "retrieveDataAccessEndpoint",
        "path": "/dataAccessEndpoint/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "category": {
                "name": "category",
                "type": "string",
                "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "free-text description of the resource"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "the name of the resource"
              },
              "endOperatingDate": {
                "name": "endOperatingDate",
                "type": "string",
                "description": "A date time( DateTime). The date till the resource is operating",
                "format": "date-time"
              },
              "administrativeState": {
                "name": "administrativeState",
                "type": "string",
                "description": "ResourceAdministrativeStateType enumerations; values defined by ITU X.731: 'locked': The resource is administratively prohibited from performing services for its users; 'shutdown': Use of the resource is administratively permitted to existing instances of use only. While the system remains in the shutting down state the manager may at any time cause the managed object to revert to the unlocked state; 'unlocked': The resource is administratively permitted to perform services for its users. This is independent of its inherent operability.",
                "enum": [
                  "locked",
                  "unlocked",
                  "shutdown"
                ]
              },
              "operationalState": {
                "name": "operationalState",
                "type": "string",
                "description": "ResourceOperationalStateType enumerations; values defined by ITU X.731: 'disable': The resource is totally inoperable and unable to provide service to the user(s); 'enable': The resource is partially or fully operable and available for use.",
                "enum": [
                  "enable",
                  "disable"
                ]
              },
              "resourceStatus": {
                "name": "resourceStatus",
                "type": "string",
                "description": "ResourceStatusType enumerations",
                "enum": [
                  "alarm",
                  "available",
                  "installed",
                  "not exists",
                  "pendingRemoval",
                  "planned",
                  "reserved",
                  "standby",
                  "suspended",
                  "unknown"
                ]
              },
              "usageState": {
                "name": "usageState",
                "type": "string",
                "description": "ResourceUsageStateType enumerations; values defined by ITU X.731: 'idle': The resource is not currently in use; 'active': The resource is in use, and has sufficient spare operating capacity to provide for additional users simultaneously; 'busy': The resource is in use, but it has no spare operating capacity to provide for additional users at this instant.",
                "enum": [
                  "idle",
                  "active",
                  "busy"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "resourceOrderItem": {
                "name": "resourceOrderItem",
                "type": "array",
                "description": "A list of resource order items related to this resource",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string",
                      "description": "The actual type of the target instance when needed for disambiguation."
                    },
                    "resourceOrderHref": {
                      "name": "resourceOrderHref",
                      "type": "string",
                      "description": "Reference of the related entity."
                    },
                    "resourceOrderId": {
                      "name": "resourceOrderId",
                      "type": "string",
                      "description": "Unique identifier of a related entity."
                    },
                    "itemAction": {
                      "name": "itemAction",
                      "type": "string",
                      "description": "action to be performed on the product",
                      "enum": [
                        "add",
                        "modify",
                        "delete",
                        "noChange"
                      ]
                    },
                    "itemId": {
                      "name": "itemId",
                      "type": "string",
                      "description": "Identifier of the order item where the resource was managed"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "role of the resource order item for this resource"
                    }
                  }
                }
              },
              "place": {
                "name": "place",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "place": {
                      "name": "place",
                      "type": "object",
                      "description": "Place reference.",
                      "properties": {}
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "supportingResource": {
                "name": "supportingResource",
                "type": "array",
                "description": "A list of supporting resources (SupportingResource [*]). A collection of resources that support this resource (bundling, link ResourceSpecification)",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Resource entity and not the ResourceRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "description": "Reference to Resource"
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "description": "Resource reference, for when Resource is used by other entities.",
                      "properties": {}
                    }
                  ]
                }
              },
              "resourceRelationship": {
                "name": "resourceRelationship",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "resourceRelationshipCharacteristic": {
                      "name": "resourceRelationshipCharacteristic",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the characteristic"
                          },
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "Data type of the value of the characteristic"
                          },
                          "characteristicRelationship": {
                            "name": "characteristicRelationship",
                            "type": "array",
                            "description": "Collection of characteristic relationships",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "name": "id",
                                  "type": "string",
                                  "description": "Unique identifier of the characteristic"
                                },
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "The type of relationship"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "resource": {
                      "name": "resource",
                      "type": "object",
                      "description": "Reference to ResourceRefOrValue"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of the resource relationship, such as [bundled] if the resource is a bundle and you want to describe the bundled resources inside this bundle; [reliesOn] if the resource needs another already owned resource to rely on (eg: an option on an already owned mobile access resource) [targets] or [isTargeted] (depending on the way of expressing the link) for any other kind of links that may be useful"
                    }
                  }
                }
              },
              "resourceCharacteristic": {
                "name": "resourceCharacteristic",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to Characteristic"
                }
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative text describing the content of the attachment"
                    },
                    "url": {
                      "name": "url",
                      "type": "string",
                      "description": "Link to the attachment media/content"
                    }
                  }
                }
              },
              "resourceSpecification": {
                "name": "resourceSpecification",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "Resource Specification version"
                  }
                }
              },
              "startOperatingDate": {
                "name": "startOperatingDate",
                "type": "string",
                "description": "A date time( DateTime). The date from which the resource is operating",
                "format": "date-time"
              },
              "resourceVersion": {
                "name": "resourceVersion",
                "type": "string",
                "description": "A field that identifies the specific version of an instance of a resource."
              },
              "activationFeature": {
                "name": "activationFeature",
                "type": "array",
                "description": "Configuration features",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "isBundle": {
                      "name": "isBundle",
                      "type": "boolean",
                      "description": "True if this is a feature group. Default is false."
                    },
                    "featureRelationship": {
                      "name": "featureRelationship",
                      "type": "array",
                      "description": "Collection of feature relationships",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "This is the type of the feature relationship.",
                            "enum": [
                              "excluded",
                              "includes",
                              "may include",
                              "requires"
                            ]
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "This is the name of the target feature."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      }
                    },
                    "featureCharacteristic": {
                      "name": "featureCharacteristic",
                      "type": "array",
                      "description": "This is a list of Characteristics for a particular feature.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to Characteristic"
                      }
                    },
                    "policyConstraint": {
                      "name": "policyConstraint",
                      "type": "array",
                      "description": "Reference to manage a list of feature specification policy constraints",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "unique identifier"
                          },
                          "href": {
                            "name": "href",
                            "type": "string",
                            "description": "Hyperlink reference"
                          },
                          "version": {
                            "name": "version",
                            "type": "string"
                          },
                          "@type": {
                            "name": "@type",
                            "type": "string",
                            "description": "When sub-classing, this defines the sub-class Extensible name"
                          },
                          "@baseType": {
                            "name": "@baseType",
                            "type": "string",
                            "description": "When sub-classing, this defines the super-class"
                          },
                          "@schemaLocation": {
                            "name": "@schemaLocation",
                            "type": "string",
                            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                          }
                        }
                      }
                    },
                    "isEnabled": {
                      "name": "isEnabled",
                      "type": "boolean",
                      "description": "True if this feature is enabled. Default is true."
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "unique identifier"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "This is the name for the feature."
                    }
                  }
                }
              },
              "intent": {
                "name": "intent",
                "type": "object",
                "description": "Intent reference, for when Intent is used by other entities",
                "properties": {}
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "description": "An identification of this resource that is owned by or originates in a software system different from the current system. The structure identifies the system itself, the nature of the resource within the system and the unique ID of the resource within the system. It is anticipated that multiple external IDs can be held for a single resource, e.g. if the resource passed through multiple systems on the way to the current system.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              },
              "value": {
                "name": "value",
                "type": "string",
                "description": "the value of the logical resource. E.g '0746712345' for  MSISDN's"
              },
              "uri": {
                "name": "uri",
                "type": "string",
                "description": "URI for using the data access API",
                "format": "uri"
              },
              "uriQueryFilter": {
                "name": "uriQueryFilter",
                "type": "object",
                "properties": {
                  "mappings": {
                    "name": "mappings",
                    "type": "array",
                    "items": {
                      "name": "items",
                      "type": "object",
                      "description": "definition of a field used for filtering template with the associated attributes.",
                      "properties": {
                        "filterTemplate": {
                          "name": "filterTemplate",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of this DataFilterTemplate"
                            },
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Hyperlink reference to this DataFilterTemplate",
                              "format": "uri"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name given to this DataFilterTemplate"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Description of this DataFilterTemplate"
                            }
                          }
                        },
                        "stringArray": {
                          "name": "stringArray",
                          "type": "object",
                          "properties": {
                            "valueType": {
                              "name": "valueType",
                              "type": "string",
                              "description": "Data type of the value of the attribute"
                            },
                            "value": {
                              "name": "value",
                              "type": "array",
                              "description": "an array of field names",
                              "items": {
                                "name": "items",
                                "type": "string",
                                "description": "a field/attribute name"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "apiType": {
                "name": "apiType",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "iotDeviceSpecification": {
    "tableName": "IotDeviceSpecification",
    "endpoints": [
      {
        "operationId": "listIotDeviceSpecification",
        "path": "/iotDeviceSpecification",
        "method": "get"
      },
      {
        "operationId": "createIotDeviceSpecification",
        "path": "/iotDeviceSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveIotDeviceSpecification",
        "path": "/iotDeviceSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteIotDeviceSpecification",
        "path": "/iotDeviceSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchIotDeviceSpecification",
        "path": "/iotDeviceSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "iotDataEvent": {
    "tableName": "IotDataEvent",
    "endpoints": [
      {
        "operationId": "listIotDataEvent",
        "path": "/iotDataEvent",
        "method": "get"
      },
      {
        "operationId": "retrieveIotDataEvent",
        "path": "/iotDataEvent/{id}",
        "method": "get"
      }
    ]
  },
  "iotManagementEvent": {
    "tableName": "IotManagementEvent",
    "endpoints": [
      {
        "operationId": "listIotManagementEvent",
        "path": "/iotManagementEvent",
        "method": "get"
      },
      {
        "operationId": "retrieveIotManagementEvent",
        "path": "/iotManagementEvent/{id}",
        "method": "get"
      }
    ]
  },
  "resourceSpecification": {
    "tableName": "ResourceSpecification",
    "endpoints": [
      {
        "operationId": "listResourceSpecification",
        "path": "/resourceSpecification",
        "method": "get"
      },
      {
        "operationId": "createResourceSpecification",
        "path": "/resourceSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveResourceSpecification",
        "path": "/resourceSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteResourceSpecification",
        "path": "/resourceSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResourceSpecification",
        "path": "/resourceSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of this REST resource"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Resource Specification version"
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "A flag indicates that if this resource specification is a bundled specification (true) or single (false)."
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of this REST resource",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of the resource specification"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name given to this REST resource"
              },
              "category": {
                "name": "category",
                "type": "string",
                "description": "Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic, L2Network and so on."
              },
              "targetResourceSchema": {
                "name": "targetResourceSchema",
                "type": "object",
                "description": "The reference object to the schema and type of target resource which is described by resource specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target resource"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target resource",
                    "format": "uri"
                  }
                }
              },
              "featureSpecification": {
                "name": "featureSpecification",
                "type": "array",
                "description": "A list of Features for this specification.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the feature specification"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "feature identifier"
                    },
                    "isBundle": {
                      "name": "isBundle",
                      "type": "boolean",
                      "description": "A flag indicating if this is a feature group (true) or not (false)"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "featureSpecRelationship": {
                      "name": "featureSpecRelationship",
                      "type": "array",
                      "description": "A dependency, exclusivity or aggratation relationship between/among feature specifications.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "This is the type of the feature specification relationship.",
                            "enum": [
                              "excluded",
                              "includes",
                              "may include",
                              "requires"
                            ]
                          },
                          "featureId": {
                            "name": "featureId",
                            "type": "string",
                            "description": "Unique identifier of the target feature specification."
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target feature"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target feature",
                            "format": "uri"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "This is the name of the target feature specification."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      }
                    },
                    "policyConstraint": {
                      "name": "policyConstraint",
                      "type": "array",
                      "description": "Reference to mangage a list of feature specification policy constraints",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "unique identifier"
                          },
                          "href": {
                            "name": "href",
                            "type": "string",
                            "description": "Hyperlink reference"
                          },
                          "version": {
                            "name": "version",
                            "type": "string"
                          },
                          "@type": {
                            "name": "@type",
                            "type": "string",
                            "description": "When sub-classing, this defines the sub-class Extensible name"
                          },
                          "@baseType": {
                            "name": "@baseType",
                            "type": "string",
                            "description": "When sub-classing, this defines the super-class"
                          },
                          "@schemaLocation": {
                            "name": "@schemaLocation",
                            "type": "string",
                            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                          }
                        }
                      }
                    },
                    "isEnabled": {
                      "name": "isEnabled",
                      "type": "boolean",
                      "description": "A flag indicating if the feature is enabled (true) or not (false)"
                    },
                    "featureSpecCharacteristic": {
                      "name": "featureSpecCharacteristic",
                      "type": "array",
                      "description": "This is a list of characteristics for a particular feature",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique ID for the characteristic"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                          },
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "A narrative that explains the CharacteristicSpecification."
                          },
                          "configurable": {
                            "name": "configurable",
                            "type": "boolean",
                            "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "minCardinality": {
                            "name": "minCardinality",
                            "type": "integer",
                            "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                          },
                          "maxCardinality": {
                            "name": "maxCardinality",
                            "type": "integer",
                            "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                          },
                          "isUnique": {
                            "name": "isUnique",
                            "type": "boolean",
                            "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                          },
                          "extensible": {
                            "name": "extensible",
                            "type": "boolean",
                            "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                          },
                          "@valueSchemaLocation": {
                            "name": "@valueSchemaLocation",
                            "type": "string",
                            "description": "This (optional) field provides a link to the schema describing the value type."
                          },
                          "charSpecRelationship": {
                            "name": "charSpecRelationship",
                            "type": "array",
                            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "Name of the target characteristic within the specification"
                                },
                                "characteristicSpecificationId": {
                                  "name": "characteristicSpecificationId",
                                  "type": "string",
                                  "description": "Unique identifier of the characteristic within the specification"
                                },
                                "parentSpecificationHref": {
                                  "name": "parentSpecificationHref",
                                  "type": "string",
                                  "description": "Hyperlink reference to the parent specification containing the target characteristic",
                                  "format": "uri"
                                },
                                "validFor": {
                                  "name": "validFor",
                                  "type": "object",
                                  "description": "Reference to TimePeriod"
                                },
                                "parentSpecificationId": {
                                  "name": "parentSpecificationId",
                                  "type": "string",
                                  "description": "Unique identifier of the parent specification containing the target characteristic"
                                }
                              }
                            }
                          },
                          "characteristicValueSpecification": {
                            "name": "characteristicValueSpecification",
                            "type": "array",
                            "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "name": "valueType",
                                  "type": "string",
                                  "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                                },
                                "isDefault": {
                                  "name": "isDefault",
                                  "type": "boolean",
                                  "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                                },
                                "unitOfMeasure": {
                                  "name": "unitOfMeasure",
                                  "type": "string",
                                  "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                                },
                                "validFor": {
                                  "name": "validFor",
                                  "type": "object",
                                  "description": "Reference to TimePeriod"
                                },
                                "valueFrom": {
                                  "name": "valueFrom",
                                  "type": "integer",
                                  "description": "The low range value that a characteristic can take on"
                                },
                                "valueTo": {
                                  "name": "valueTo",
                                  "type": "integer",
                                  "description": "The upper range value that a characteristic can take on"
                                },
                                "rangeInterval": {
                                  "name": "rangeInterval",
                                  "type": "string",
                                  "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                                },
                                "regex": {
                                  "name": "regex",
                                  "type": "string",
                                  "description": "A regular expression constraint for given value"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "This is the name for the feature."
                    }
                  }
                }
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Complements the description of an element (for instance a resource) through video, pictures ...",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "A related party defines party or party role linked to a specific entity.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "resourceSpecCharacteristic": {
                "name": "resourceSpecCharacteristic",
                "type": "array",
                "description": "A characteristic quality or distinctive feature of a ResourceSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to CharacteristicSpecification"
                }
              },
              "resourceSpecRelationship": {
                "name": "resourceSpecRelationship",
                "type": "array",
                "description": "A migration, substitution, dependency or exclusivity relationship between/among resource specifications.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this resource specification"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of target ResourceSpecification"
                    },
                    "href": {
                      "name": "href",
                      "type": "string",
                      "description": "Reference of the target ResourceSpecification",
                      "format": "uri"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "The name given to the target resource specification instance"
                    },
                    "defaultQuantity": {
                      "name": "defaultQuantity",
                      "type": "integer",
                      "description": "The default number of the related resource that should be instantiated, for example a rack would typically have 4 cards, although it could support more."
                    },
                    "maximumQuantity": {
                      "name": "maximumQuantity",
                      "type": "integer",
                      "description": "The maximum number of the related resource that should be instantiated, for example a rack supports a maximum of 16 cards"
                    },
                    "minimumQuantity": {
                      "name": "minimumQuantity",
                      "type": "integer",
                      "description": "The minimum number of the related resource that should be instantiated, for example a rack must have at least 1 card"
                    },
                    "characteristic": {
                      "name": "characteristic",
                      "type": "array",
                      "description": "A characteristic that refines the relationship. For example, consider the relationship between a slot and a card. For a half-height card it is important to know the position at which the card is inserted, so a characteristic Position might be defined on the relationship to allow capturing of this in the inventory",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to CharacteristicSpecification"
                      }
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "intentSpecification": {
                "name": "intentSpecification",
                "type": "object",
                "properties": {}
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "resourceUsage": {
    "tableName": "ResourceUsage",
    "endpoints": [
      {
        "operationId": "listResourceUsage",
        "path": "/resourceUsage",
        "method": "get"
      },
      {
        "operationId": "createResourceUsage",
        "path": "/resourceUsage",
        "method": "post"
      },
      {
        "operationId": "retrieveResourceUsage",
        "path": "/resourceUsage/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteResourceUsage",
        "path": "/resourceUsage/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResourceUsage",
        "path": "/resourceUsage/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "usageDate": {
                "name": "usageDate",
                "type": "string",
                "description": "Date of usage",
                "format": "date-time"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of resource usage"
              },
              "usageType": {
                "name": "usageType",
                "type": "string",
                "description": "Type of usage"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether usage represents a single usage (false), or a bundle of usages specifications (true)."
              },
              "usageCharacteristic": {
                "name": "usageCharacteristic",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "description": "Collection of characteristic relationships",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "resource": {
                "name": "resource",
                "type": "object",
                "description": "Resource reference, for when Resource is used by other entities.",
                "properties": {}
              },
              "usageSpecification": {
                "name": "usageSpecification",
                "type": "object",
                "description": "ResourceUsageSpecification reference. ResourceUsageSpecification is a detailed description of a usage event that are of interest to the business and can have charges applied to it. It is comprised of characteristics, which define all attributes known for a particular type of usage.",
                "properties": {}
              },
              "bundledResourceUsage": {
                "name": "bundledResourceUsage",
                "type": "array",
                "description": "Relationship to Resource Usage in bundle",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "ResourceUsage reference. ResourceUsage is usage event for Resource.",
                  "properties": {}
                }
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "description": "A list of external identifiers assoicated with this resource usage",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "resourceUsageSpecification": {
    "tableName": "ResourceUsageSpecification",
    "endpoints": [
      {
        "operationId": "listResourceUsageSpecification",
        "path": "/resourceUsageSpecification",
        "method": "get"
      },
      {
        "operationId": "createResourceUsageSpecification",
        "path": "/resourceUsageSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveResourceUsageSpecification",
        "path": "/resourceUsageSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteResourceUsageSpecification",
        "path": "/resourceUsageSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResourceUsageSpecification",
        "path": "/resourceUsageSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the specification"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item."
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "specification version"
              },
              "resourceSpecification": {
                "name": "resourceSpecification",
                "type": "array",
                "description": "Relationship to Resource specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Resource Specification version"
                    }
                  }
                }
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                      "properties": {
                        "startDateTime": {
                          "name": "startDateTime",
                          "type": "string",
                          "description": "Start of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        },
                        "endDateTime": {
                          "name": "endDateTime",
                          "type": "string",
                          "description": "End of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        }
                      }
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristic. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "bundledResourceUsageSpecification": {
                "name": "bundledResourceUsageSpecification",
                "type": "array",
                "description": "Relationship to Resource specification in bundle",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "ResourceUsageSpecification reference. ResourceUsageSpecification is a detailed description of a usage event that are of interest to the business and can have charges applied to it. It is comprised of characteristics, which define all attributes known for a particular type of usage.",
                  "properties": {}
                }
              },
              "resourceUsageSpecRelationship": {
                "name": "resourceUsageSpecRelationship",
                "type": "array",
                "description": "A list of resource usage specifications related to this specification, e.g. migration, substitution, dependency or exclusivity relationship",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as dependency, substitution or exclusivity"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this service specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "Reference to TimePeriod"
              }
            }
          }
        }
      }
    }
  },
  "productTest": {
    "tableName": "ProductTest",
    "endpoints": [
      {
        "operationId": "listProductTest",
        "path": "/productTest",
        "method": "get"
      },
      {
        "operationId": "createProductTest",
        "path": "/productTest",
        "method": "post"
      },
      {
        "operationId": "retrieveProductTest",
        "path": "/productTest/{id}",
        "method": "get"
      },
      {
        "operationId": "patchProductTest",
        "path": "/productTest/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "characteristic": {
                "name": "characteristic",
                "type": "array",
                "description": "List of characteristics with values that define the test run",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "description": "Collection of characteristic relationships",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the product test"
              },
              "endDateTime": {
                "name": "endDateTime",
                "type": "string",
                "description": "The end date and time of the product test",
                "format": "date-time"
              },
              "mode": {
                "name": "mode",
                "type": "string",
                "description": "An indication of whether the product test is running in \n\"proactive\" or \"onDemand\" mode",
                "enum": [
                  "onDemand",
                  "proactive"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "description": "A list of external identifiers assoicated with this product",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              },
              "startDateTime": {
                "name": "startDateTime",
                "type": "string",
                "description": "The start date and time of the product test.",
                "format": "date-time"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Possible values for the state of the execution",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "pending",
                  "inProgress",
                  "cancelled",
                  "completed",
                  "failed"
                ]
              },
              "testMeasure": {
                "name": "testMeasure",
                "type": "array",
                "description": "The results of the test in terms of the measured metrics",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "accuracy": {
                      "name": "accuracy",
                      "type": "number",
                      "description": "The number of digits of accuracy captured for associated Metrics",
                      "format": "float"
                    },
                    "captureDateTime": {
                      "name": "captureDateTime",
                      "type": "string",
                      "description": "The date and time that the metric was captured",
                      "format": "date-time"
                    },
                    "captureMethod": {
                      "name": "captureMethod",
                      "type": "string",
                      "description": "The method used to capture the Metrics (This may be replaced by a set of entities similar to the Performance Monitoring Ref)"
                    },
                    "metricDescription": {
                      "name": "metricDescription",
                      "type": "string",
                      "description": "Brief description of the metric"
                    },
                    "metricHref": {
                      "name": "metricHref",
                      "type": "string",
                      "description": "Hyperlink to access a metric for detail information"
                    },
                    "metricName": {
                      "name": "metricName",
                      "type": "string",
                      "description": "The name of the metric"
                    },
                    "ruleViolation": {
                      "name": "ruleViolation",
                      "type": "array",
                      "description": "A list of rules that were violated in this test measure",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "conformanceComparatorLower": {
                            "name": "conformanceComparatorLower",
                            "type": "string",
                            "description": "An operator that when applied on a value specifies whether a \nthreshold is crossed or ceased to be crossed. This operator is used to compare with the conformanceTargetLower if used."
                          },
                          "conformanceComparatorExact": {
                            "name": "conformanceComparatorExact",
                            "type": "boolean",
                            "description": "An operator that when applied on a value specifies whether it \nis the same target value or not. This operator is used to compare with the conformanceTargetExact if used."
                          },
                          "conformanceComparatorUpper": {
                            "name": "conformanceComparatorUpper",
                            "type": "string",
                            "description": "An operator that when applied on a value specifies whether a \nthreshold is crossed or ceased to be crossed. This operator is used to compare with the conformanceTargetUpper if used."
                          },
                          "conformanceTargetLower": {
                            "name": "conformanceTargetLower",
                            "type": "string",
                            "description": "A value used to determine if the threshold is crossed or ceases \nto be crossed. It represents the lower limit. The value should be less than the conformanceTargetUpper if used. The conformance comparators should also be logically defined so as to not lead to a logically impossible condition."
                          },
                          "conformanceTargetUpper": {
                            "name": "conformanceTargetUpper",
                            "type": "string",
                            "description": "A value used to determine if the threshold is crossed or ceases \nto be crossed. It represents the Upper limit. The value should be greater than the conformanceTargetLower if used. The conformance comparators should also be logically defined so as to not lead to a logically impossible condition."
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "Description for the MetricDefMeasureThresholdRule ."
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name for the MetricDefMeasureThresholdRule ."
                          },
                          "numberOfAllowedCrossing": {
                            "name": "numberOfAllowedCrossing",
                            "type": "integer",
                            "description": "The number of allowed crossing occurrences in reference to the \ntolerancePeriod without a consequence being initiated."
                          },
                          "thresholdRuleSeverity": {
                            "name": "thresholdRuleSeverity",
                            "type": "string",
                            "description": "A threshold can be generated in different severity levels. A \ncrossing for each level may require a different condition and possibly trigger a different consequence."
                          },
                          "conformanceTargetExact": {
                            "name": "conformanceTargetExact",
                            "type": "string",
                            "description": "To cater for values that are not numerical test metrics (e.g. a DSL line can be Synchronised or Unsynchronised. If the latter, the test should result in a rule violation).The allowed value can contain a REGEX expression."
                          },
                          "tolerancePeriod": {
                            "name": "tolerancePeriod",
                            "type": "object",
                            "description": "A time interval in a given unit of time",
                            "properties": {
                              "amount": {
                                "name": "amount",
                                "type": "integer",
                                "description": "Time interval (number of seconds, minutes, hours, etc.)"
                              },
                              "units": {
                                "name": "units",
                                "type": "string",
                                "description": "Unit of time (seconds, minutes, hours, etc.)"
                              }
                            }
                          },
                          "appliedConsequence": {
                            "name": "appliedConsequence",
                            "type": "array",
                            "description": "An Applied Consequence defines the action (prescribed action or notification) to take when a MeasureThresholdRuleViolation occurs.",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "appliedAction": {
                                  "name": "appliedAction",
                                  "type": "string",
                                  "description": "The action for a violated threshold. This could be a hyperlink to \nthe action."
                                },
                                "description": {
                                  "name": "description",
                                  "type": "string",
                                  "description": "A narrative that explains in detail what the consequence is."
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "A word, term, or phrase by which Consequence is known and \ndistinguished from other MetricDefMeasureConsequences."
                                },
                                "repeatAction": {
                                  "name": "repeatAction",
                                  "type": "boolean",
                                  "description": "An indicator used to specify that a consequence should cease \nbeing applied if a value is in the same range as the previous value or continue being applied if a value is in the same range as the previous value.  \nIf the repeatAction is True, if the consequence is always applied as soon as the MetricMeasure value is in the range of values and if the repeatAction is False, the consequence is applied only if the previous MetricMeasure value was not in the same range."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "unitOfMeasure": {
                      "name": "unitOfMeasure",
                      "type": "string",
                      "description": "The unit of measure for the metric values, such as meters, cubic yards, kilograms [ISO 1000]."
                    },
                    "value": {
                      "name": "value",
                      "type": "object",
                      "description": "Reference to Characteristic"
                    },
                    "testMeasureCharacteristic": {
                      "name": "testMeasureCharacteristic",
                      "type": "array",
                      "description": "A list of additional characteristics that characterize this test measurement (usageCharacteristic [*]) ",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to Characteristic"
                      }
                    }
                  }
                }
              },
              "relatedProduct": {
                "name": "relatedProduct",
                "type": "object",
                "description": "A Product reference",
                "properties": {}
              },
              "testSpecification": {
                "name": "testSpecification",
                "type": "object",
                "description": "Product Test specification reference: ProductTestSpecification(s) required to realize a Test Specification.",
                "properties": {}
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "The name of the product test"
              },
              "incidentRef": {
                "name": "incidentRef",
                "type": "array",
                "description": "An Incident is a record of an event that has altered the operational state of a entity (Resource, Service or Customers Product).",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the related incident"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "productTestSpecification": {
    "tableName": "ProductTestSpecification",
    "endpoints": [
      {
        "operationId": "listProductTestSpecification",
        "path": "/productTestSpecification",
        "method": "get"
      },
      {
        "operationId": "createProductTestSpecification",
        "path": "/productTestSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveProductTestSpecification",
        "path": "/productTestSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProductTestSpecification",
        "path": "/productTestSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchProductTestSpecification",
        "path": "/productTestSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of a product test specification."
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "specification version"
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "targetEntitySchema": {
                "name": "targetEntitySchema",
                "type": "object",
                "description": "The reference object to the schema and type of target entity which is described by a specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target entity"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target entity"
                  }
                }
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristic. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "constraint": {
                "name": "constraint",
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "constraint version"
                    }
                  }
                }
              },
              "entitySpecRelationship": {
                "name": "entitySpecRelationship",
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications.",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "name": {
                      "name": "name",
                      "type": "string"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this entity specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "associationSpec": {
                      "name": "associationSpec",
                      "type": "object",
                      "description": "reference to an AssociationSpecification object",
                      "properties": {}
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    }
                  }
                }
              },
              "testMeasureDefinition": {
                "name": "testMeasureDefinition",
                "type": "array",
                "description": "A list of definitions for the measurements for the test defined by this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "captureFrequency": {
                      "name": "captureFrequency",
                      "type": "string",
                      "description": "The frequency of capture for the metric. Note: This may be replaced by a set of entities similar to the Performance Monitoring"
                    },
                    "captureMethod": {
                      "name": "captureMethod",
                      "type": "string",
                      "description": "The method used to capture the Metric. Note: This may be replaced by a set of entities similar to the Performance Monitoring"
                    },
                    "capturePeriod": {
                      "name": "capturePeriod",
                      "type": "object",
                      "description": "A time interval in a given unit of time",
                      "properties": {
                        "amount": {
                          "name": "amount",
                          "type": "integer",
                          "description": "Time interval (number of seconds, minutes, hours, etc.)"
                        },
                        "units": {
                          "name": "units",
                          "type": "string",
                          "description": "Unit of time (seconds, minutes, hours, etc.)"
                        }
                      }
                    },
                    "metricDescription": {
                      "name": "metricDescription",
                      "type": "string",
                      "description": "Brief description of the metric"
                    },
                    "metricHref": {
                      "name": "metricHref",
                      "type": "string",
                      "description": "Hyperlink to access a metric for detail information"
                    },
                    "metricName": {
                      "name": "metricName",
                      "type": "string",
                      "description": "The name of a metric that in the test measure"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "The name of the TestMeasureDefinition"
                    },
                    "unitOfMeasure": {
                      "name": "unitOfMeasure",
                      "type": "string",
                      "description": "Name of a service test specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the Metric value can take on, such as numeric, text, and so forth"
                    },
                    "thresholdRule": {
                      "name": "thresholdRule",
                      "type": "array",
                      "description": "The rule(s) associated with the measure threshold",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "conformanceComparatorLower": {
                            "name": "conformanceComparatorLower",
                            "type": "string",
                            "description": "An operator that when applied on a value specifies whether a \nthreshold is crossed or ceased to be crossed. This operator is used to Service Test Management API REST Specification compare with the conformanceTargetLower if used."
                          },
                          "conformanceComparatorUpper": {
                            "name": "conformanceComparatorUpper",
                            "type": "string",
                            "description": "An operator that when applied on a value specifies whether a \nthreshold is crossed or ceased to be crossed. This operator is used to compare with the conformanceTargetUpper if used."
                          },
                          "conformanceComparatorExact": {
                            "name": "conformanceComparatorExact",
                            "type": "boolean",
                            "description": "An operator that when applied on a value specifies whether the \nvalue is the same or not. This operator is used to compare with the conformanceTargetExact if used."
                          },
                          "conformanceTargetExact": {
                            "name": "conformanceTargetExact",
                            "type": "string",
                            "description": "To cater for values that are not numerical test metrics (e.g. a DSL line can be Synchronised or Unsynchronised. If the latter, the test should result in a rule violation). The allowed value can contain a REGEX expression."
                          },
                          "conformanceTargetLower": {
                            "name": "conformanceTargetLower",
                            "type": "string",
                            "description": "A value used to determine if the threshold is crossed or ceases \nto be crossed. It represents the lower limit. The value should be less than the conformanceTargetUpper if used. The conformance comparators should also be logically defined so as to not lead to a logically impossible condition."
                          },
                          "conformanceTargetUpper": {
                            "name": "conformanceTargetUpper",
                            "type": "string",
                            "description": "A value used to determine if the threshold is crossed or ceases \nto be crossed. It represents the Upper limit. The value should be greater than the conformanceTargetLower if used. The conformance comparators should also be logically defined so as to not lead to a logically impossible condition."
                          },
                          "consequence": {
                            "name": "consequence",
                            "type": "array",
                            "description": "A list of consequences (actions, notifications) that will arise if the threshold is crossed",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "description": {
                                  "name": "description",
                                  "type": "string",
                                  "description": "A narrative that explains in detail what the consequence is."
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "A word, term, or phrase by which a \nMetricDefMeasureConsequence is known and distinguished from other MetricDefMeasureConsequences."
                                },
                                "prescribeAction": {
                                  "name": "prescribeAction",
                                  "type": "string",
                                  "description": "Recommended remedy for a violated threshold. This could be \nthe hyperlink to the action."
                                },
                                "repeatAction": {
                                  "name": "repeatAction",
                                  "type": "boolean",
                                  "description": "An indicator used to specify that a consequence should cease \nbeing applied if a value is in the same range as the previous value or continue being applied if a value is in the same range as the previous value. \nIf the repeatAction is True, if the consequence is always applied as soon as the MetricMeasure value is in the range of values and if the repeatAction is False, the consequence is applied only if the previous MetricMeasure value was not in the same range."
                                },
                                "validFor": {
                                  "name": "validFor",
                                  "type": "object",
                                  "description": "Reference to TimePeriod"
                                }
                              }
                            }
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "Description for the MetricDefMeasureThresholdRule ."
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name for the MetricDefMeasureThresholdRule ."
                          },
                          "numberOfAllowedCrossing": {
                            "name": "numberOfAllowedCrossing",
                            "type": "integer",
                            "description": "The number of allowed crossing occurrences in reference to the \ntolerancePeriod without a consequence being initiated."
                          },
                          "thresholdRuleSeverity": {
                            "name": "thresholdRuleSeverity",
                            "type": "string",
                            "description": "A threshold can be generated in different severity levels. A \ncrossing for each level may require a different condition and possibly trigger a different consequence."
                          },
                          "tolerancePeriod": {
                            "name": "tolerancePeriod",
                            "type": "object",
                            "description": "Reference to Duration"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "productTestSpecRelationship": {
                "name": "productTestSpecRelationship",
                "type": "array",
                "description": "A list of product test specifications related to this specification e.g. dependency, substitution",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this product test specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as substitution, dependency, exclusivity"
                    }
                  }
                }
              },
              "relatedProductSpecification": {
                "name": "relatedProductSpecification",
                "type": "array",
                "description": "The related product specification may relate to more than one product specification.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the product specification"
                    },
                    "targetProductSchema": {
                      "name": "targetProductSchema",
                      "type": "object",
                      "description": "The reference object to the schema and type of target product which is described by product specification",
                      "properties": {
                        "@type": {
                          "name": "@type",
                          "type": "string",
                          "description": "Class type of the target product"
                        },
                        "@schemaLocation": {
                          "name": "@schemaLocation",
                          "type": "string",
                          "description": "This field provides a link to the schema describing the target product",
                          "format": "uri"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "resourceRole": {
    "tableName": "ResourceRole",
    "endpoints": [
      {
        "operationId": "listResourceRole",
        "path": "/resourceRole",
        "method": "get"
      },
      {
        "operationId": "createResourceRole",
        "path": "/resourceRole",
        "method": "post"
      },
      {
        "operationId": "retrieveResourceRole",
        "path": "/resourceRole/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteResourceRole",
        "path": "/resourceRole/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResourceRole",
        "path": "/resourceRole/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the specification"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "specification version"
              },
              "role": {
                "name": "role",
                "type": "string",
                "description": "Role played by the engagedEntity in this context. As role is defined by entityRoleSpecification, this role attribute can be used to precise the role defined by entityRoleSpecification, or it can be used to define the role in case there is no entityRoleSpecification."
              },
              "entityRoleSpecification": {
                "name": "entityRoleSpecification",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "EntitySpecification version"
                  }
                }
              },
              "characteristic": {
                "name": "characteristic",
                "type": "array",
                "description": "Describes the characteristics of an entity role.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "description": "Collection of characteristic relationships",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date and time of creation of the entity role.",
                "format": "date-time"
              },
              "engagedResource": {
                "name": "engagedResource",
                "type": "object",
                "description": "Resource reference, for when Resource is used by other entities.",
                "properties": {}
              }
            }
          }
        }
      }
    }
  },
  "resourceRoleSpecification": {
    "tableName": "ResourceRoleSpecification",
    "endpoints": [
      {
        "operationId": "listResourceRoleSpecification",
        "path": "/resourceRoleSpecification",
        "method": "get"
      },
      {
        "operationId": "createResourceRoleSpecification",
        "path": "/resourceRoleSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveResourceRoleSpecification",
        "path": "/resourceRoleSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteResourceRoleSpecification",
        "path": "/resourceRoleSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResourceRoleSpecification",
        "path": "/resourceRoleSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the specification"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "specification version"
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "targetEntitySchema": {
                "name": "targetEntitySchema",
                "type": "object",
                "description": "The reference object to the schema and type of target entity which is described by a specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target entity"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target entity"
                  }
                }
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristic. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "constraint": {
                "name": "constraint",
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "constraint version"
                    }
                  }
                }
              },
              "entitySpecRelationship": {
                "name": "entitySpecRelationship",
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications.",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "name": {
                      "name": "name",
                      "type": "string"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this entity specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "associationSpec": {
                      "name": "associationSpec",
                      "type": "object",
                      "description": "reference to an AssociationSpecification object",
                      "properties": {}
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    }
                  }
                }
              },
              "permissionSpecificationSet": {
                "name": "permissionSpecificationSet",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A PermissionSpecificationSet defines a set of permissions that can be attached to a party role specification. The resulting permissions will then apply to all users that adopt this party role.",
                  "properties": {}
                }
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date and time of creation of the entity role specification.",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "productUsage": {
    "tableName": "ProductUsage",
    "endpoints": [
      {
        "operationId": "listProductUsage",
        "path": "/productUsage",
        "method": "get"
      },
      {
        "operationId": "createProductUsage",
        "path": "/productUsage",
        "method": "post"
      },
      {
        "operationId": "retrieveProductUsage",
        "path": "/productUsage/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProductUsage",
        "path": "/productUsage/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchProductUsage",
        "path": "/productUsage/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "usageDate": {
                "name": "usageDate",
                "type": "string",
                "description": "Date of usage",
                "format": "date-time"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of product usage"
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Possible values for the status of the Product Usage",
                "enum": [
                  "received",
                  "rejected",
                  "recycled",
                  "guided",
                  "rated",
                  "rerated",
                  "billed"
                ]
              },
              "usageType": {
                "name": "usageType",
                "type": "string",
                "description": "Type of usage"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether usage represents a single usage (false), or a bundle of usages specifications (true)."
              },
              "usageCharacteristic": {
                "name": "usageCharacteristic",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "description": "Collection of characteristic relationships",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "serviceUsage": {
                "name": "serviceUsage",
                "type": "array",
                "description": "Relationship to service usage",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "The name of the usage"
                    },
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string",
                      "description": "The actual type of the target instance when needed for disambiguation."
                    }
                  }
                }
              },
              "resourceUsage": {
                "name": "resourceUsage",
                "type": "array",
                "description": "Relationship to resource usage",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "ResourceUsage reference. ResourceUsage is usage event for Resource.",
                  "properties": {}
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "ratedProductUsage": {
                "name": "ratedProductUsage",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "An occurrence of employing a product for its intended purpose with all rating details",
                  "properties": {
                    "bucketValueConvertedInAmount": {
                      "name": "bucketValueConvertedInAmount",
                      "type": "object",
                      "description": "A base / value business entity used to represent money",
                      "properties": {
                        "unit": {
                          "name": "unit",
                          "type": "string",
                          "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                        },
                        "value": {
                          "name": "value",
                          "type": "number",
                          "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                          "format": "float"
                        }
                      }
                    },
                    "isBilled": {
                      "name": "isBilled",
                      "type": "boolean",
                      "description": "Boolean indicating if usage have been billed or not"
                    },
                    "offerTariffType": {
                      "name": "offerTariffType",
                      "type": "string",
                      "description": "Type of tariff applied"
                    },
                    "ratingAmountType": {
                      "name": "ratingAmountType",
                      "type": "string",
                      "description": "Type of amount"
                    },
                    "ratingDate": {
                      "name": "ratingDate",
                      "type": "string",
                      "description": "Date of usage rating",
                      "format": "date-time"
                    },
                    "usageRatingTag": {
                      "name": "usageRatingTag",
                      "type": "string",
                      "description": "Tag value: [usage]: the usage is always rated outside a usage bundle\n[included usage]: the usage is rated inside a usage bundle\n[non included usage]: the usage bundle is exhausted. The usage is rated outside the usage bundle"
                    },
                    "isTaxExempt": {
                      "name": "isTaxExempt",
                      "type": "boolean",
                      "description": "Indicates if the rated amount is exempt of tax"
                    },
                    "taxExcludedRatingAmount": {
                      "name": "taxExcludedRatingAmount",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "taxIncludedRatingAmount": {
                      "name": "taxIncludedRatingAmount",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "taxRate": {
                      "name": "taxRate",
                      "type": "number",
                      "description": "Tax rate",
                      "format": "float"
                    }
                  }
                }
              },
              "product": {
                "name": "product",
                "type": "object",
                "description": "A Product reference",
                "properties": {}
              },
              "usageSpecification": {
                "name": "usageSpecification",
                "type": "object",
                "description": "ProductUsageSpecification reference. ProductUsageSpecification is a detailed description of a usage event that are of interest to the business and can have charges applied to it. It is comprised of characteristics, which define all attributes known for a particular type of usage.",
                "properties": {}
              },
              "bundledProductUsage": {
                "name": "bundledProductUsage",
                "type": "array",
                "description": "Relationship to Product Usage in bundle",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Product Usage reference. An occurrence of usage on a Product derived from various resource usages.",
                  "properties": {}
                }
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "description": "A list of external identifiers assoicated with this product",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "productUsageSpecification": {
    "tableName": "ProductUsageSpecification",
    "endpoints": [
      {
        "operationId": "listProductUsageSpecification",
        "path": "/productUsageSpecification",
        "method": "get"
      },
      {
        "operationId": "createProductUsageSpecification",
        "path": "/productUsageSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveProductUsageSpecification",
        "path": "/productUsageSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProductUsageSpecification",
        "path": "/productUsageSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchProductUsageSpecification",
        "path": "/productUsageSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the specification"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item."
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "specification version"
              },
              "productSpecification": {
                "name": "productSpecification",
                "type": "array",
                "description": "Relationship to Product specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the product specification"
                    },
                    "targetProductSchema": {
                      "name": "targetProductSchema",
                      "type": "object",
                      "description": "The reference object to the schema and type of target product which is described by product specification",
                      "properties": {
                        "@type": {
                          "name": "@type",
                          "type": "string",
                          "description": "Class type of the target product"
                        },
                        "@schemaLocation": {
                          "name": "@schemaLocation",
                          "type": "string",
                          "description": "This field provides a link to the schema describing the target product",
                          "format": "uri"
                        }
                      }
                    }
                  }
                }
              },
              "bundledProductUsageSpecification": {
                "name": "bundledProductUsageSpecification",
                "type": "array",
                "description": "Relationship to Product specification in bundle",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "ProductUsageSpecification reference. ProductUsageSpecification is a detailed description of a usage event that are of interest to the business and can have charges applied to it. It is comprised of characteristics, which define all attributes known for a particular type of usage.",
                  "properties": {}
                }
              },
              "productUsageSpecRelationship": {
                "name": "productUsageSpecRelationship",
                "type": "array",
                "description": "A list of product usage specifications related to this specification, e.g. migration, substitution, dependency or exclusivity relationship",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as dependency, substitution or exclusivity"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this service specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                      "properties": {
                        "startDateTime": {
                          "name": "startDateTime",
                          "type": "string",
                          "description": "Start of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        },
                        "endDateTime": {
                          "name": "endDateTime",
                          "type": "string",
                          "description": "End of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              },
              "serviceUsageSpecification": {
                "name": "serviceUsageSpecification",
                "type": "array",
                "description": "Relationship to service usage specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "UsageSpecification reference. UsageSpecification is a detailed description of a service usage event that are of interest to the business. It is comprised of characteristics, which define all attributes known for a particular type of usage.",
                  "properties": {}
                }
              },
              "resourceUsageSpecification": {
                "name": "resourceUsageSpecification",
                "type": "array",
                "description": "Relationship to resource usage specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "ResourceUsageSpecification reference. ResourceUsageSpecification is a detailed description of a usage event that are of interest to the business and can have charges applied to it. It is comprised of characteristics, which define all attributes known for a particular type of usage.",
                  "properties": {}
                }
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristic. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "Reference to TimePeriod"
              }
            }
          }
        }
      }
    }
  },
  "checkProductConfiguration": {
    "tableName": "CheckProductConfiguration",
    "endpoints": [
      {
        "operationId": "listCheckProductConfiguration",
        "path": "/checkProductConfiguration",
        "method": "get"
      },
      {
        "operationId": "createCheckProductConfiguration",
        "path": "/checkProductConfiguration",
        "method": "post"
      },
      {
        "operationId": "retrieveCheckProductConfiguration",
        "path": "/checkProductConfiguration/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "channel": {
                "name": "channel",
                "type": "object",
                "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
                "properties": {}
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Party playing a role for this configuration, e.g. a customer, prospect, employee.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "contextEntity": {
                "name": "contextEntity",
                "type": "object",
                "description": "Reference to EntityRef"
              },
              "contextCharacteristic": {
                "name": "contextCharacteristic",
                "type": "array",
                "description": "contextCharacteristic is a list of characteristics providing additional contextual information required to check validity of product configurations(s) and are not included in channel and relatedParty.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "instantSync": {
                "name": "instantSync",
                "type": "boolean",
                "description": "An indicator which when the value is \"true\" means that requester expects to get configuration result immediately in the response. If the indicator is true then the response code of 200 indicates the operation is successful otherwise a task is created with a response 201."
              },
              "provideAlternatives": {
                "name": "provideAlternatives",
                "type": "boolean",
                "description": "An indicator which when the value is \"true\" means that alternative solutions should be provided."
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Possible values for the state of a task",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "inProgress",
                  "cancelled",
                  "done",
                  "terminatedWithError"
                ]
              },
              "checkProductConfigurationItem": {
                "name": "checkProductConfigurationItem",
                "type": "array",
                "description": "CheckProductConfigurationItem is a list of product configuration items representing the input and the output of the check product configuration API.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the ProductConfigurationItem (generally it is a sequence number 01, 02, 03,...)"
                    },
                    "state": {
                      "name": "state",
                      "type": "string",
                      "description": "State of the CheckProductConfiguration item (e.g.: accepted, rejected)."
                    },
                    "stateReason": {
                      "name": "stateReason",
                      "type": "array",
                      "description": "List of human readable reasons fot the current state of the check product configuration computation (e.g.: Configured product is missing a characteristic value 'Bandwidh').",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "code": {
                            "name": "code",
                            "type": "string",
                            "description": "State reason code."
                          },
                          "label": {
                            "name": "label",
                            "type": "string",
                            "description": "State reason label."
                          }
                        }
                      }
                    },
                    "contextItem": {
                      "name": "contextItem",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "Name of the related entity."
                        },
                        "@referredType": {
                          "name": "@referredType",
                          "type": "string",
                          "description": "The actual type of the target instance when needed for disambiguation."
                        },
                        "entityHref": {
                          "name": "entityHref",
                          "type": "string",
                          "description": "Hypertext Reference of the parent element."
                        },
                        "entityId": {
                          "name": "entityId",
                          "type": "string",
                          "description": "Unique identifier of the parent element."
                        },
                        "itemId": {
                          "name": "itemId",
                          "type": "string",
                          "description": "Unique identifier of the considered item."
                        }
                      }
                    },
                    "productConfigurationItemRelationship": {
                      "name": "productConfigurationItemRelationship",
                      "type": "array",
                      "description": "ProductConfigurationItemRelationship is a list of product configuration item(s) related to the ProductConfigurationItem from the same CheckProductConfiguration. Relationship may represent a bundle, an add-on etc.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Id of the related ProductConfiguration item (must be in the same CheckProductConfiguration or QueryProductConfiguration)"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Relationship type as relies on, bundles, etc..."
                          }
                        }
                      }
                    },
                    "productConfigurationItem": {
                      "name": "productConfigurationItem",
                      "type": "array",
                      "description": "ProductConfigurationItem is a list of product configuration items contained in the ProductConfigurationItem.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to CheckProductConfigurationItem"
                      }
                    },
                    "productConfiguration": {
                      "name": "productConfiguration",
                      "type": "object",
                      "properties": {
                        "id": {
                          "name": "id",
                          "type": "string",
                          "description": "Either an index or a unique identifier for a ProductConfiguration."
                        },
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "Used only in the case of id being a unique identifier."
                        },
                        "quantity": {
                          "name": "quantity",
                          "type": "number",
                          "description": "Quantity of identical Product Configuration chosen by API client."
                        },
                        "isSelectable": {
                          "name": "isSelectable",
                          "type": "boolean",
                          "description": "A flag indicating whether the Product Configuration (associated with product/productOffering) can be selected - configured by the client"
                        },
                        "isSelected": {
                          "name": "isSelected",
                          "type": "boolean",
                          "description": "A flag indicating whether the Product Configuration is selected by API client"
                        },
                        "isVisible": {
                          "name": "isVisible",
                          "type": "boolean",
                          "description": "A flag indicating whether the Product Configuration is visible by API client and presented to the end-user."
                        },
                        "productOffering": {
                          "name": "productOffering",
                          "type": "object",
                          "properties": {
                            "version": {
                              "name": "version",
                              "type": "string",
                              "description": "Version of the product offering"
                            }
                          }
                        },
                        "productSpecification": {
                          "name": "productSpecification",
                          "type": "object",
                          "properties": {
                            "version": {
                              "name": "version",
                              "type": "string",
                              "description": "Version of the product specification"
                            },
                            "targetProductSchema": {
                              "name": "targetProductSchema",
                              "type": "object",
                              "description": "The reference object to the schema and type of target product which is described by product specification",
                              "properties": {
                                "@type": {
                                  "name": "@type",
                                  "type": "string",
                                  "description": "Class type of the target product"
                                },
                                "@schemaLocation": {
                                  "name": "@schemaLocation",
                                  "type": "string",
                                  "description": "This field provides a link to the schema describing the target product",
                                  "format": "uri"
                                }
                              }
                            }
                          }
                        },
                        "product": {
                          "name": "product",
                          "type": "union",
                          "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product entity and not the ProductRefOrValue class itself",
                          "oneOf": [
                            {
                              "name": "product_variant_0",
                              "type": "object",
                              "properties": {
                                "agreementItem": {
                                  "name": "agreementItem",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "agreementName": {
                                        "name": "agreementName",
                                        "type": "string",
                                        "description": "Name of the related entity."
                                      },
                                      "agreementHref": {
                                        "name": "agreementHref",
                                        "type": "string",
                                        "description": "Reference of the related entity."
                                      },
                                      "@referredType": {
                                        "name": "@referredType",
                                        "type": "string",
                                        "description": "The actual type of the target instance when needed for disambiguation."
                                      },
                                      "agreementId": {
                                        "name": "agreementId",
                                        "type": "string",
                                        "description": "Unique identifier of a related entity."
                                      },
                                      "agreementItemId": {
                                        "name": "agreementItemId",
                                        "type": "string",
                                        "description": "Id of an item of a Agreement"
                                      }
                                    }
                                  }
                                },
                                "billingAccount": {
                                  "name": "billingAccount",
                                  "type": "object",
                                  "properties": {
                                    "ratingType": {
                                      "name": "ratingType",
                                      "type": "string",
                                      "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                                    }
                                  }
                                },
                                "creationDate": {
                                  "name": "creationDate",
                                  "type": "string",
                                  "description": "Date and time when the product was created",
                                  "format": "date-time"
                                },
                                "description": {
                                  "name": "description",
                                  "type": "string",
                                  "description": "Is the description of the product. It could be copied from the description of the Product Offering."
                                },
                                "isBundle": {
                                  "name": "isBundle",
                                  "type": "boolean",
                                  "description": "If true, the product is a ProductBundle which is an instantiation of a BundledProductOffering. If false, the product is a ProductComponent which is an instantiation of a SimpleProductOffering."
                                },
                                "isCustomerVisible": {
                                  "name": "isCustomerVisible",
                                  "type": "boolean",
                                  "description": "If true, the product is visible by the customer."
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "Name of the product. It could be the same as the name of the product offering"
                                },
                                "orderDate": {
                                  "name": "orderDate",
                                  "type": "string",
                                  "description": "Is the date when the product was ordered",
                                  "format": "date-time"
                                },
                                "productCharacteristic": {
                                  "name": "productCharacteristic",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "description": "Reference to Characteristic"
                                  }
                                },
                                "productOffering": {
                                  "name": "productOffering",
                                  "type": "object",
                                  "description": "Reference to ProductOfferingRef"
                                },
                                "productOrderItem": {
                                  "name": "productOrderItem",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "orderItemAction": {
                                        "name": "orderItemAction",
                                        "type": "string",
                                        "description": "action to be performed on the entity managed by the item",
                                        "enum": [
                                          "add",
                                          "modify",
                                          "delete",
                                          "noChange"
                                        ]
                                      },
                                      "orderHref": {
                                        "name": "orderHref",
                                        "type": "string",
                                        "description": "Reference of the related entity."
                                      },
                                      "@referredType": {
                                        "name": "@referredType",
                                        "type": "string",
                                        "description": "The actual type of the target instance when needed for disambiguation."
                                      },
                                      "role": {
                                        "name": "role",
                                        "type": "string",
                                        "description": "Role played by the  Order"
                                      },
                                      "orderId": {
                                        "name": "orderId",
                                        "type": "string",
                                        "description": "Unique identifier of a related  Order."
                                      },
                                      "orderItemId": {
                                        "name": "orderItemId",
                                        "type": "string",
                                        "description": "Id of an item of a prduct order"
                                      }
                                    }
                                  }
                                },
                                "product": {
                                  "name": "product",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "description": "Reference to ProductRefOrValue"
                                  }
                                },
                                "productPrice": {
                                  "name": "productPrice",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "name": "description",
                                        "type": "string",
                                        "description": "Description of the Product price"
                                      },
                                      "name": {
                                        "name": "name",
                                        "type": "string",
                                        "description": "Name of the Product price"
                                      },
                                      "productOfferingPrice": {
                                        "name": "productOfferingPrice",
                                        "type": "object",
                                        "properties": {
                                          "version": {
                                            "name": "version",
                                            "type": "string",
                                            "description": "Version of the product offering price"
                                          }
                                        }
                                      },
                                      "recurringChargePeriod": {
                                        "name": "recurringChargePeriod",
                                        "type": "string",
                                        "description": "Used for recurring charge to indicate period (month, week, etc..)."
                                      },
                                      "unitOfMeasure": {
                                        "name": "unitOfMeasure",
                                        "type": "string",
                                        "description": "Unit of Measure if price depending on it (Gb, SMS volume, etc..)"
                                      },
                                      "price": {
                                        "name": "price",
                                        "type": "object",
                                        "properties": {
                                          "dutyFreeAmount": {
                                            "name": "dutyFreeAmount",
                                            "type": "object",
                                            "description": "A base / value business entity used to represent money",
                                            "properties": {
                                              "unit": {
                                                "name": "unit",
                                                "type": "string",
                                                "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                                              },
                                              "value": {
                                                "name": "value",
                                                "type": "number",
                                                "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                                                "format": "float"
                                              }
                                            }
                                          },
                                          "percentage": {
                                            "name": "percentage",
                                            "type": "number",
                                            "description": "Percentage to apply for ProdOfferPriceAlteration",
                                            "format": "float"
                                          },
                                          "taxIncludedAmount": {
                                            "name": "taxIncludedAmount",
                                            "type": "object",
                                            "description": "Reference to Money"
                                          },
                                          "taxRate": {
                                            "name": "taxRate",
                                            "type": "number",
                                            "description": "Tax rate",
                                            "format": "float"
                                          }
                                        }
                                      },
                                      "priceAlteration": {
                                        "name": "priceAlteration",
                                        "type": "array",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "properties": {
                                            "applicationDuration": {
                                              "name": "applicationDuration",
                                              "type": "integer",
                                              "description": "Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge)"
                                            },
                                            "description": {
                                              "name": "description",
                                              "type": "string",
                                              "description": "A narrative that explains in detail the semantics of this order item price alteration"
                                            },
                                            "name": {
                                              "name": "name",
                                              "type": "string",
                                              "description": "Name of the order item price alteration"
                                            },
                                            "productOfferingPrice": {
                                              "name": "productOfferingPrice",
                                              "type": "object",
                                              "description": "Reference to ProductOfferingPriceRef"
                                            },
                                            "priceType": {
                                              "name": "priceType",
                                              "type": "string",
                                              "description": "A category that describes the price such as recurring, one time and usage."
                                            },
                                            "priority": {
                                              "name": "priority",
                                              "type": "integer",
                                              "description": "Priority level for applying this alteration among all the defined alterations on the order item price"
                                            },
                                            "recurringChargePeriod": {
                                              "name": "recurringChargePeriod",
                                              "type": "string",
                                              "description": "Could be month, week..."
                                            },
                                            "unitOfMeasure": {
                                              "name": "unitOfMeasure",
                                              "type": "string",
                                              "description": "Could be minutes, GB..."
                                            },
                                            "price": {
                                              "name": "price",
                                              "type": "object",
                                              "description": "Reference to Price"
                                            }
                                          }
                                        }
                                      },
                                      "priceType": {
                                        "name": "priceType",
                                        "type": "string",
                                        "description": "indicate if the price is for recurrent or no-recurrent charge"
                                      }
                                    }
                                  }
                                },
                                "productRelationship": {
                                  "name": "productRelationship",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "name": "id",
                                        "type": "string",
                                        "description": "Id of the related product"
                                      },
                                      "relationshipType": {
                                        "name": "relationshipType",
                                        "type": "string",
                                        "description": "Relationship type as relies on, bundles, etc..."
                                      }
                                    }
                                  }
                                },
                                "productSerialNumber": {
                                  "name": "productSerialNumber",
                                  "type": "string",
                                  "description": "Is the serial number for the product. This is typically applicable to tangible products e.g. Broadband Router."
                                },
                                "productSpecification": {
                                  "name": "productSpecification",
                                  "type": "object",
                                  "description": "Reference to ProductSpecificationRef"
                                },
                                "productTerm": {
                                  "name": "productTerm",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "name": "description",
                                        "type": "string",
                                        "description": "Description of the productTerm"
                                      },
                                      "duration": {
                                        "name": "duration",
                                        "type": "object",
                                        "description": "A time interval in a given unit of time",
                                        "properties": {
                                          "amount": {
                                            "name": "amount",
                                            "type": "integer",
                                            "description": "Time interval (number of seconds, minutes, hours, etc.)"
                                          },
                                          "units": {
                                            "name": "units",
                                            "type": "string",
                                            "description": "Unit of time (seconds, minutes, hours, etc.)"
                                          }
                                        }
                                      },
                                      "validFor": {
                                        "name": "validFor",
                                        "type": "object",
                                        "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                                        "properties": {
                                          "startDateTime": {
                                            "name": "startDateTime",
                                            "type": "string",
                                            "description": "Start of the time period, using IETC-RFC-3339 format",
                                            "format": "date-time"
                                          },
                                          "endDateTime": {
                                            "name": "endDateTime",
                                            "type": "string",
                                            "description": "End of the time period, using IETC-RFC-3339 format",
                                            "format": "date-time"
                                          }
                                        }
                                      },
                                      "name": {
                                        "name": "name",
                                        "type": "string",
                                        "description": "Name of the productTerm"
                                      }
                                    }
                                  }
                                },
                                "realizingResource": {
                                  "name": "realizingResource",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "description": "Resource reference, for when Resource is used by other entities.",
                                    "properties": {}
                                  }
                                },
                                "realizingService": {
                                  "name": "realizingService",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "description": "Service reference, for when Service is used by other entities.",
                                    "properties": {}
                                  }
                                },
                                "relatedParty": {
                                  "name": "relatedParty",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "role": {
                                        "name": "role",
                                        "type": "string",
                                        "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                      },
                                      "partyOrPartyRole": {
                                        "name": "partyOrPartyRole",
                                        "type": "union",
                                        "description": "",
                                        "oneOf": [
                                          {
                                            "name": "partyOrPartyRole_variant_0",
                                            "type": "object",
                                            "description": "Reference to PartyRef"
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_1",
                                            "type": "object",
                                            "description": "Reference to PartyRoleRef"
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_2",
                                            "type": "object",
                                            "properties": {
                                              "gender": {
                                                "name": "gender",
                                                "type": "string",
                                                "description": "Gender"
                                              },
                                              "placeOfBirth": {
                                                "name": "placeOfBirth",
                                                "type": "string",
                                                "description": "Reference to the place where the individual was born"
                                              },
                                              "countryOfBirth": {
                                                "name": "countryOfBirth",
                                                "type": "string",
                                                "description": "Country where the individual was born"
                                              },
                                              "nationality": {
                                                "name": "nationality",
                                                "type": "string",
                                                "description": "Nationality"
                                              },
                                              "maritalStatus": {
                                                "name": "maritalStatus",
                                                "type": "string",
                                                "description": "Marital status (married, divorced, widow ...)"
                                              },
                                              "birthDate": {
                                                "name": "birthDate",
                                                "type": "string",
                                                "description": "Birth date",
                                                "format": "date-time"
                                              },
                                              "deathDate": {
                                                "name": "deathDate",
                                                "type": "string",
                                                "description": "Date of death",
                                                "format": "date-time"
                                              },
                                              "title": {
                                                "name": "title",
                                                "type": "string",
                                                "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                                              },
                                              "aristocraticTitle": {
                                                "name": "aristocraticTitle",
                                                "type": "string",
                                                "description": "e.g. Baron, Graf, Earl"
                                              },
                                              "generation": {
                                                "name": "generation",
                                                "type": "string",
                                                "description": "e.g.. Sr, Jr, III (the third)"
                                              },
                                              "preferredGivenName": {
                                                "name": "preferredGivenName",
                                                "type": "string",
                                                "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                              },
                                              "familyNamePrefix": {
                                                "name": "familyNamePrefix",
                                                "type": "string",
                                                "description": "Family name prefix"
                                              },
                                              "legalName": {
                                                "name": "legalName",
                                                "type": "string",
                                                "description": "Legal name or birth name (name one has for official purposes)"
                                              },
                                              "middleName": {
                                                "name": "middleName",
                                                "type": "string",
                                                "description": "Middles name or initial"
                                              },
                                              "name": {
                                                "name": "name",
                                                "type": "string",
                                                "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                                              },
                                              "formattedName": {
                                                "name": "formattedName",
                                                "type": "string",
                                                "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                                              },
                                              "location": {
                                                "name": "location",
                                                "type": "string",
                                                "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                                              },
                                              "status": {
                                                "name": "status",
                                                "type": "string",
                                                "description": "Valid values for the lifecycle state of the individual",
                                                "enum": [
                                                  "initialized",
                                                  "validated",
                                                  "deceased"
                                                ]
                                              },
                                              "otherName": {
                                                "name": "otherName",
                                                "type": "array",
                                                "description": "List of other names by which this individual is known",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                                  "properties": {
                                                    "title": {
                                                      "name": "title",
                                                      "type": "string",
                                                      "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                                    },
                                                    "aristocraticTitle": {
                                                      "name": "aristocraticTitle",
                                                      "type": "string",
                                                      "description": "e.g. Baron, Graf, Earl, etc."
                                                    },
                                                    "generation": {
                                                      "name": "generation",
                                                      "type": "string",
                                                      "description": "e.g. Sr, Jr, etc."
                                                    },
                                                    "givenName": {
                                                      "name": "givenName",
                                                      "type": "string",
                                                      "description": "First name"
                                                    },
                                                    "preferredGivenName": {
                                                      "name": "preferredGivenName",
                                                      "type": "string",
                                                      "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                                    },
                                                    "familyNamePrefix": {
                                                      "name": "familyNamePrefix",
                                                      "type": "string",
                                                      "description": "Family name prefix"
                                                    },
                                                    "familyName": {
                                                      "name": "familyName",
                                                      "type": "string",
                                                      "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                                    },
                                                    "legalName": {
                                                      "name": "legalName",
                                                      "type": "string",
                                                      "description": "Legal name or birth name (name one has for official purposes)"
                                                    },
                                                    "middleName": {
                                                      "name": "middleName",
                                                      "type": "string",
                                                      "description": "Middle name or initial"
                                                    },
                                                    "fullName": {
                                                      "name": "fullName",
                                                      "type": "string",
                                                      "description": "Full name flatten (first, middle, and last names)"
                                                    },
                                                    "formattedName": {
                                                      "name": "formattedName",
                                                      "type": "string",
                                                      "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "individualIdentification": {
                                                "name": "individualIdentification",
                                                "type": "array",
                                                "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "identificationId": {
                                                      "name": "identificationId",
                                                      "type": "string",
                                                      "description": "Identifier"
                                                    },
                                                    "issuingAuthority": {
                                                      "name": "issuingAuthority",
                                                      "type": "string",
                                                      "description": "Authority which has issued the identifier, such as: social security, town hall"
                                                    },
                                                    "issuingDate": {
                                                      "name": "issuingDate",
                                                      "type": "string",
                                                      "description": "Date at which the identifier was issued",
                                                      "format": "date-time"
                                                    },
                                                    "identificationType": {
                                                      "name": "identificationType",
                                                      "type": "string",
                                                      "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    },
                                                    "attachment": {
                                                      "name": "attachment",
                                                      "type": "union",
                                                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                                      "oneOf": [
                                                        {
                                                          "name": "attachment_variant_0",
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "name": "name",
                                                              "type": "string",
                                                              "description": "The name of the attachment"
                                                            },
                                                            "description": {
                                                              "name": "description",
                                                              "type": "string",
                                                              "description": "A narrative text describing the content of the attachment"
                                                            },
                                                            "url": {
                                                              "name": "url",
                                                              "type": "string",
                                                              "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                                            },
                                                            "content": {
                                                              "name": "content",
                                                              "type": "string",
                                                              "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                                              "format": "base64"
                                                            },
                                                            "size": {
                                                              "name": "size",
                                                              "type": "object",
                                                              "description": "An amount in a given unit",
                                                              "properties": {
                                                                "amount": {
                                                                  "name": "amount",
                                                                  "type": "number",
                                                                  "description": "Numeric value in a given unit",
                                                                  "format": "float"
                                                                },
                                                                "units": {
                                                                  "name": "units",
                                                                  "type": "string",
                                                                  "description": "Unit"
                                                                }
                                                              }
                                                            },
                                                            "validFor": {
                                                              "name": "validFor",
                                                              "type": "object",
                                                              "description": "Reference to TimePeriod"
                                                            },
                                                            "attachmentType": {
                                                              "name": "attachmentType",
                                                              "type": "string",
                                                              "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                                            },
                                                            "mimeType": {
                                                              "name": "mimeType",
                                                              "type": "string",
                                                              "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "name": "attachment_variant_1",
                                                          "type": "object",
                                                          "properties": {
                                                            "description": {
                                                              "name": "description",
                                                              "type": "string",
                                                              "description": "A narrative text describing the content of the attachment"
                                                            },
                                                            "url": {
                                                              "name": "url",
                                                              "type": "string",
                                                              "description": "Link to the attachment media/content"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "disability": {
                                                "name": "disability",
                                                "type": "array",
                                                "description": "List of disabilities suffered by the individual",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Lack or inadequate strength or ability.",
                                                  "properties": {
                                                    "disabilityCode": {
                                                      "name": "disabilityCode",
                                                      "type": "string",
                                                      "description": "Code of the disability"
                                                    },
                                                    "disabilityName": {
                                                      "name": "disabilityName",
                                                      "type": "string",
                                                      "description": "Name of the disability"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "languageAbility": {
                                                "name": "languageAbility",
                                                "type": "array",
                                                "description": "List of national languages known by the individual",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Ability of an individual to understand or converse in a language.",
                                                  "properties": {
                                                    "languageCode": {
                                                      "name": "languageCode",
                                                      "type": "string",
                                                      "description": "Language code (RFC 5646)"
                                                    },
                                                    "languageName": {
                                                      "name": "languageName",
                                                      "type": "string",
                                                      "description": "Language name"
                                                    },
                                                    "isFavouriteLanguage": {
                                                      "name": "isFavouriteLanguage",
                                                      "type": "boolean",
                                                      "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                                    },
                                                    "writingProficiency": {
                                                      "name": "writingProficiency",
                                                      "type": "string",
                                                      "description": "Writing proficiency evaluated for this language"
                                                    },
                                                    "readingProficiency": {
                                                      "name": "readingProficiency",
                                                      "type": "string",
                                                      "description": "Reading proficiency evaluated for this language"
                                                    },
                                                    "speakingProficiency": {
                                                      "name": "speakingProficiency",
                                                      "type": "string",
                                                      "description": "Speaking proficiency evaluated for this language"
                                                    },
                                                    "listeningProficiency": {
                                                      "name": "listeningProficiency",
                                                      "type": "string",
                                                      "description": "Listening proficiency evaluated for this language"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "skill": {
                                                "name": "skill",
                                                "type": "array",
                                                "description": "List of skills exhibited by the individual",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                                  "properties": {
                                                    "skillCode": {
                                                      "name": "skillCode",
                                                      "type": "string",
                                                      "description": "Code of the skill"
                                                    },
                                                    "skillName": {
                                                      "name": "skillName",
                                                      "type": "string",
                                                      "description": "Name of the skill, such as Java language"
                                                    },
                                                    "evaluatedLevel": {
                                                      "name": "evaluatedLevel",
                                                      "type": "string",
                                                      "description": "Level of expertise in a skill evaluated for an individual"
                                                    },
                                                    "comment": {
                                                      "name": "comment",
                                                      "type": "string",
                                                      "description": "A free text comment linked to the evaluation done"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "familyName": {
                                                "name": "familyName",
                                                "type": "string",
                                                "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                              },
                                              "givenName": {
                                                "name": "givenName",
                                                "type": "string",
                                                "description": "First name of the individual"
                                              }
                                            }
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_3",
                                            "type": "object",
                                            "properties": {
                                              "isLegalEntity": {
                                                "name": "isLegalEntity",
                                                "type": "boolean",
                                                "description": "If value is true, the organization is a legal entity known by a national referential."
                                              },
                                              "isHeadOffice": {
                                                "name": "isHeadOffice",
                                                "type": "boolean",
                                                "description": "If value is true, the organization is the head office"
                                              },
                                              "organizationType": {
                                                "name": "organizationType",
                                                "type": "string",
                                                "description": "Type of Organization (company, department...)"
                                              },
                                              "existsDuring": {
                                                "name": "existsDuring",
                                                "type": "object",
                                                "description": "Reference to TimePeriod"
                                              },
                                              "name": {
                                                "name": "name",
                                                "type": "string",
                                                "description": "Organization name (department name for example)"
                                              },
                                              "nameType": {
                                                "name": "nameType",
                                                "type": "string",
                                                "description": "Type of the name : Co, Inc, Ltd, etc."
                                              },
                                              "status": {
                                                "name": "status",
                                                "type": "string",
                                                "description": "Valid values for the lifecycle state of the organization",
                                                "enum": [
                                                  "initialized",
                                                  "validated",
                                                  "closed"
                                                ]
                                              },
                                              "otherName": {
                                                "name": "otherName",
                                                "type": "array",
                                                "description": "List of additional names by which the organization is known",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "tradingName": {
                                                      "name": "tradingName",
                                                      "type": "string",
                                                      "description": "The name that the organization trades under"
                                                    },
                                                    "nameType": {
                                                      "name": "nameType",
                                                      "type": "string",
                                                      "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                                    },
                                                    "name": {
                                                      "name": "name",
                                                      "type": "string",
                                                      "description": "Organization name (department name for example)"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "organizationIdentification": {
                                                "name": "organizationIdentification",
                                                "type": "array",
                                                "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "identificationId": {
                                                      "name": "identificationId",
                                                      "type": "string",
                                                      "description": "Identifier"
                                                    },
                                                    "issuingAuthority": {
                                                      "name": "issuingAuthority",
                                                      "type": "string",
                                                      "description": "Authority which has issued the identifier (chamber of commerce...)"
                                                    },
                                                    "issuingDate": {
                                                      "name": "issuingDate",
                                                      "type": "string",
                                                      "description": "Date at which the identifier was issued",
                                                      "format": "date-time"
                                                    },
                                                    "identificationType": {
                                                      "name": "identificationType",
                                                      "type": "string",
                                                      "description": "Type of identification information used to identify the company in a country or internationally"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    },
                                                    "attachment": {
                                                      "name": "attachment",
                                                      "type": "object",
                                                      "description": "Reference to AttachmentRefOrValue"
                                                    }
                                                  }
                                                }
                                              },
                                              "organizationChildRelationship": {
                                                "name": "organizationChildRelationship",
                                                "type": "array",
                                                "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "relationshipType": {
                                                      "name": "relationshipType",
                                                      "type": "string",
                                                      "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                                    },
                                                    "organization": {
                                                      "name": "organization",
                                                      "type": "object",
                                                      "properties": {}
                                                    }
                                                  }
                                                }
                                              },
                                              "organizationParentRelationship": {
                                                "name": "organizationParentRelationship",
                                                "type": "object",
                                                "properties": {
                                                  "relationshipType": {
                                                    "name": "relationshipType",
                                                    "type": "string",
                                                    "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                                  },
                                                  "organization": {
                                                    "name": "organization",
                                                    "type": "object",
                                                    "description": "Reference to OrganizationRef"
                                                  }
                                                }
                                              },
                                              "tradingName": {
                                                "name": "tradingName",
                                                "type": "string",
                                                "description": "Name that the organization (unit) trades under"
                                              }
                                            }
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_4",
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "name": "name",
                                                "type": "string",
                                                "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
                                              },
                                              "description": {
                                                "name": "description",
                                                "type": "string",
                                                "description": "A description of the PartyRole."
                                              },
                                              "role": {
                                                "name": "role",
                                                "type": "string",
                                                "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
                                              },
                                              "engagedParty": {
                                                "name": "engagedParty",
                                                "type": "object",
                                                "description": "Reference to PartyRef"
                                              },
                                              "partyRoleSpecification": {
                                                "name": "partyRoleSpecification",
                                                "type": "object",
                                                "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                                                "properties": {}
                                              },
                                              "characteristic": {
                                                "name": "characteristic",
                                                "type": "array",
                                                "description": "Describes the characteristic of a party role.",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Reference to Characteristic"
                                                }
                                              },
                                              "account": {
                                                "name": "account",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Account reference. A account may be a party account or a financial account.",
                                                  "properties": {}
                                                }
                                              },
                                              "agreement": {
                                                "name": "agreement",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                                  "properties": {}
                                                }
                                              },
                                              "contactMedium": {
                                                "name": "contactMedium",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "name": "id",
                                                      "type": "string",
                                                      "description": "Identifier for this contact medium."
                                                    },
                                                    "preferred": {
                                                      "name": "preferred",
                                                      "type": "boolean",
                                                      "description": "If true, indicates that is the preferred contact medium"
                                                    },
                                                    "contactType": {
                                                      "name": "contactType",
                                                      "type": "string",
                                                      "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "paymentMethod": {
                                                "name": "paymentMethod",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                                  "properties": {}
                                                }
                                              },
                                              "creditProfile": {
                                                "name": "creditProfile",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "creditProfileDate": {
                                                      "name": "creditProfileDate",
                                                      "type": "string",
                                                      "description": "The date the profile was established",
                                                      "format": "date-time"
                                                    },
                                                    "creditRiskRating": {
                                                      "name": "creditRiskRating",
                                                      "type": "integer",
                                                      "description": "This is an integer whose value is used to rate the risk"
                                                    },
                                                    "creditScore": {
                                                      "name": "creditScore",
                                                      "type": "integer",
                                                      "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "relatedParty": {
                                                "name": "relatedParty",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Reference to RelatedPartyOrPartyRole"
                                                }
                                              },
                                              "status": {
                                                "name": "status",
                                                "type": "string",
                                                "description": "Used to track the lifecycle status of the party role."
                                              },
                                              "statusReason": {
                                                "name": "statusReason",
                                                "type": "string",
                                                "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                                              },
                                              "validFor": {
                                                "name": "validFor",
                                                "type": "object",
                                                "description": "Reference to TimePeriod"
                                              }
                                            }
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_5",
                                            "type": "object",
                                            "description": "When business partner is the Supplier ",
                                            "properties": {}
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_6",
                                            "type": "object",
                                            "description": "When business partner is the BusinessPartner ",
                                            "properties": {}
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_7",
                                            "type": "object",
                                            "properties": {}
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_8",
                                            "type": "object",
                                            "properties": {}
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "place": {
                                  "name": "place",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "role": {
                                        "name": "role",
                                        "type": "string"
                                      },
                                      "place": {
                                        "name": "place",
                                        "type": "union",
                                        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place entity and not the PlaceRefOrValue class itself",
                                        "oneOf": [
                                          {
                                            "name": "place_variant_0",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "name": "id",
                                                "type": "string",
                                                "description": "Unique identifier of the geographic location"
                                              },
                                              "href": {
                                                "name": "href",
                                                "type": "string",
                                                "description": "An URI used to access to the geographic location resource"
                                              },
                                              "@type": {
                                                "name": "@type",
                                                "type": "string",
                                                "description": "The name of the GeoJSON structure used in the geometry attribute",
                                                "enum": [
                                                  "GeoJsonPoint",
                                                  "GeoJsonMultiPoint",
                                                  "GeoJsonLineString",
                                                  "GeoJsonMultiLineString",
                                                  "GeoJsonPolygon"
                                                ]
                                              },
                                              "bbox": {
                                                "name": "bbox",
                                                "type": "array",
                                                "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                                                "items": {
                                                  "name": "items",
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "place_variant_1",
                                            "type": "object",
                                            "properties": {
                                              "code": {
                                                "name": "code",
                                                "type": "string",
                                                "description": "A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]"
                                              },
                                              "creationDate": {
                                                "name": "creationDate",
                                                "type": "string",
                                                "description": "Date and time when the GeographicSite was created",
                                                "format": "date-time"
                                              },
                                              "description": {
                                                "name": "description",
                                                "type": "string",
                                                "description": "Text describing additional information regarding the site"
                                              },
                                              "status": {
                                                "name": "status",
                                                "type": "string",
                                                "description": "The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former"
                                              },
                                              "relatedParty": {
                                                "name": "relatedParty",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Reference to RelatedPartyOrPartyRole"
                                                }
                                              },
                                              "externalIdentifier": {
                                                "name": "externalIdentifier",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "owner": {
                                                      "name": "owner",
                                                      "type": "string",
                                                      "description": "Name of the external system that owns the entity."
                                                    },
                                                    "externalIdentifierType": {
                                                      "name": "externalIdentifierType",
                                                      "type": "string",
                                                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                                                    },
                                                    "id": {
                                                      "name": "id",
                                                      "type": "string",
                                                      "description": "identification of the entity within the external system."
                                                    }
                                                  }
                                                }
                                              },
                                              "calendar": {
                                                "name": "calendar",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "day": {
                                                      "name": "day",
                                                      "type": "string",
                                                      "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, ...)"
                                                    },
                                                    "timeZone": {
                                                      "name": "timeZone",
                                                      "type": "string",
                                                      "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)"
                                                    },
                                                    "hourPeriod": {
                                                      "name": "hourPeriod",
                                                      "type": "array",
                                                      "items": {
                                                        "name": "items",
                                                        "type": "object",
                                                        "properties": {
                                                          "endHour": {
                                                            "name": "endHour",
                                                            "type": "string",
                                                            "description": "The time when the status ends applying"
                                                          },
                                                          "startHour": {
                                                            "name": "startHour",
                                                            "type": "string",
                                                            "description": "The time when the status starts applying"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "status": {
                                                      "name": "status",
                                                      "type": "string",
                                                      "description": "Indication of the availability of the caledar period (e.g.: available, booked, etc.)"
                                                    }
                                                  }
                                                }
                                              },
                                              "place": {
                                                "name": "place",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Reference to PlaceRefOrValue"
                                                }
                                              },
                                              "siteRelationship": {
                                                "name": "siteRelationship",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "href": {
                                                      "name": "href",
                                                      "type": "string",
                                                      "description": "Reference of the related geographic site"
                                                    },
                                                    "role": {
                                                      "name": "role",
                                                      "type": "string",
                                                      "description": "Role of the related site in the relationship"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    },
                                                    "id": {
                                                      "name": "id",
                                                      "type": "string",
                                                      "description": "Unique identifier of the related site entity within the server"
                                                    },
                                                    "relationshipType": {
                                                      "name": "relationshipType",
                                                      "type": "string",
                                                      "description": "Type of relationship"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "place_variant_2",
                                            "type": "object",
                                            "properties": {
                                              "city": {
                                                "name": "city",
                                                "type": "string",
                                                "description": "City that the address is in"
                                              },
                                              "country": {
                                                "name": "country",
                                                "type": "string",
                                                "description": "Country that the address is in"
                                              },
                                              "locality": {
                                                "name": "locality",
                                                "type": "string",
                                                "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                                              },
                                              "postcode": {
                                                "name": "postcode",
                                                "type": "string",
                                                "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                                              },
                                              "stateOrProvince": {
                                                "name": "stateOrProvince",
                                                "type": "string",
                                                "description": "the State or Province that the address is in"
                                              },
                                              "streetName": {
                                                "name": "streetName",
                                                "type": "string",
                                                "description": "Name of the street or other street type"
                                              },
                                              "streetNr": {
                                                "name": "streetNr",
                                                "type": "string",
                                                "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                                              },
                                              "streetNrLast": {
                                                "name": "streetNrLast",
                                                "type": "string",
                                                "description": "Last number in a range of street numbers allocated to a property"
                                              },
                                              "streetNrLastSuffix": {
                                                "name": "streetNrLastSuffix",
                                                "type": "string",
                                                "description": "Last street number suffix for a ranged address"
                                              },
                                              "streetNrSuffix": {
                                                "name": "streetNrSuffix",
                                                "type": "string",
                                                "description": "the first street number suffix"
                                              },
                                              "streetSuffix": {
                                                "name": "streetSuffix",
                                                "type": "string",
                                                "description": "A modifier denoting a relative direction"
                                              },
                                              "streetType": {
                                                "name": "streetType",
                                                "type": "string",
                                                "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                                              },
                                              "countryCode": {
                                                "name": "countryCode",
                                                "type": "array",
                                                "description": "Country codes are short alphabetic or numeric geographical codes (geocodes) developed to represent countries and dependent areas, for use in data processing and communications. Several different systems have been developed to do this. The term country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes, the E.164 country calling codes.",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "format": {
                                                      "name": "format",
                                                      "type": "string",
                                                      "description": "Standard/Regulatory definition identifier. e.g., ISO 3166-1"
                                                    },
                                                    "value": {
                                                      "name": "value",
                                                      "type": "string",
                                                      "description": "The value of the resource in the corresponding standard.e.g., a country code value"
                                                    }
                                                  }
                                                }
                                              },
                                              "externalIdentifier": {
                                                "name": "externalIdentifier",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Reference to ExternalIdentifier"
                                                }
                                              },
                                              "geographicLocation": {
                                                "name": "geographicLocation",
                                                "type": "union",
                                                "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicLocation entity and not the GeographicLocationRefOrValue class itself",
                                                "oneOf": [
                                                  {
                                                    "name": "geographicLocation_variant_0",
                                                    "type": "object",
                                                    "description": "Reference to GeographicLocation"
                                                  },
                                                  {
                                                    "name": "geographicLocation_variant_1",
                                                    "type": "object",
                                                    "properties": {}
                                                  }
                                                ]
                                              },
                                              "geographicSubAddress": {
                                                "name": "geographicSubAddress",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "buildingName": {
                                                      "name": "buildingName",
                                                      "type": "string",
                                                      "description": "allows for buildings that have well-known names"
                                                    },
                                                    "href": {
                                                      "name": "href",
                                                      "type": "string",
                                                      "description": "Link to the subAddress"
                                                    },
                                                    "id": {
                                                      "name": "id",
                                                      "type": "string",
                                                      "description": "Unique Identifier of the subAddress"
                                                    },
                                                    "levelNumber": {
                                                      "name": "levelNumber",
                                                      "type": "string",
                                                      "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                                                    },
                                                    "levelType": {
                                                      "name": "levelType",
                                                      "type": "string",
                                                      "description": "describes level types within a building"
                                                    },
                                                    "name": {
                                                      "name": "name",
                                                      "type": "string",
                                                      "description": "Name of the subAddress to identify it with a meaningful identification"
                                                    },
                                                    "privateStreetName": {
                                                      "name": "privateStreetName",
                                                      "type": "string",
                                                      "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                                                    },
                                                    "privateStreetNumber": {
                                                      "name": "privateStreetNumber",
                                                      "type": "string",
                                                      "description": "private streets numbers internal to a private street"
                                                    },
                                                    "subUnit": {
                                                      "name": "subUnit",
                                                      "type": "array",
                                                      "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                                                      "items": {
                                                        "name": "items",
                                                        "type": "object",
                                                        "properties": {
                                                          "subUnitNumber": {
                                                            "name": "subUnitNumber",
                                                            "type": "string",
                                                            "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                                                          },
                                                          "subUnitType": {
                                                            "name": "subUnitType",
                                                            "type": "string",
                                                            "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "subAddressType": {
                                                      "name": "subAddressType",
                                                      "type": "string",
                                                      "description": "Type of subAddress : it can be a subunit or a private street"
                                                    }
                                                  }
                                                }
                                              },
                                              "geographicAddressType": {
                                                "name": "geographicAddressType",
                                                "type": "string",
                                                "description": "Classification of the address, e.g., residential, industrial "
                                              }
                                            }
                                          },
                                          {
                                            "name": "place_variant_3",
                                            "type": "object",
                                            "description": "Place reference.",
                                            "properties": {}
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "startDate": {
                                  "name": "startDate",
                                  "type": "string",
                                  "description": "Is the date from which the product starts",
                                  "format": "date-time"
                                },
                                "status": {
                                  "name": "status",
                                  "type": "string",
                                  "description": "Possible values for the status of the product",
                                  "enum": [
                                    "created",
                                    "pendingActive",
                                    "cancelled",
                                    "active",
                                    "pendingTerminate",
                                    "terminated",
                                    "suspended",
                                    "aborted "
                                  ]
                                },
                                "terminationDate": {
                                  "name": "terminationDate",
                                  "type": "string",
                                  "description": "Is the date when the product was terminated",
                                  "format": "date-time"
                                },
                                "intent": {
                                  "name": "intent",
                                  "type": "union",
                                  "description": "Intent Ref (if Intent already exists) or Value (if Intent be created or its details be presented)",
                                  "oneOf": [
                                    {
                                      "name": "intent_variant_0",
                                      "type": "object",
                                      "description": "Intent reference, for when Intent is used by other entities",
                                      "properties": {}
                                    },
                                    {
                                      "name": "intent_variant_1",
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "name": "description",
                                          "type": "string",
                                          "description": "The description of the intent."
                                        },
                                        "validFor": {
                                          "name": "validFor",
                                          "type": "object",
                                          "description": "Reference to TimePeriod"
                                        },
                                        "isBundle": {
                                          "name": "isBundle",
                                          "type": "boolean",
                                          "description": "isBundle determines whether an intent represents a single intent (false), or a bundle of intents(true)."
                                        },
                                        "priority": {
                                          "name": "priority",
                                          "type": "string",
                                          "description": "Can be used by intent owner to prioritize intents in an intent management system"
                                        },
                                        "statusChangeDate": {
                                          "name": "statusChangeDate",
                                          "type": "string",
                                          "description": "A date time( DateTime). The date that the entity status changed to the current one",
                                          "format": "date-time"
                                        },
                                        "context": {
                                          "name": "context",
                                          "type": "string",
                                          "description": "A string used to give a context to the intent"
                                        },
                                        "version": {
                                          "name": "version",
                                          "type": "string",
                                          "description": "A field that identifies the specific version of an instance of an intent."
                                        },
                                        "intentSpecification": {
                                          "name": "intentSpecification",
                                          "type": "object",
                                          "description": "Reference to EntityRef"
                                        },
                                        "intentRelationship": {
                                          "name": "intentRelationship",
                                          "type": "array",
                                          "description": "A list of intents related to this intent",
                                          "items": {
                                            "name": "items",
                                            "type": "object",
                                            "description": "A uni-directionmal relationship from this entity to a target entity instance",
                                            "properties": {
                                              "href": {
                                                "name": "href",
                                                "type": "string"
                                              },
                                              "name": {
                                                "name": "name",
                                                "type": "string"
                                              },
                                              "role": {
                                                "name": "role",
                                                "type": "string",
                                                "description": "The association role for this entity"
                                              },
                                              "validFor": {
                                                "name": "validFor",
                                                "type": "object",
                                                "description": "Reference to TimePeriod"
                                              },
                                              "associationSpec": {
                                                "name": "associationSpec",
                                                "type": "object",
                                                "description": "Reference to EntityRef"
                                              },
                                              "@baseType": {
                                                "name": "@baseType",
                                                "type": "string",
                                                "description": "When sub-classing, this defines the super-class"
                                              },
                                              "@schemaLocation": {
                                                "name": "@schemaLocation",
                                                "type": "string",
                                                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                                              },
                                              "relationshipType": {
                                                "name": "relationshipType",
                                                "type": "string",
                                                "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                                              },
                                              "id": {
                                                "name": "id",
                                                "type": "string"
                                              },
                                              "@referredType": {
                                                "name": "@referredType",
                                                "type": "string"
                                              },
                                              "@type": {
                                                "name": "@type",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "characteristic": {
                                          "name": "characteristic",
                                          "type": "array",
                                          "items": {
                                            "name": "items",
                                            "type": "object",
                                            "description": "Reference to Characteristic"
                                          }
                                        },
                                        "relatedParty": {
                                          "name": "relatedParty",
                                          "type": "array",
                                          "items": {
                                            "name": "items",
                                            "type": "object",
                                            "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                                          }
                                        },
                                        "attachment": {
                                          "name": "attachment",
                                          "type": "array",
                                          "description": "Attachments that may be of relevance to this intent, such as picture, document, media",
                                          "items": {
                                            "name": "items",
                                            "type": "object",
                                            "description": "Reference to AttachmentRefOrValue"
                                          }
                                        },
                                        "name": {
                                          "name": "name",
                                          "type": "string",
                                          "description": "The name of the intent."
                                        },
                                        "expression": {
                                          "name": "expression",
                                          "type": "object",
                                          "properties": {
                                            "expressionLanguage": {
                                              "name": "expressionLanguage",
                                              "type": "string",
                                              "description": "Possible values for the serialized Expression language of an intent or Intent report",
                                              "enum": [
                                                "Turtle",
                                                "JSON-LD",
                                                "RDF-XML",
                                                "Other"
                                              ]
                                            },
                                            "iri": {
                                              "name": "iri",
                                              "type": "string",
                                              "description": "Internationalized Resource Identifier of the intent Expression"
                                            },
                                            "expressionValue": {
                                              "name": "expressionValue",
                                              "type": "string",
                                              "description": "expression value is the ontology-encoded form of the Intent such as RDF-XML, Turtle, Json-LD,..."
                                            }
                                          }
                                        },
                                        "creationDate": {
                                          "name": "creationDate",
                                          "type": "string",
                                          "description": "Date and time of the creation of this REST resource",
                                          "format": "date-time"
                                        },
                                        "lastUpdate": {
                                          "name": "lastUpdate",
                                          "type": "string",
                                          "description": "Date and time of the last update of this REST resource",
                                          "format": "date-time"
                                        },
                                        "lifecycleStatus": {
                                          "name": "lifecycleStatus",
                                          "type": "string",
                                          "description": "Used to indicate the current lifecycle status of this intent"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "name": "product_variant_1",
                              "type": "object",
                              "description": "A Product reference",
                              "properties": {}
                            }
                          ]
                        },
                        "bundledProductOfferingOption": {
                          "name": "bundledProductOfferingOption",
                          "type": "object",
                          "properties": {
                            "numberRelOfferDefault": {
                              "name": "numberRelOfferDefault",
                              "type": "integer",
                              "description": "Default number of produc offereings that should be procured as part of the related BundledProductOffering"
                            },
                            "numberRelOfferLowerLimit": {
                              "name": "numberRelOfferLowerLimit",
                              "type": "integer",
                              "description": "lower limit for a product offering that can be procured as part of the related BundledProductOffering"
                            },
                            "numberRelOfferUpperLimit": {
                              "name": "numberRelOfferUpperLimit",
                              "type": "integer",
                              "description": "upper limit for a product offering that can be procured as part of the related BundledProductOffering"
                            }
                          }
                        },
                        "bundledGroupProductOffering": {
                          "name": "bundledGroupProductOffering",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Locally unique identifier of the group, useful in case the parent product offering or group includes multiple groups."
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the group of child offerings. Required to distinguish several choice groups."
                            },
                            "bundledProductOffering": {
                              "name": "bundledProductOffering",
                              "type": "array",
                              "description": "Child offerings, from which instances can be created as direct or hierarchically indirect children of the parent offering.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "bundledProductOfferingOption": {
                                    "name": "bundledProductOfferingOption",
                                    "type": "object",
                                    "description": "Reference to BundledProductOfferingOption"
                                  }
                                }
                              }
                            },
                            "bundledGroupProductOffering": {
                              "name": "bundledGroupProductOffering",
                              "type": "array",
                              "description": "Child groups of product offerings, to enable hierarchical sub-grouping.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to BundledGroupProductOffering"
                              }
                            },
                            "bundledGroupProductOfferingOption": {
                              "name": "bundledGroupProductOfferingOption",
                              "type": "object",
                              "properties": {
                                "numberRelOfferLowerLimit": {
                                  "name": "numberRelOfferLowerLimit",
                                  "type": "integer",
                                  "description": "The minimum total number of instances of the child offerings directly of hierarchically in the group that should be instantiated"
                                },
                                "numberRelOfferUpperLimit": {
                                  "name": "numberRelOfferUpperLimit",
                                  "type": "integer",
                                  "description": "The maximum total number of instances of the child offerings directly of hierarchically in the group that should be instantiated"
                                }
                              }
                            }
                          }
                        },
                        "policy": {
                          "name": "policy",
                          "type": "array",
                          "description": "Relevant policies used to compute the product configuration.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "id": {
                                "name": "id",
                                "type": "string",
                                "description": "unique identifier"
                              },
                              "href": {
                                "name": "href",
                                "type": "string",
                                "description": "Hyperlink reference"
                              },
                              "version": {
                                "name": "version",
                                "type": "string"
                              },
                              "@type": {
                                "name": "@type",
                                "type": "string",
                                "description": "When sub-classing, this defines the sub-class Extensible name"
                              },
                              "@baseType": {
                                "name": "@baseType",
                                "type": "string",
                                "description": "When sub-classing, this defines the super-class"
                              },
                              "@schemaLocation": {
                                "name": "@schemaLocation",
                                "type": "string",
                                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                              }
                            }
                          }
                        },
                        "configurationAction": {
                          "name": "configurationAction",
                          "type": "array",
                          "description": "A list of allowed actions or a list of selected actions.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "action": {
                                "name": "action",
                                "type": "string",
                                "description": "The name of the action."
                              },
                              "description": {
                                "name": "description",
                                "type": "string",
                                "description": "The description of the action (human-readable explanation of what the action does)."
                              },
                              "isSelected": {
                                "name": "isSelected",
                                "type": "boolean",
                                "description": "A flag indicating whether the action is selected in the current product configuration."
                              }
                            }
                          }
                        },
                        "configurationTerm": {
                          "name": "configurationTerm",
                          "type": "array",
                          "description": "A list of allowed terms or a list of selected terms.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "description": {
                                "name": "description",
                                "type": "string",
                                "description": "Description of the configuration term."
                              },
                              "duration": {
                                "name": "duration",
                                "type": "object",
                                "description": "Reference to Duration"
                              },
                              "name": {
                                "name": "name",
                                "type": "string",
                                "description": "Name of the configuration term."
                              },
                              "validFor": {
                                "name": "validFor",
                                "type": "object",
                                "description": "Reference to TimePeriod"
                              },
                              "isSelectable": {
                                "name": "isSelectable",
                                "type": "boolean",
                                "description": "A flag indicating whether this configuration term may be selected by the end-user in the context of the product configuration."
                              },
                              "isSelected": {
                                "name": "isSelected",
                                "type": "boolean",
                                "description": "A flag indicating whether this configuration term is selected is the context of the product configuration."
                              }
                            }
                          }
                        },
                        "configurationPrice": {
                          "name": "configurationPrice",
                          "type": "array",
                          "description": "List of prices of the product configuration. Prices are computed based on product configuration, selected characteristic values, selected bundled offerings, terms etc.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "description": {
                                "name": "description",
                                "type": "string",
                                "description": "Description of the product configuration price."
                              },
                              "name": {
                                "name": "name",
                                "type": "string",
                                "description": "Name of the product configuration price."
                              },
                              "productOfferingPrice": {
                                "name": "productOfferingPrice",
                                "type": "object",
                                "description": "Reference to ProductOfferingPriceRef"
                              },
                              "recurringChargePeriod": {
                                "name": "recurringChargePeriod",
                                "type": "object",
                                "description": "Reference to Quantity"
                              },
                              "unitOfMeasure": {
                                "name": "unitOfMeasure",
                                "type": "string",
                                "description": "Unit of Measure if price depending on it (Gb, SMS volume, etc..)."
                              },
                              "price": {
                                "name": "price",
                                "type": "object",
                                "description": "Reference to Price"
                              },
                              "priceAlteration": {
                                "name": "priceAlteration",
                                "type": "array",
                                "description": "Alteration (discount, allowance) applied to the product configuration price.",
                                "items": {
                                  "name": "items",
                                  "type": "object",
                                  "description": "Reference to PriceAlteration"
                                }
                              },
                              "priceType": {
                                "name": "priceType",
                                "type": "string",
                                "description": "Indicates if the price is for recurrent or no-recurrent charge."
                              }
                            }
                          }
                        },
                        "configurationCharacteristic": {
                          "name": "configurationCharacteristic",
                          "type": "array",
                          "description": "List of characteristics of the product configuration. Each may correspond 1-1 to product/productSpecification characteristics.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "id": {
                                "name": "id",
                                "type": "string",
                                "description": "Unique identifier of the configuration characteristic."
                              },
                              "name": {
                                "name": "name",
                                "type": "string",
                                "description": "A word, term, or phrase by which this configuration characteristic is known and distinguished from other configuration characteristics."
                              },
                              "description": {
                                "name": "description",
                                "type": "string",
                                "description": "A narrative that explains the ConfigurationCharacteristic."
                              },
                              "minCardinality": {
                                "name": "minCardinality",
                                "type": "integer",
                                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                              },
                              "maxCardinality": {
                                "name": "maxCardinality",
                                "type": "integer",
                                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                              },
                              "regex": {
                                "name": "regex",
                                "type": "string",
                                "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                              },
                              "valueType": {
                                "name": "valueType",
                                "type": "string",
                                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                              },
                              "isConfigurable": {
                                "name": "isConfigurable",
                                "type": "boolean",
                                "description": "A flag indicating whether this configuration characteristic may be configured (i.e. value may be set by the end-user). In case of false value, the characteristic value may not be set by the end-user and is preset by the product configurator."
                              },
                              "configurationCharacteristicRelationship": {
                                "name": "configurationCharacteristicRelationship",
                                "type": "array",
                                "description": "Relationship to other configuration characteristics, such as dependency (the value that this characteristic can take or may be limited by the value of the related characteristic).",
                                "items": {
                                  "name": "items",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "name": "id",
                                      "type": "string",
                                      "description": "Unique identifier of the configuration characteristic."
                                    },
                                    "relationshipType": {
                                      "name": "relationshipType",
                                      "type": "string",
                                      "description": "The type of relationship."
                                    }
                                  }
                                }
                              },
                              "configurationCharacteristicValue": {
                                "name": "configurationCharacteristicValue",
                                "type": "array",
                                "description": "A list of configuration characteristic values.",
                                "items": {
                                  "name": "items",
                                  "type": "object",
                                  "properties": {
                                    "isSelectable": {
                                      "name": "isSelectable",
                                      "type": "boolean",
                                      "description": "A flag indicating whether this configuration characteristic value may be selected by the end-user in the context of the product configuration."
                                    },
                                    "isSelected": {
                                      "name": "isSelected",
                                      "type": "boolean",
                                      "description": "A flag indicating whether this configuration characteristic value is selected in the context of the product configuration."
                                    },
                                    "rangeInterval": {
                                      "name": "rangeInterval",
                                      "type": "string",
                                      "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                                    },
                                    "regex": {
                                      "name": "regex",
                                      "type": "string",
                                      "description": "A regular expression constraint for given value."
                                    },
                                    "unitOfMeasure": {
                                      "name": "unitOfMeasure",
                                      "type": "string",
                                      "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                                    },
                                    "valueFrom": {
                                      "name": "valueFrom",
                                      "type": "integer",
                                      "description": "The low range value that a characteristic can take on."
                                    },
                                    "valueTo": {
                                      "name": "valueTo",
                                      "type": "integer",
                                      "description": "The upper range value that a characteristic can take on."
                                    },
                                    "characteristicValue": {
                                      "name": "characteristicValue",
                                      "type": "object",
                                      "description": "Reference to Characteristic"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "productConfiguration": {
                          "name": "productConfiguration",
                          "type": "array",
                          "description": "List of the child product configurations. The list may include product configurations computed based on bundled product specifications.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Reference to ProductConfiguration"
                          }
                        }
                      }
                    },
                    "alternateProductConfigurationProposal": {
                      "name": "alternateProductConfigurationProposal",
                      "type": "array",
                      "description": "A list of alternative product configurations proposed to the requester of the check product configuration operation. The list may be populated in case product configuration was rejected.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to ProductConfiguration"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "queryProductConfiguration": {
    "tableName": "QueryProductConfiguration",
    "endpoints": [
      {
        "operationId": "listQueryProductConfiguration",
        "path": "/queryProductConfiguration",
        "method": "get"
      },
      {
        "operationId": "createQueryProductConfiguration",
        "path": "/queryProductConfiguration",
        "method": "post"
      },
      {
        "operationId": "retrieveQueryProductConfiguration",
        "path": "/queryProductConfiguration/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "channel": {
                "name": "channel",
                "type": "object",
                "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
                "properties": {}
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Party playing a role for this configuration, e.g. a customer, prospect, employee.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "contextEntity": {
                "name": "contextEntity",
                "type": "object",
                "description": "Reference to EntityRef"
              },
              "contextCharacteristic": {
                "name": "contextCharacteristic",
                "type": "array",
                "description": "contextCharacteristic is an array of characteristics providing additional contextual information required to compute product configurations(s) and are not included in channel and relatedParty.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "instantSync": {
                "name": "instantSync",
                "type": "boolean",
                "description": "An indicator which when the value is \"true\" means that requester expects to get configuration result immediately in the response. If the indicator is true then the response code of 200 indicates the operation is successful otherwise a task is created with a response 201."
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Possible values for the state of a task",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "inProgress",
                  "cancelled",
                  "done",
                  "terminatedWithError"
                ]
              },
              "requestProductConfigurationItem": {
                "name": "requestProductConfigurationItem",
                "type": "array",
                "description": "A list of product configuration items provided as input. These items are used to compute computed product configuration items (the output).",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the ProductConfigurationItem (generally it is a sequence number 01, 02, 03,...)"
                    },
                    "state": {
                      "name": "state",
                      "type": "string",
                      "description": "State of the QueryProductConfiguration item (e.g.: accepted, rejected)."
                    },
                    "stateReason": {
                      "name": "stateReason",
                      "type": "array",
                      "description": "List of human readable reasons fot the current state of the check product configuration computation (e.g.: Configured product is missing a characteristic value 'Bandwidh').",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "code": {
                            "name": "code",
                            "type": "string",
                            "description": "State reason code."
                          },
                          "label": {
                            "name": "label",
                            "type": "string",
                            "description": "State reason label."
                          }
                        }
                      }
                    },
                    "contextItem": {
                      "name": "contextItem",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "Name of the related entity."
                        },
                        "@referredType": {
                          "name": "@referredType",
                          "type": "string",
                          "description": "The actual type of the target instance when needed for disambiguation."
                        },
                        "entityHref": {
                          "name": "entityHref",
                          "type": "string",
                          "description": "Hypertext Reference of the parent element."
                        },
                        "entityId": {
                          "name": "entityId",
                          "type": "string",
                          "description": "Unique identifier of the parent element."
                        },
                        "itemId": {
                          "name": "itemId",
                          "type": "string",
                          "description": "Unique identifier of the considered item."
                        }
                      }
                    },
                    "productConfigurationItemRelationship": {
                      "name": "productConfigurationItemRelationship",
                      "type": "array",
                      "description": "ProductConfigurationItemRelationship is an array of product configuration item(s) related to the ProductConfigurationItem from the same CheckProductConfiguration. Relationship may represent a bundle, an add-on etc.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Id of the related ProductConfiguration item (must be in the same CheckProductConfiguration or QueryProductConfiguration)"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Relationship type as relies on, bundles, etc..."
                          }
                        }
                      }
                    },
                    "queryProductConfigurationItem": {
                      "name": "queryProductConfigurationItem",
                      "type": "array",
                      "description": "ProductConfigurationItem is an arraylist of product configuration items contained in the ProductConfigurationItem.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to QueryProductConfigurationItem"
                      }
                    },
                    "productConfiguration": {
                      "name": "productConfiguration",
                      "type": "object",
                      "properties": {
                        "id": {
                          "name": "id",
                          "type": "string",
                          "description": "Either an index or a unique identifier for a ProductConfiguration."
                        },
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "Used only in the case of id being a unique identifier."
                        },
                        "quantity": {
                          "name": "quantity",
                          "type": "number",
                          "description": "Quantity of identical Product Configuration chosen by API client."
                        },
                        "isSelectable": {
                          "name": "isSelectable",
                          "type": "boolean",
                          "description": "A flag indicating whether the Product Configuration (associated with product/productOffering) can be selected - configured by the client"
                        },
                        "isSelected": {
                          "name": "isSelected",
                          "type": "boolean",
                          "description": "A flag indicating whether the Product Configuration is selected by API client"
                        },
                        "isVisible": {
                          "name": "isVisible",
                          "type": "boolean",
                          "description": "A flag indicating whether the Product Configuration is visible by API client and presented to the end-user."
                        },
                        "productOffering": {
                          "name": "productOffering",
                          "type": "object",
                          "properties": {
                            "version": {
                              "name": "version",
                              "type": "string",
                              "description": "Version of the product offering"
                            }
                          }
                        },
                        "productSpecification": {
                          "name": "productSpecification",
                          "type": "object",
                          "properties": {
                            "version": {
                              "name": "version",
                              "type": "string",
                              "description": "Version of the product specification"
                            },
                            "targetProductSchema": {
                              "name": "targetProductSchema",
                              "type": "object",
                              "description": "The reference object to the schema and type of target product which is described by product specification",
                              "properties": {
                                "@type": {
                                  "name": "@type",
                                  "type": "string",
                                  "description": "Class type of the target product"
                                },
                                "@schemaLocation": {
                                  "name": "@schemaLocation",
                                  "type": "string",
                                  "description": "This field provides a link to the schema describing the target product",
                                  "format": "uri"
                                }
                              }
                            }
                          }
                        },
                        "product": {
                          "name": "product",
                          "type": "union",
                          "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product entity and not the ProductRefOrValue class itself",
                          "oneOf": [
                            {
                              "name": "product_variant_0",
                              "type": "object",
                              "properties": {
                                "agreementItem": {
                                  "name": "agreementItem",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "agreementName": {
                                        "name": "agreementName",
                                        "type": "string",
                                        "description": "Name of the related entity."
                                      },
                                      "agreementHref": {
                                        "name": "agreementHref",
                                        "type": "string",
                                        "description": "Reference of the related entity."
                                      },
                                      "@referredType": {
                                        "name": "@referredType",
                                        "type": "string",
                                        "description": "The actual type of the target instance when needed for disambiguation."
                                      },
                                      "agreementId": {
                                        "name": "agreementId",
                                        "type": "string",
                                        "description": "Unique identifier of a related entity."
                                      },
                                      "agreementItemId": {
                                        "name": "agreementItemId",
                                        "type": "string",
                                        "description": "Id of an item of a Agreement"
                                      }
                                    }
                                  }
                                },
                                "billingAccount": {
                                  "name": "billingAccount",
                                  "type": "object",
                                  "properties": {
                                    "ratingType": {
                                      "name": "ratingType",
                                      "type": "string",
                                      "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                                    }
                                  }
                                },
                                "creationDate": {
                                  "name": "creationDate",
                                  "type": "string",
                                  "description": "Date and time when the product was created",
                                  "format": "date-time"
                                },
                                "description": {
                                  "name": "description",
                                  "type": "string",
                                  "description": "Is the description of the product. It could be copied from the description of the Product Offering."
                                },
                                "isBundle": {
                                  "name": "isBundle",
                                  "type": "boolean",
                                  "description": "If true, the product is a ProductBundle which is an instantiation of a BundledProductOffering. If false, the product is a ProductComponent which is an instantiation of a SimpleProductOffering."
                                },
                                "isCustomerVisible": {
                                  "name": "isCustomerVisible",
                                  "type": "boolean",
                                  "description": "If true, the product is visible by the customer."
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "Name of the product. It could be the same as the name of the product offering"
                                },
                                "orderDate": {
                                  "name": "orderDate",
                                  "type": "string",
                                  "description": "Is the date when the product was ordered",
                                  "format": "date-time"
                                },
                                "productCharacteristic": {
                                  "name": "productCharacteristic",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "description": "Reference to Characteristic"
                                  }
                                },
                                "productOffering": {
                                  "name": "productOffering",
                                  "type": "object",
                                  "description": "Reference to ProductOfferingRef"
                                },
                                "productOrderItem": {
                                  "name": "productOrderItem",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "orderItemAction": {
                                        "name": "orderItemAction",
                                        "type": "string",
                                        "description": "action to be performed on the entity managed by the item",
                                        "enum": [
                                          "add",
                                          "modify",
                                          "delete",
                                          "noChange"
                                        ]
                                      },
                                      "orderHref": {
                                        "name": "orderHref",
                                        "type": "string",
                                        "description": "Reference of the related entity."
                                      },
                                      "@referredType": {
                                        "name": "@referredType",
                                        "type": "string",
                                        "description": "The actual type of the target instance when needed for disambiguation."
                                      },
                                      "role": {
                                        "name": "role",
                                        "type": "string",
                                        "description": "Role played by the  Order"
                                      },
                                      "orderId": {
                                        "name": "orderId",
                                        "type": "string",
                                        "description": "Unique identifier of a related  Order."
                                      },
                                      "orderItemId": {
                                        "name": "orderItemId",
                                        "type": "string",
                                        "description": "Id of an item of a prduct order"
                                      }
                                    }
                                  }
                                },
                                "product": {
                                  "name": "product",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "description": "Reference to ProductRefOrValue"
                                  }
                                },
                                "productPrice": {
                                  "name": "productPrice",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "name": "description",
                                        "type": "string",
                                        "description": "Description of the Product price"
                                      },
                                      "name": {
                                        "name": "name",
                                        "type": "string",
                                        "description": "Name of the Product price"
                                      },
                                      "productOfferingPrice": {
                                        "name": "productOfferingPrice",
                                        "type": "object",
                                        "properties": {
                                          "version": {
                                            "name": "version",
                                            "type": "string",
                                            "description": "Version of the product offering price"
                                          }
                                        }
                                      },
                                      "recurringChargePeriod": {
                                        "name": "recurringChargePeriod",
                                        "type": "string",
                                        "description": "Used for recurring charge to indicate period (month, week, etc..)."
                                      },
                                      "unitOfMeasure": {
                                        "name": "unitOfMeasure",
                                        "type": "string",
                                        "description": "Unit of Measure if price depending on it (Gb, SMS volume, etc..)"
                                      },
                                      "price": {
                                        "name": "price",
                                        "type": "object",
                                        "properties": {
                                          "dutyFreeAmount": {
                                            "name": "dutyFreeAmount",
                                            "type": "object",
                                            "description": "A base / value business entity used to represent money",
                                            "properties": {
                                              "unit": {
                                                "name": "unit",
                                                "type": "string",
                                                "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                                              },
                                              "value": {
                                                "name": "value",
                                                "type": "number",
                                                "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                                                "format": "float"
                                              }
                                            }
                                          },
                                          "percentage": {
                                            "name": "percentage",
                                            "type": "number",
                                            "description": "Percentage to apply for ProdOfferPriceAlteration",
                                            "format": "float"
                                          },
                                          "taxIncludedAmount": {
                                            "name": "taxIncludedAmount",
                                            "type": "object",
                                            "description": "Reference to Money"
                                          },
                                          "taxRate": {
                                            "name": "taxRate",
                                            "type": "number",
                                            "description": "Tax rate",
                                            "format": "float"
                                          }
                                        }
                                      },
                                      "priceAlteration": {
                                        "name": "priceAlteration",
                                        "type": "array",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "properties": {
                                            "applicationDuration": {
                                              "name": "applicationDuration",
                                              "type": "integer",
                                              "description": "Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge)"
                                            },
                                            "description": {
                                              "name": "description",
                                              "type": "string",
                                              "description": "A narrative that explains in detail the semantics of this order item price alteration"
                                            },
                                            "name": {
                                              "name": "name",
                                              "type": "string",
                                              "description": "Name of the order item price alteration"
                                            },
                                            "productOfferingPrice": {
                                              "name": "productOfferingPrice",
                                              "type": "object",
                                              "description": "Reference to ProductOfferingPriceRef"
                                            },
                                            "priceType": {
                                              "name": "priceType",
                                              "type": "string",
                                              "description": "A category that describes the price such as recurring, one time and usage."
                                            },
                                            "priority": {
                                              "name": "priority",
                                              "type": "integer",
                                              "description": "Priority level for applying this alteration among all the defined alterations on the order item price"
                                            },
                                            "recurringChargePeriod": {
                                              "name": "recurringChargePeriod",
                                              "type": "string",
                                              "description": "Could be month, week..."
                                            },
                                            "unitOfMeasure": {
                                              "name": "unitOfMeasure",
                                              "type": "string",
                                              "description": "Could be minutes, GB..."
                                            },
                                            "price": {
                                              "name": "price",
                                              "type": "object",
                                              "description": "Reference to Price"
                                            }
                                          }
                                        }
                                      },
                                      "priceType": {
                                        "name": "priceType",
                                        "type": "string",
                                        "description": "indicate if the price is for recurrent or no-recurrent charge"
                                      }
                                    }
                                  }
                                },
                                "productRelationship": {
                                  "name": "productRelationship",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "name": "id",
                                        "type": "string",
                                        "description": "Id of the related product"
                                      },
                                      "relationshipType": {
                                        "name": "relationshipType",
                                        "type": "string",
                                        "description": "Relationship type as relies on, bundles, etc..."
                                      }
                                    }
                                  }
                                },
                                "productSerialNumber": {
                                  "name": "productSerialNumber",
                                  "type": "string",
                                  "description": "Is the serial number for the product. This is typically applicable to tangible products e.g. Broadband Router."
                                },
                                "productSpecification": {
                                  "name": "productSpecification",
                                  "type": "object",
                                  "description": "Reference to ProductSpecificationRef"
                                },
                                "productTerm": {
                                  "name": "productTerm",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "name": "description",
                                        "type": "string",
                                        "description": "Description of the productTerm"
                                      },
                                      "duration": {
                                        "name": "duration",
                                        "type": "object",
                                        "description": "A time interval in a given unit of time",
                                        "properties": {
                                          "amount": {
                                            "name": "amount",
                                            "type": "integer",
                                            "description": "Time interval (number of seconds, minutes, hours, etc.)"
                                          },
                                          "units": {
                                            "name": "units",
                                            "type": "string",
                                            "description": "Unit of time (seconds, minutes, hours, etc.)"
                                          }
                                        }
                                      },
                                      "validFor": {
                                        "name": "validFor",
                                        "type": "object",
                                        "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                                        "properties": {
                                          "startDateTime": {
                                            "name": "startDateTime",
                                            "type": "string",
                                            "description": "Start of the time period, using IETC-RFC-3339 format",
                                            "format": "date-time"
                                          },
                                          "endDateTime": {
                                            "name": "endDateTime",
                                            "type": "string",
                                            "description": "End of the time period, using IETC-RFC-3339 format",
                                            "format": "date-time"
                                          }
                                        }
                                      },
                                      "name": {
                                        "name": "name",
                                        "type": "string",
                                        "description": "Name of the productTerm"
                                      }
                                    }
                                  }
                                },
                                "realizingResource": {
                                  "name": "realizingResource",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "description": "Resource reference, for when Resource is used by other entities.",
                                    "properties": {}
                                  }
                                },
                                "realizingService": {
                                  "name": "realizingService",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "description": "Service reference, for when Service is used by other entities.",
                                    "properties": {}
                                  }
                                },
                                "relatedParty": {
                                  "name": "relatedParty",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "role": {
                                        "name": "role",
                                        "type": "string",
                                        "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                      },
                                      "partyOrPartyRole": {
                                        "name": "partyOrPartyRole",
                                        "type": "union",
                                        "description": "",
                                        "oneOf": [
                                          {
                                            "name": "partyOrPartyRole_variant_0",
                                            "type": "object",
                                            "description": "Reference to PartyRef"
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_1",
                                            "type": "object",
                                            "description": "Reference to PartyRoleRef"
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_2",
                                            "type": "object",
                                            "properties": {
                                              "gender": {
                                                "name": "gender",
                                                "type": "string",
                                                "description": "Gender"
                                              },
                                              "placeOfBirth": {
                                                "name": "placeOfBirth",
                                                "type": "string",
                                                "description": "Reference to the place where the individual was born"
                                              },
                                              "countryOfBirth": {
                                                "name": "countryOfBirth",
                                                "type": "string",
                                                "description": "Country where the individual was born"
                                              },
                                              "nationality": {
                                                "name": "nationality",
                                                "type": "string",
                                                "description": "Nationality"
                                              },
                                              "maritalStatus": {
                                                "name": "maritalStatus",
                                                "type": "string",
                                                "description": "Marital status (married, divorced, widow ...)"
                                              },
                                              "birthDate": {
                                                "name": "birthDate",
                                                "type": "string",
                                                "description": "Birth date",
                                                "format": "date-time"
                                              },
                                              "deathDate": {
                                                "name": "deathDate",
                                                "type": "string",
                                                "description": "Date of death",
                                                "format": "date-time"
                                              },
                                              "title": {
                                                "name": "title",
                                                "type": "string",
                                                "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                                              },
                                              "aristocraticTitle": {
                                                "name": "aristocraticTitle",
                                                "type": "string",
                                                "description": "e.g. Baron, Graf, Earl"
                                              },
                                              "generation": {
                                                "name": "generation",
                                                "type": "string",
                                                "description": "e.g.. Sr, Jr, III (the third)"
                                              },
                                              "preferredGivenName": {
                                                "name": "preferredGivenName",
                                                "type": "string",
                                                "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                              },
                                              "familyNamePrefix": {
                                                "name": "familyNamePrefix",
                                                "type": "string",
                                                "description": "Family name prefix"
                                              },
                                              "legalName": {
                                                "name": "legalName",
                                                "type": "string",
                                                "description": "Legal name or birth name (name one has for official purposes)"
                                              },
                                              "middleName": {
                                                "name": "middleName",
                                                "type": "string",
                                                "description": "Middles name or initial"
                                              },
                                              "name": {
                                                "name": "name",
                                                "type": "string",
                                                "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                                              },
                                              "formattedName": {
                                                "name": "formattedName",
                                                "type": "string",
                                                "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                                              },
                                              "location": {
                                                "name": "location",
                                                "type": "string",
                                                "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                                              },
                                              "status": {
                                                "name": "status",
                                                "type": "string",
                                                "description": "Valid values for the lifecycle state of the individual",
                                                "enum": [
                                                  "initialized",
                                                  "validated",
                                                  "deceased"
                                                ]
                                              },
                                              "otherName": {
                                                "name": "otherName",
                                                "type": "array",
                                                "description": "List of other names by which this individual is known",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                                  "properties": {
                                                    "title": {
                                                      "name": "title",
                                                      "type": "string",
                                                      "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                                    },
                                                    "aristocraticTitle": {
                                                      "name": "aristocraticTitle",
                                                      "type": "string",
                                                      "description": "e.g. Baron, Graf, Earl, etc."
                                                    },
                                                    "generation": {
                                                      "name": "generation",
                                                      "type": "string",
                                                      "description": "e.g. Sr, Jr, etc."
                                                    },
                                                    "givenName": {
                                                      "name": "givenName",
                                                      "type": "string",
                                                      "description": "First name"
                                                    },
                                                    "preferredGivenName": {
                                                      "name": "preferredGivenName",
                                                      "type": "string",
                                                      "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                                    },
                                                    "familyNamePrefix": {
                                                      "name": "familyNamePrefix",
                                                      "type": "string",
                                                      "description": "Family name prefix"
                                                    },
                                                    "familyName": {
                                                      "name": "familyName",
                                                      "type": "string",
                                                      "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                                    },
                                                    "legalName": {
                                                      "name": "legalName",
                                                      "type": "string",
                                                      "description": "Legal name or birth name (name one has for official purposes)"
                                                    },
                                                    "middleName": {
                                                      "name": "middleName",
                                                      "type": "string",
                                                      "description": "Middle name or initial"
                                                    },
                                                    "fullName": {
                                                      "name": "fullName",
                                                      "type": "string",
                                                      "description": "Full name flatten (first, middle, and last names)"
                                                    },
                                                    "formattedName": {
                                                      "name": "formattedName",
                                                      "type": "string",
                                                      "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "individualIdentification": {
                                                "name": "individualIdentification",
                                                "type": "array",
                                                "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "identificationId": {
                                                      "name": "identificationId",
                                                      "type": "string",
                                                      "description": "Identifier"
                                                    },
                                                    "issuingAuthority": {
                                                      "name": "issuingAuthority",
                                                      "type": "string",
                                                      "description": "Authority which has issued the identifier, such as: social security, town hall"
                                                    },
                                                    "issuingDate": {
                                                      "name": "issuingDate",
                                                      "type": "string",
                                                      "description": "Date at which the identifier was issued",
                                                      "format": "date-time"
                                                    },
                                                    "identificationType": {
                                                      "name": "identificationType",
                                                      "type": "string",
                                                      "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    },
                                                    "attachment": {
                                                      "name": "attachment",
                                                      "type": "union",
                                                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                                      "oneOf": [
                                                        {
                                                          "name": "attachment_variant_0",
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "name": "name",
                                                              "type": "string",
                                                              "description": "The name of the attachment"
                                                            },
                                                            "description": {
                                                              "name": "description",
                                                              "type": "string",
                                                              "description": "A narrative text describing the content of the attachment"
                                                            },
                                                            "url": {
                                                              "name": "url",
                                                              "type": "string",
                                                              "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                                            },
                                                            "content": {
                                                              "name": "content",
                                                              "type": "string",
                                                              "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                                              "format": "base64"
                                                            },
                                                            "size": {
                                                              "name": "size",
                                                              "type": "object",
                                                              "description": "An amount in a given unit",
                                                              "properties": {
                                                                "amount": {
                                                                  "name": "amount",
                                                                  "type": "number",
                                                                  "description": "Numeric value in a given unit",
                                                                  "format": "float"
                                                                },
                                                                "units": {
                                                                  "name": "units",
                                                                  "type": "string",
                                                                  "description": "Unit"
                                                                }
                                                              }
                                                            },
                                                            "validFor": {
                                                              "name": "validFor",
                                                              "type": "object",
                                                              "description": "Reference to TimePeriod"
                                                            },
                                                            "attachmentType": {
                                                              "name": "attachmentType",
                                                              "type": "string",
                                                              "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                                            },
                                                            "mimeType": {
                                                              "name": "mimeType",
                                                              "type": "string",
                                                              "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "name": "attachment_variant_1",
                                                          "type": "object",
                                                          "properties": {
                                                            "description": {
                                                              "name": "description",
                                                              "type": "string",
                                                              "description": "A narrative text describing the content of the attachment"
                                                            },
                                                            "url": {
                                                              "name": "url",
                                                              "type": "string",
                                                              "description": "Link to the attachment media/content"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "disability": {
                                                "name": "disability",
                                                "type": "array",
                                                "description": "List of disabilities suffered by the individual",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Lack or inadequate strength or ability.",
                                                  "properties": {
                                                    "disabilityCode": {
                                                      "name": "disabilityCode",
                                                      "type": "string",
                                                      "description": "Code of the disability"
                                                    },
                                                    "disabilityName": {
                                                      "name": "disabilityName",
                                                      "type": "string",
                                                      "description": "Name of the disability"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "languageAbility": {
                                                "name": "languageAbility",
                                                "type": "array",
                                                "description": "List of national languages known by the individual",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Ability of an individual to understand or converse in a language.",
                                                  "properties": {
                                                    "languageCode": {
                                                      "name": "languageCode",
                                                      "type": "string",
                                                      "description": "Language code (RFC 5646)"
                                                    },
                                                    "languageName": {
                                                      "name": "languageName",
                                                      "type": "string",
                                                      "description": "Language name"
                                                    },
                                                    "isFavouriteLanguage": {
                                                      "name": "isFavouriteLanguage",
                                                      "type": "boolean",
                                                      "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                                    },
                                                    "writingProficiency": {
                                                      "name": "writingProficiency",
                                                      "type": "string",
                                                      "description": "Writing proficiency evaluated for this language"
                                                    },
                                                    "readingProficiency": {
                                                      "name": "readingProficiency",
                                                      "type": "string",
                                                      "description": "Reading proficiency evaluated for this language"
                                                    },
                                                    "speakingProficiency": {
                                                      "name": "speakingProficiency",
                                                      "type": "string",
                                                      "description": "Speaking proficiency evaluated for this language"
                                                    },
                                                    "listeningProficiency": {
                                                      "name": "listeningProficiency",
                                                      "type": "string",
                                                      "description": "Listening proficiency evaluated for this language"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "skill": {
                                                "name": "skill",
                                                "type": "array",
                                                "description": "List of skills exhibited by the individual",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                                  "properties": {
                                                    "skillCode": {
                                                      "name": "skillCode",
                                                      "type": "string",
                                                      "description": "Code of the skill"
                                                    },
                                                    "skillName": {
                                                      "name": "skillName",
                                                      "type": "string",
                                                      "description": "Name of the skill, such as Java language"
                                                    },
                                                    "evaluatedLevel": {
                                                      "name": "evaluatedLevel",
                                                      "type": "string",
                                                      "description": "Level of expertise in a skill evaluated for an individual"
                                                    },
                                                    "comment": {
                                                      "name": "comment",
                                                      "type": "string",
                                                      "description": "A free text comment linked to the evaluation done"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "familyName": {
                                                "name": "familyName",
                                                "type": "string",
                                                "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                              },
                                              "givenName": {
                                                "name": "givenName",
                                                "type": "string",
                                                "description": "First name of the individual"
                                              }
                                            }
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_3",
                                            "type": "object",
                                            "properties": {
                                              "isLegalEntity": {
                                                "name": "isLegalEntity",
                                                "type": "boolean",
                                                "description": "If value is true, the organization is a legal entity known by a national referential."
                                              },
                                              "isHeadOffice": {
                                                "name": "isHeadOffice",
                                                "type": "boolean",
                                                "description": "If value is true, the organization is the head office"
                                              },
                                              "organizationType": {
                                                "name": "organizationType",
                                                "type": "string",
                                                "description": "Type of Organization (company, department...)"
                                              },
                                              "existsDuring": {
                                                "name": "existsDuring",
                                                "type": "object",
                                                "description": "Reference to TimePeriod"
                                              },
                                              "name": {
                                                "name": "name",
                                                "type": "string",
                                                "description": "Organization name (department name for example)"
                                              },
                                              "nameType": {
                                                "name": "nameType",
                                                "type": "string",
                                                "description": "Type of the name : Co, Inc, Ltd, etc."
                                              },
                                              "status": {
                                                "name": "status",
                                                "type": "string",
                                                "description": "Valid values for the lifecycle state of the organization",
                                                "enum": [
                                                  "initialized",
                                                  "validated",
                                                  "closed"
                                                ]
                                              },
                                              "otherName": {
                                                "name": "otherName",
                                                "type": "array",
                                                "description": "List of additional names by which the organization is known",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "tradingName": {
                                                      "name": "tradingName",
                                                      "type": "string",
                                                      "description": "The name that the organization trades under"
                                                    },
                                                    "nameType": {
                                                      "name": "nameType",
                                                      "type": "string",
                                                      "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                                    },
                                                    "name": {
                                                      "name": "name",
                                                      "type": "string",
                                                      "description": "Organization name (department name for example)"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "organizationIdentification": {
                                                "name": "organizationIdentification",
                                                "type": "array",
                                                "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "identificationId": {
                                                      "name": "identificationId",
                                                      "type": "string",
                                                      "description": "Identifier"
                                                    },
                                                    "issuingAuthority": {
                                                      "name": "issuingAuthority",
                                                      "type": "string",
                                                      "description": "Authority which has issued the identifier (chamber of commerce...)"
                                                    },
                                                    "issuingDate": {
                                                      "name": "issuingDate",
                                                      "type": "string",
                                                      "description": "Date at which the identifier was issued",
                                                      "format": "date-time"
                                                    },
                                                    "identificationType": {
                                                      "name": "identificationType",
                                                      "type": "string",
                                                      "description": "Type of identification information used to identify the company in a country or internationally"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    },
                                                    "attachment": {
                                                      "name": "attachment",
                                                      "type": "object",
                                                      "description": "Reference to AttachmentRefOrValue"
                                                    }
                                                  }
                                                }
                                              },
                                              "organizationChildRelationship": {
                                                "name": "organizationChildRelationship",
                                                "type": "array",
                                                "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "relationshipType": {
                                                      "name": "relationshipType",
                                                      "type": "string",
                                                      "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                                    },
                                                    "organization": {
                                                      "name": "organization",
                                                      "type": "object",
                                                      "properties": {}
                                                    }
                                                  }
                                                }
                                              },
                                              "organizationParentRelationship": {
                                                "name": "organizationParentRelationship",
                                                "type": "object",
                                                "properties": {
                                                  "relationshipType": {
                                                    "name": "relationshipType",
                                                    "type": "string",
                                                    "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                                  },
                                                  "organization": {
                                                    "name": "organization",
                                                    "type": "object",
                                                    "description": "Reference to OrganizationRef"
                                                  }
                                                }
                                              },
                                              "tradingName": {
                                                "name": "tradingName",
                                                "type": "string",
                                                "description": "Name that the organization (unit) trades under"
                                              }
                                            }
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_4",
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "name": "name",
                                                "type": "string",
                                                "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
                                              },
                                              "description": {
                                                "name": "description",
                                                "type": "string",
                                                "description": "A description of the PartyRole."
                                              },
                                              "role": {
                                                "name": "role",
                                                "type": "string",
                                                "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
                                              },
                                              "engagedParty": {
                                                "name": "engagedParty",
                                                "type": "object",
                                                "description": "Reference to PartyRef"
                                              },
                                              "partyRoleSpecification": {
                                                "name": "partyRoleSpecification",
                                                "type": "object",
                                                "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                                                "properties": {}
                                              },
                                              "characteristic": {
                                                "name": "characteristic",
                                                "type": "array",
                                                "description": "Describes the characteristic of a party role.",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Reference to Characteristic"
                                                }
                                              },
                                              "account": {
                                                "name": "account",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Account reference. A account may be a party account or a financial account.",
                                                  "properties": {}
                                                }
                                              },
                                              "agreement": {
                                                "name": "agreement",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                                  "properties": {}
                                                }
                                              },
                                              "contactMedium": {
                                                "name": "contactMedium",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "name": "id",
                                                      "type": "string",
                                                      "description": "Identifier for this contact medium."
                                                    },
                                                    "preferred": {
                                                      "name": "preferred",
                                                      "type": "boolean",
                                                      "description": "If true, indicates that is the preferred contact medium"
                                                    },
                                                    "contactType": {
                                                      "name": "contactType",
                                                      "type": "string",
                                                      "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "paymentMethod": {
                                                "name": "paymentMethod",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                                  "properties": {}
                                                }
                                              },
                                              "creditProfile": {
                                                "name": "creditProfile",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "creditProfileDate": {
                                                      "name": "creditProfileDate",
                                                      "type": "string",
                                                      "description": "The date the profile was established",
                                                      "format": "date-time"
                                                    },
                                                    "creditRiskRating": {
                                                      "name": "creditRiskRating",
                                                      "type": "integer",
                                                      "description": "This is an integer whose value is used to rate the risk"
                                                    },
                                                    "creditScore": {
                                                      "name": "creditScore",
                                                      "type": "integer",
                                                      "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    }
                                                  }
                                                }
                                              },
                                              "relatedParty": {
                                                "name": "relatedParty",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Reference to RelatedPartyOrPartyRole"
                                                }
                                              },
                                              "status": {
                                                "name": "status",
                                                "type": "string",
                                                "description": "Used to track the lifecycle status of the party role."
                                              },
                                              "statusReason": {
                                                "name": "statusReason",
                                                "type": "string",
                                                "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                                              },
                                              "validFor": {
                                                "name": "validFor",
                                                "type": "object",
                                                "description": "Reference to TimePeriod"
                                              }
                                            }
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_5",
                                            "type": "object",
                                            "description": "When business partner is the Supplier ",
                                            "properties": {}
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_6",
                                            "type": "object",
                                            "description": "When business partner is the BusinessPartner ",
                                            "properties": {}
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_7",
                                            "type": "object",
                                            "properties": {}
                                          },
                                          {
                                            "name": "partyOrPartyRole_variant_8",
                                            "type": "object",
                                            "properties": {}
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "place": {
                                  "name": "place",
                                  "type": "array",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "role": {
                                        "name": "role",
                                        "type": "string"
                                      },
                                      "place": {
                                        "name": "place",
                                        "type": "union",
                                        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place entity and not the PlaceRefOrValue class itself",
                                        "oneOf": [
                                          {
                                            "name": "place_variant_0",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "name": "id",
                                                "type": "string",
                                                "description": "Unique identifier of the geographic location"
                                              },
                                              "href": {
                                                "name": "href",
                                                "type": "string",
                                                "description": "An URI used to access to the geographic location resource"
                                              },
                                              "@type": {
                                                "name": "@type",
                                                "type": "string",
                                                "description": "The name of the GeoJSON structure used in the geometry attribute",
                                                "enum": [
                                                  "GeoJsonPoint",
                                                  "GeoJsonMultiPoint",
                                                  "GeoJsonLineString",
                                                  "GeoJsonMultiLineString",
                                                  "GeoJsonPolygon"
                                                ]
                                              },
                                              "bbox": {
                                                "name": "bbox",
                                                "type": "array",
                                                "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                                                "items": {
                                                  "name": "items",
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "place_variant_1",
                                            "type": "object",
                                            "properties": {
                                              "code": {
                                                "name": "code",
                                                "type": "string",
                                                "description": "A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]"
                                              },
                                              "creationDate": {
                                                "name": "creationDate",
                                                "type": "string",
                                                "description": "Date and time when the GeographicSite was created",
                                                "format": "date-time"
                                              },
                                              "description": {
                                                "name": "description",
                                                "type": "string",
                                                "description": "Text describing additional information regarding the site"
                                              },
                                              "status": {
                                                "name": "status",
                                                "type": "string",
                                                "description": "The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former"
                                              },
                                              "relatedParty": {
                                                "name": "relatedParty",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Reference to RelatedPartyOrPartyRole"
                                                }
                                              },
                                              "externalIdentifier": {
                                                "name": "externalIdentifier",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "owner": {
                                                      "name": "owner",
                                                      "type": "string",
                                                      "description": "Name of the external system that owns the entity."
                                                    },
                                                    "externalIdentifierType": {
                                                      "name": "externalIdentifierType",
                                                      "type": "string",
                                                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                                                    },
                                                    "id": {
                                                      "name": "id",
                                                      "type": "string",
                                                      "description": "identification of the entity within the external system."
                                                    }
                                                  }
                                                }
                                              },
                                              "calendar": {
                                                "name": "calendar",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "day": {
                                                      "name": "day",
                                                      "type": "string",
                                                      "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, ...)"
                                                    },
                                                    "timeZone": {
                                                      "name": "timeZone",
                                                      "type": "string",
                                                      "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)"
                                                    },
                                                    "hourPeriod": {
                                                      "name": "hourPeriod",
                                                      "type": "array",
                                                      "items": {
                                                        "name": "items",
                                                        "type": "object",
                                                        "properties": {
                                                          "endHour": {
                                                            "name": "endHour",
                                                            "type": "string",
                                                            "description": "The time when the status ends applying"
                                                          },
                                                          "startHour": {
                                                            "name": "startHour",
                                                            "type": "string",
                                                            "description": "The time when the status starts applying"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "status": {
                                                      "name": "status",
                                                      "type": "string",
                                                      "description": "Indication of the availability of the caledar period (e.g.: available, booked, etc.)"
                                                    }
                                                  }
                                                }
                                              },
                                              "place": {
                                                "name": "place",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Reference to PlaceRefOrValue"
                                                }
                                              },
                                              "siteRelationship": {
                                                "name": "siteRelationship",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "href": {
                                                      "name": "href",
                                                      "type": "string",
                                                      "description": "Reference of the related geographic site"
                                                    },
                                                    "role": {
                                                      "name": "role",
                                                      "type": "string",
                                                      "description": "Role of the related site in the relationship"
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    },
                                                    "id": {
                                                      "name": "id",
                                                      "type": "string",
                                                      "description": "Unique identifier of the related site entity within the server"
                                                    },
                                                    "relationshipType": {
                                                      "name": "relationshipType",
                                                      "type": "string",
                                                      "description": "Type of relationship"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "name": "place_variant_2",
                                            "type": "object",
                                            "properties": {
                                              "city": {
                                                "name": "city",
                                                "type": "string",
                                                "description": "City that the address is in"
                                              },
                                              "country": {
                                                "name": "country",
                                                "type": "string",
                                                "description": "Country that the address is in"
                                              },
                                              "locality": {
                                                "name": "locality",
                                                "type": "string",
                                                "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                                              },
                                              "postcode": {
                                                "name": "postcode",
                                                "type": "string",
                                                "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                                              },
                                              "stateOrProvince": {
                                                "name": "stateOrProvince",
                                                "type": "string",
                                                "description": "the State or Province that the address is in"
                                              },
                                              "streetName": {
                                                "name": "streetName",
                                                "type": "string",
                                                "description": "Name of the street or other street type"
                                              },
                                              "streetNr": {
                                                "name": "streetNr",
                                                "type": "string",
                                                "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                                              },
                                              "streetNrLast": {
                                                "name": "streetNrLast",
                                                "type": "string",
                                                "description": "Last number in a range of street numbers allocated to a property"
                                              },
                                              "streetNrLastSuffix": {
                                                "name": "streetNrLastSuffix",
                                                "type": "string",
                                                "description": "Last street number suffix for a ranged address"
                                              },
                                              "streetNrSuffix": {
                                                "name": "streetNrSuffix",
                                                "type": "string",
                                                "description": "the first street number suffix"
                                              },
                                              "streetSuffix": {
                                                "name": "streetSuffix",
                                                "type": "string",
                                                "description": "A modifier denoting a relative direction"
                                              },
                                              "streetType": {
                                                "name": "streetType",
                                                "type": "string",
                                                "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                                              },
                                              "countryCode": {
                                                "name": "countryCode",
                                                "type": "array",
                                                "description": "Country codes are short alphabetic or numeric geographical codes (geocodes) developed to represent countries and dependent areas, for use in data processing and communications. Several different systems have been developed to do this. The term country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes, the E.164 country calling codes.",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "format": {
                                                      "name": "format",
                                                      "type": "string",
                                                      "description": "Standard/Regulatory definition identifier. e.g., ISO 3166-1"
                                                    },
                                                    "value": {
                                                      "name": "value",
                                                      "type": "string",
                                                      "description": "The value of the resource in the corresponding standard.e.g., a country code value"
                                                    }
                                                  }
                                                }
                                              },
                                              "externalIdentifier": {
                                                "name": "externalIdentifier",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "description": "Reference to ExternalIdentifier"
                                                }
                                              },
                                              "geographicLocation": {
                                                "name": "geographicLocation",
                                                "type": "union",
                                                "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicLocation entity and not the GeographicLocationRefOrValue class itself",
                                                "oneOf": [
                                                  {
                                                    "name": "geographicLocation_variant_0",
                                                    "type": "object",
                                                    "description": "Reference to GeographicLocation"
                                                  },
                                                  {
                                                    "name": "geographicLocation_variant_1",
                                                    "type": "object",
                                                    "properties": {}
                                                  }
                                                ]
                                              },
                                              "geographicSubAddress": {
                                                "name": "geographicSubAddress",
                                                "type": "array",
                                                "items": {
                                                  "name": "items",
                                                  "type": "object",
                                                  "properties": {
                                                    "buildingName": {
                                                      "name": "buildingName",
                                                      "type": "string",
                                                      "description": "allows for buildings that have well-known names"
                                                    },
                                                    "href": {
                                                      "name": "href",
                                                      "type": "string",
                                                      "description": "Link to the subAddress"
                                                    },
                                                    "id": {
                                                      "name": "id",
                                                      "type": "string",
                                                      "description": "Unique Identifier of the subAddress"
                                                    },
                                                    "levelNumber": {
                                                      "name": "levelNumber",
                                                      "type": "string",
                                                      "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                                                    },
                                                    "levelType": {
                                                      "name": "levelType",
                                                      "type": "string",
                                                      "description": "describes level types within a building"
                                                    },
                                                    "name": {
                                                      "name": "name",
                                                      "type": "string",
                                                      "description": "Name of the subAddress to identify it with a meaningful identification"
                                                    },
                                                    "privateStreetName": {
                                                      "name": "privateStreetName",
                                                      "type": "string",
                                                      "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                                                    },
                                                    "privateStreetNumber": {
                                                      "name": "privateStreetNumber",
                                                      "type": "string",
                                                      "description": "private streets numbers internal to a private street"
                                                    },
                                                    "subUnit": {
                                                      "name": "subUnit",
                                                      "type": "array",
                                                      "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                                                      "items": {
                                                        "name": "items",
                                                        "type": "object",
                                                        "properties": {
                                                          "subUnitNumber": {
                                                            "name": "subUnitNumber",
                                                            "type": "string",
                                                            "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                                                          },
                                                          "subUnitType": {
                                                            "name": "subUnitType",
                                                            "type": "string",
                                                            "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "subAddressType": {
                                                      "name": "subAddressType",
                                                      "type": "string",
                                                      "description": "Type of subAddress : it can be a subunit or a private street"
                                                    }
                                                  }
                                                }
                                              },
                                              "geographicAddressType": {
                                                "name": "geographicAddressType",
                                                "type": "string",
                                                "description": "Classification of the address, e.g., residential, industrial "
                                              }
                                            }
                                          },
                                          {
                                            "name": "place_variant_3",
                                            "type": "object",
                                            "description": "Place reference.",
                                            "properties": {}
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "startDate": {
                                  "name": "startDate",
                                  "type": "string",
                                  "description": "Is the date from which the product starts",
                                  "format": "date-time"
                                },
                                "status": {
                                  "name": "status",
                                  "type": "string",
                                  "description": "Possible values for the status of the product",
                                  "enum": [
                                    "created",
                                    "pendingActive",
                                    "cancelled",
                                    "active",
                                    "pendingTerminate",
                                    "terminated",
                                    "suspended",
                                    "aborted "
                                  ]
                                },
                                "terminationDate": {
                                  "name": "terminationDate",
                                  "type": "string",
                                  "description": "Is the date when the product was terminated",
                                  "format": "date-time"
                                },
                                "intent": {
                                  "name": "intent",
                                  "type": "union",
                                  "description": "Intent Ref (if Intent already exists) or Value (if Intent be created or its details be presented)",
                                  "oneOf": [
                                    {
                                      "name": "intent_variant_0",
                                      "type": "object",
                                      "description": "Intent reference, for when Intent is used by other entities",
                                      "properties": {}
                                    },
                                    {
                                      "name": "intent_variant_1",
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "name": "description",
                                          "type": "string",
                                          "description": "The description of the intent."
                                        },
                                        "validFor": {
                                          "name": "validFor",
                                          "type": "object",
                                          "description": "Reference to TimePeriod"
                                        },
                                        "isBundle": {
                                          "name": "isBundle",
                                          "type": "boolean",
                                          "description": "isBundle determines whether an intent represents a single intent (false), or a bundle of intents(true)."
                                        },
                                        "priority": {
                                          "name": "priority",
                                          "type": "string",
                                          "description": "Can be used by intent owner to prioritize intents in an intent management system"
                                        },
                                        "statusChangeDate": {
                                          "name": "statusChangeDate",
                                          "type": "string",
                                          "description": "A date time( DateTime). The date that the entity status changed to the current one",
                                          "format": "date-time"
                                        },
                                        "context": {
                                          "name": "context",
                                          "type": "string",
                                          "description": "A string used to give a context to the intent"
                                        },
                                        "version": {
                                          "name": "version",
                                          "type": "string",
                                          "description": "A field that identifies the specific version of an instance of an intent."
                                        },
                                        "intentSpecification": {
                                          "name": "intentSpecification",
                                          "type": "object",
                                          "description": "Reference to EntityRef"
                                        },
                                        "intentRelationship": {
                                          "name": "intentRelationship",
                                          "type": "array",
                                          "description": "A list of intents related to this intent",
                                          "items": {
                                            "name": "items",
                                            "type": "object",
                                            "description": "A uni-directionmal relationship from this entity to a target entity instance",
                                            "properties": {
                                              "href": {
                                                "name": "href",
                                                "type": "string"
                                              },
                                              "name": {
                                                "name": "name",
                                                "type": "string"
                                              },
                                              "role": {
                                                "name": "role",
                                                "type": "string",
                                                "description": "The association role for this entity"
                                              },
                                              "validFor": {
                                                "name": "validFor",
                                                "type": "object",
                                                "description": "Reference to TimePeriod"
                                              },
                                              "associationSpec": {
                                                "name": "associationSpec",
                                                "type": "object",
                                                "description": "Reference to EntityRef"
                                              },
                                              "@baseType": {
                                                "name": "@baseType",
                                                "type": "string",
                                                "description": "When sub-classing, this defines the super-class"
                                              },
                                              "@schemaLocation": {
                                                "name": "@schemaLocation",
                                                "type": "string",
                                                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                                              },
                                              "relationshipType": {
                                                "name": "relationshipType",
                                                "type": "string",
                                                "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                                              },
                                              "id": {
                                                "name": "id",
                                                "type": "string"
                                              },
                                              "@referredType": {
                                                "name": "@referredType",
                                                "type": "string"
                                              },
                                              "@type": {
                                                "name": "@type",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "characteristic": {
                                          "name": "characteristic",
                                          "type": "array",
                                          "items": {
                                            "name": "items",
                                            "type": "object",
                                            "description": "Reference to Characteristic"
                                          }
                                        },
                                        "relatedParty": {
                                          "name": "relatedParty",
                                          "type": "array",
                                          "items": {
                                            "name": "items",
                                            "type": "object",
                                            "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                                          }
                                        },
                                        "attachment": {
                                          "name": "attachment",
                                          "type": "array",
                                          "description": "Attachments that may be of relevance to this intent, such as picture, document, media",
                                          "items": {
                                            "name": "items",
                                            "type": "object",
                                            "description": "Reference to AttachmentRefOrValue"
                                          }
                                        },
                                        "name": {
                                          "name": "name",
                                          "type": "string",
                                          "description": "The name of the intent."
                                        },
                                        "expression": {
                                          "name": "expression",
                                          "type": "object",
                                          "properties": {
                                            "expressionLanguage": {
                                              "name": "expressionLanguage",
                                              "type": "string",
                                              "description": "Possible values for the serialized Expression language of an intent or Intent report",
                                              "enum": [
                                                "Turtle",
                                                "JSON-LD",
                                                "RDF-XML",
                                                "Other"
                                              ]
                                            },
                                            "iri": {
                                              "name": "iri",
                                              "type": "string",
                                              "description": "Internationalized Resource Identifier of the intent Expression"
                                            },
                                            "expressionValue": {
                                              "name": "expressionValue",
                                              "type": "string",
                                              "description": "expression value is the ontology-encoded form of the Intent such as RDF-XML, Turtle, Json-LD,..."
                                            }
                                          }
                                        },
                                        "creationDate": {
                                          "name": "creationDate",
                                          "type": "string",
                                          "description": "Date and time of the creation of this REST resource",
                                          "format": "date-time"
                                        },
                                        "lastUpdate": {
                                          "name": "lastUpdate",
                                          "type": "string",
                                          "description": "Date and time of the last update of this REST resource",
                                          "format": "date-time"
                                        },
                                        "lifecycleStatus": {
                                          "name": "lifecycleStatus",
                                          "type": "string",
                                          "description": "Used to indicate the current lifecycle status of this intent"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "name": "product_variant_1",
                              "type": "object",
                              "description": "A Product reference",
                              "properties": {}
                            }
                          ]
                        },
                        "bundledProductOfferingOption": {
                          "name": "bundledProductOfferingOption",
                          "type": "object",
                          "properties": {
                            "numberRelOfferDefault": {
                              "name": "numberRelOfferDefault",
                              "type": "integer",
                              "description": "Default number of produc offereings that should be procured as part of the related BundledProductOffering"
                            },
                            "numberRelOfferLowerLimit": {
                              "name": "numberRelOfferLowerLimit",
                              "type": "integer",
                              "description": "lower limit for a product offering that can be procured as part of the related BundledProductOffering"
                            },
                            "numberRelOfferUpperLimit": {
                              "name": "numberRelOfferUpperLimit",
                              "type": "integer",
                              "description": "upper limit for a product offering that can be procured as part of the related BundledProductOffering"
                            }
                          }
                        },
                        "bundledGroupProductOffering": {
                          "name": "bundledGroupProductOffering",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Locally unique identifier of the group, useful in case the parent product offering or group includes multiple groups."
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the group of child offerings. Required to distinguish several choice groups."
                            },
                            "bundledProductOffering": {
                              "name": "bundledProductOffering",
                              "type": "array",
                              "description": "Child offerings, from which instances can be created as direct or hierarchically indirect children of the parent offering.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "bundledProductOfferingOption": {
                                    "name": "bundledProductOfferingOption",
                                    "type": "object",
                                    "description": "Reference to BundledProductOfferingOption"
                                  }
                                }
                              }
                            },
                            "bundledGroupProductOffering": {
                              "name": "bundledGroupProductOffering",
                              "type": "array",
                              "description": "Child groups of product offerings, to enable hierarchical sub-grouping.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to BundledGroupProductOffering"
                              }
                            },
                            "bundledGroupProductOfferingOption": {
                              "name": "bundledGroupProductOfferingOption",
                              "type": "object",
                              "properties": {
                                "numberRelOfferLowerLimit": {
                                  "name": "numberRelOfferLowerLimit",
                                  "type": "integer",
                                  "description": "The minimum total number of instances of the child offerings directly of hierarchically in the group that should be instantiated"
                                },
                                "numberRelOfferUpperLimit": {
                                  "name": "numberRelOfferUpperLimit",
                                  "type": "integer",
                                  "description": "The maximum total number of instances of the child offerings directly of hierarchically in the group that should be instantiated"
                                }
                              }
                            }
                          }
                        },
                        "policy": {
                          "name": "policy",
                          "type": "array",
                          "description": "Relevant policies used to compute the product configuration.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "id": {
                                "name": "id",
                                "type": "string",
                                "description": "unique identifier"
                              },
                              "href": {
                                "name": "href",
                                "type": "string",
                                "description": "Hyperlink reference"
                              },
                              "version": {
                                "name": "version",
                                "type": "string"
                              },
                              "@type": {
                                "name": "@type",
                                "type": "string",
                                "description": "When sub-classing, this defines the sub-class Extensible name"
                              },
                              "@baseType": {
                                "name": "@baseType",
                                "type": "string",
                                "description": "When sub-classing, this defines the super-class"
                              },
                              "@schemaLocation": {
                                "name": "@schemaLocation",
                                "type": "string",
                                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                              }
                            }
                          }
                        },
                        "configurationAction": {
                          "name": "configurationAction",
                          "type": "array",
                          "description": "A list of allowed actions or a list of selected actions.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "action": {
                                "name": "action",
                                "type": "string",
                                "description": "The name of the action."
                              },
                              "description": {
                                "name": "description",
                                "type": "string",
                                "description": "The description of the action (human-readable explanation of what the action does)."
                              },
                              "isSelected": {
                                "name": "isSelected",
                                "type": "boolean",
                                "description": "A flag indicating whether the action is selected in the current product configuration."
                              }
                            }
                          }
                        },
                        "configurationTerm": {
                          "name": "configurationTerm",
                          "type": "array",
                          "description": "A list of allowed terms or a list of selected terms.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "description": {
                                "name": "description",
                                "type": "string",
                                "description": "Description of the configuration term."
                              },
                              "duration": {
                                "name": "duration",
                                "type": "object",
                                "description": "Reference to Duration"
                              },
                              "name": {
                                "name": "name",
                                "type": "string",
                                "description": "Name of the configuration term."
                              },
                              "validFor": {
                                "name": "validFor",
                                "type": "object",
                                "description": "Reference to TimePeriod"
                              },
                              "isSelectable": {
                                "name": "isSelectable",
                                "type": "boolean",
                                "description": "A flag indicating whether this configuration term may be selected by the end-user in the context of the product configuration."
                              },
                              "isSelected": {
                                "name": "isSelected",
                                "type": "boolean",
                                "description": "A flag indicating whether this configuration term is selected is the context of the product configuration."
                              }
                            }
                          }
                        },
                        "configurationPrice": {
                          "name": "configurationPrice",
                          "type": "array",
                          "description": "List of prices of the product configuration. Prices are computed based on product configuration, selected characteristic values, selected bundled offerings, terms etc.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "description": {
                                "name": "description",
                                "type": "string",
                                "description": "Description of the product configuration price."
                              },
                              "name": {
                                "name": "name",
                                "type": "string",
                                "description": "Name of the product configuration price."
                              },
                              "productOfferingPrice": {
                                "name": "productOfferingPrice",
                                "type": "object",
                                "description": "Reference to ProductOfferingPriceRef"
                              },
                              "recurringChargePeriod": {
                                "name": "recurringChargePeriod",
                                "type": "object",
                                "description": "Reference to Quantity"
                              },
                              "unitOfMeasure": {
                                "name": "unitOfMeasure",
                                "type": "string",
                                "description": "Unit of Measure if price depending on it (Gb, SMS volume, etc..)."
                              },
                              "price": {
                                "name": "price",
                                "type": "object",
                                "description": "Reference to Price"
                              },
                              "priceAlteration": {
                                "name": "priceAlteration",
                                "type": "array",
                                "description": "Alteration (discount, allowance) applied to the product configuration price.",
                                "items": {
                                  "name": "items",
                                  "type": "object",
                                  "description": "Reference to PriceAlteration"
                                }
                              },
                              "priceType": {
                                "name": "priceType",
                                "type": "string",
                                "description": "Indicates if the price is for recurrent or no-recurrent charge."
                              }
                            }
                          }
                        },
                        "configurationCharacteristic": {
                          "name": "configurationCharacteristic",
                          "type": "array",
                          "description": "List of characteristics of the product configuration. Each may correspond 1-1 to product/productSpecification characteristics.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "id": {
                                "name": "id",
                                "type": "string",
                                "description": "Unique identifier of the configuration characteristic."
                              },
                              "name": {
                                "name": "name",
                                "type": "string",
                                "description": "A word, term, or phrase by which this configuration characteristic is known and distinguished from other configuration characteristics."
                              },
                              "description": {
                                "name": "description",
                                "type": "string",
                                "description": "A narrative that explains the ConfigurationCharacteristic."
                              },
                              "minCardinality": {
                                "name": "minCardinality",
                                "type": "integer",
                                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                              },
                              "maxCardinality": {
                                "name": "maxCardinality",
                                "type": "integer",
                                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                              },
                              "regex": {
                                "name": "regex",
                                "type": "string",
                                "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                              },
                              "valueType": {
                                "name": "valueType",
                                "type": "string",
                                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                              },
                              "isConfigurable": {
                                "name": "isConfigurable",
                                "type": "boolean",
                                "description": "A flag indicating whether this configuration characteristic may be configured (i.e. value may be set by the end-user). In case of false value, the characteristic value may not be set by the end-user and is preset by the product configurator."
                              },
                              "configurationCharacteristicRelationship": {
                                "name": "configurationCharacteristicRelationship",
                                "type": "array",
                                "description": "Relationship to other configuration characteristics, such as dependency (the value that this characteristic can take or may be limited by the value of the related characteristic).",
                                "items": {
                                  "name": "items",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "name": "id",
                                      "type": "string",
                                      "description": "Unique identifier of the configuration characteristic."
                                    },
                                    "relationshipType": {
                                      "name": "relationshipType",
                                      "type": "string",
                                      "description": "The type of relationship."
                                    }
                                  }
                                }
                              },
                              "configurationCharacteristicValue": {
                                "name": "configurationCharacteristicValue",
                                "type": "array",
                                "description": "A list of configuration characteristic values.",
                                "items": {
                                  "name": "items",
                                  "type": "object",
                                  "properties": {
                                    "isSelectable": {
                                      "name": "isSelectable",
                                      "type": "boolean",
                                      "description": "A flag indicating whether this configuration characteristic value may be selected by the end-user in the context of the product configuration."
                                    },
                                    "isSelected": {
                                      "name": "isSelected",
                                      "type": "boolean",
                                      "description": "A flag indicating whether this configuration characteristic value is selected in the context of the product configuration."
                                    },
                                    "rangeInterval": {
                                      "name": "rangeInterval",
                                      "type": "string",
                                      "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                                    },
                                    "regex": {
                                      "name": "regex",
                                      "type": "string",
                                      "description": "A regular expression constraint for given value."
                                    },
                                    "unitOfMeasure": {
                                      "name": "unitOfMeasure",
                                      "type": "string",
                                      "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                                    },
                                    "valueFrom": {
                                      "name": "valueFrom",
                                      "type": "integer",
                                      "description": "The low range value that a characteristic can take on."
                                    },
                                    "valueTo": {
                                      "name": "valueTo",
                                      "type": "integer",
                                      "description": "The upper range value that a characteristic can take on."
                                    },
                                    "characteristicValue": {
                                      "name": "characteristicValue",
                                      "type": "object",
                                      "description": "Reference to Characteristic"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "productConfiguration": {
                          "name": "productConfiguration",
                          "type": "array",
                          "description": "List of the child product configurations. The list may include product configurations computed based on bundled product specifications.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Reference to ProductConfiguration"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "computedProductConfigurationItem": {
                "name": "computedProductConfigurationItem",
                "type": "array",
                "description": "A list of computed product configuration items (the output).",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to QueryProductConfigurationItem"
                }
              }
            }
          }
        }
      }
    }
  },
  "cloudApplication": {
    "tableName": "CloudApplication",
    "endpoints": [
      {
        "operationId": "listCloudApplication",
        "path": "/cloudApplication",
        "method": "get"
      },
      {
        "operationId": "createCloudApplication",
        "path": "/cloudApplication",
        "method": "post"
      },
      {
        "operationId": "retrieveCloudApplication",
        "path": "/cloudApplication/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteCloudApplication",
        "path": "/cloudApplication/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchCloudApplication",
        "path": "/cloudApplication/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "category": {
                "name": "category",
                "type": "string",
                "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "free-text description of the resource"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "the name of the resource"
              },
              "endOperatingDate": {
                "name": "endOperatingDate",
                "type": "string",
                "description": "A date time( DateTime). The date till the resource is operating",
                "format": "date-time"
              },
              "administrativeState": {
                "name": "administrativeState",
                "type": "string",
                "description": "ResourceAdministrativeStateType enumerations",
                "enum": [
                  "locked",
                  "unlocked",
                  "shutdown"
                ]
              },
              "operationalState": {
                "name": "operationalState",
                "type": "string",
                "description": "ResourceOperationalStateType enumerations",
                "enum": [
                  "enable",
                  "disable"
                ]
              },
              "resourceStatus": {
                "name": "resourceStatus",
                "type": "string",
                "description": "ResourceStatusType enumerations",
                "enum": [
                  "alarm",
                  "available",
                  "installed",
                  "not exists",
                  "pendingRemoval",
                  "planned",
                  "reserved",
                  "standby",
                  "suspended",
                  "unknown"
                ]
              },
              "usageState": {
                "name": "usageState",
                "type": "string",
                "description": "ResourceUsageStateType enumerations",
                "enum": [
                  "idle",
                  "active",
                  "busy"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "resourceOrderItem": {
                "name": "resourceOrderItem",
                "type": "array",
                "description": "A list of resource order items related to this resource",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string",
                      "description": "The actual type of the target instance when needed for disambiguation."
                    },
                    "resourceOrderHref": {
                      "name": "resourceOrderHref",
                      "type": "string",
                      "description": "Reference of the related entity."
                    },
                    "resourceOrderId": {
                      "name": "resourceOrderId",
                      "type": "string",
                      "description": "Unique identifier of a related entity."
                    },
                    "itemAction": {
                      "name": "itemAction",
                      "type": "string",
                      "description": "action to be performed on the product",
                      "enum": [
                        "add",
                        "modify",
                        "delete",
                        "noChange"
                      ]
                    },
                    "itemId": {
                      "name": "itemId",
                      "type": "string",
                      "description": "Identifier of the order item where the resource was managed"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "role of the resource order item for this resource"
                    }
                  }
                }
              },
              "place": {
                "name": "place",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "place": {
                      "name": "place",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place entity and not the PlaceRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "place_variant_0",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the geographic location"
                            },
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "An URI used to access to the geographic location resource"
                            },
                            "@type": {
                              "name": "@type",
                              "type": "string",
                              "description": "The name of the GeoJSON structure used in the geometry attribute",
                              "enum": [
                                "GeoJsonPoint",
                                "GeoJsonMultiPoint",
                                "GeoJsonLineString",
                                "GeoJsonMultiLineString",
                                "GeoJsonPolygon"
                              ]
                            },
                            "bbox": {
                              "name": "bbox",
                              "type": "array",
                              "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                              "items": {
                                "name": "items",
                                "type": "number"
                              }
                            }
                          }
                        },
                        {
                          "name": "place_variant_1",
                          "type": "object",
                          "properties": {
                            "code": {
                              "name": "code",
                              "type": "string",
                              "description": "A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]"
                            },
                            "creationDate": {
                              "name": "creationDate",
                              "type": "string",
                              "description": "Date and time when the GeographicSite was created",
                              "format": "date-time"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Text describing additional information regarding the site"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former"
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                  },
                                  "partyOrPartyRole": {
                                    "name": "partyOrPartyRole",
                                    "type": "union",
                                    "description": "",
                                    "oneOf": [
                                      {
                                        "name": "partyOrPartyRole_variant_0",
                                        "type": "object",
                                        "description": "A Party reference",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "partyId": {
                                            "name": "partyId",
                                            "type": "string",
                                            "description": "The identifier of the engaged party that is linked to the PartyRole object."
                                          },
                                          "partyName": {
                                            "name": "partyName",
                                            "type": "string",
                                            "description": "The name of the engaged party that is linked to the PartyRole object."
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "externalIdentifier": {
                              "name": "externalIdentifier",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "owner": {
                                    "name": "owner",
                                    "type": "string",
                                    "description": "Name of the external system that owns the entity."
                                  },
                                  "externalIdentifierType": {
                                    "name": "externalIdentifierType",
                                    "type": "string",
                                    "description": "Type of the identification, typically would be the type of the entity within the external system"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "identification of the entity within the external system."
                                  }
                                }
                              }
                            },
                            "calendar": {
                              "name": "calendar",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "day": {
                                    "name": "day",
                                    "type": "string",
                                    "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, ...)"
                                  },
                                  "timeZone": {
                                    "name": "timeZone",
                                    "type": "string",
                                    "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)"
                                  },
                                  "hourPeriod": {
                                    "name": "hourPeriod",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "endHour": {
                                          "name": "endHour",
                                          "type": "string",
                                          "description": "The time when the status ends applying"
                                        },
                                        "startHour": {
                                          "name": "startHour",
                                          "type": "string",
                                          "description": "The time when the status starts applying"
                                        }
                                      }
                                    }
                                  },
                                  "status": {
                                    "name": "status",
                                    "type": "string",
                                    "description": "Indication of the availability of the caledar period (e.g.: available, booked, etc.)"
                                  }
                                }
                              }
                            },
                            "place": {
                              "name": "place",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to PlaceRefOrValue"
                              }
                            },
                            "siteRelationship": {
                              "name": "siteRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Reference of the related geographic site"
                                  },
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role of the related site in the relationship"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the related site entity within the server"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Type of relationship"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "name": "place_variant_2",
                          "type": "object",
                          "properties": {
                            "city": {
                              "name": "city",
                              "type": "string",
                              "description": "City that the address is in"
                            },
                            "country": {
                              "name": "country",
                              "type": "string",
                              "description": "Country that the address is in"
                            },
                            "locality": {
                              "name": "locality",
                              "type": "string",
                              "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                            },
                            "postcode": {
                              "name": "postcode",
                              "type": "string",
                              "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                            },
                            "stateOrProvince": {
                              "name": "stateOrProvince",
                              "type": "string",
                              "description": "the State or Province that the address is in"
                            },
                            "streetName": {
                              "name": "streetName",
                              "type": "string",
                              "description": "Name of the street or other street type"
                            },
                            "streetNr": {
                              "name": "streetNr",
                              "type": "string",
                              "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                            },
                            "streetNrLast": {
                              "name": "streetNrLast",
                              "type": "string",
                              "description": "Last number in a range of street numbers allocated to a property"
                            },
                            "streetNrLastSuffix": {
                              "name": "streetNrLastSuffix",
                              "type": "string",
                              "description": "Last street number suffix for a ranged address"
                            },
                            "streetNrSuffix": {
                              "name": "streetNrSuffix",
                              "type": "string",
                              "description": "the first street number suffix"
                            },
                            "streetSuffix": {
                              "name": "streetSuffix",
                              "type": "string",
                              "description": "A modifier denoting a relative direction"
                            },
                            "streetType": {
                              "name": "streetType",
                              "type": "string",
                              "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                            },
                            "countryCode": {
                              "name": "countryCode",
                              "type": "array",
                              "description": "Country codes are short alphabetic or numeric geographical codes (geocodes) developed to represent countries and dependent areas, for use in data processing and communications. Several different systems have been developed to do this. The term country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes, the E.164 country calling codes.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "format": {
                                    "name": "format",
                                    "type": "string",
                                    "description": "Standard/Regulatory definition identifier. e.g., ISO 3166-1"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "The value of the resource in the corresponding standard.e.g., a country code value"
                                  }
                                }
                              }
                            },
                            "externalIdentifier": {
                              "name": "externalIdentifier",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ExternalIdentifier"
                              }
                            },
                            "geographicLocation": {
                              "name": "geographicLocation",
                              "type": "union",
                              "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicLocation entity and not the GeographicLocationRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "geographicLocation_variant_0",
                                  "type": "object",
                                  "description": "Reference to GeographicLocation"
                                },
                                {
                                  "name": "geographicLocation_variant_1",
                                  "type": "object",
                                  "properties": {}
                                }
                              ]
                            },
                            "geographicSubAddress": {
                              "name": "geographicSubAddress",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "buildingName": {
                                    "name": "buildingName",
                                    "type": "string",
                                    "description": "allows for buildings that have well-known names"
                                  },
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Link to the subAddress"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique Identifier of the subAddress"
                                  },
                                  "levelNumber": {
                                    "name": "levelNumber",
                                    "type": "string",
                                    "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                                  },
                                  "levelType": {
                                    "name": "levelType",
                                    "type": "string",
                                    "description": "describes level types within a building"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the subAddress to identify it with a meaningful identification"
                                  },
                                  "privateStreetName": {
                                    "name": "privateStreetName",
                                    "type": "string",
                                    "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                                  },
                                  "privateStreetNumber": {
                                    "name": "privateStreetNumber",
                                    "type": "string",
                                    "description": "private streets numbers internal to a private street"
                                  },
                                  "subUnit": {
                                    "name": "subUnit",
                                    "type": "array",
                                    "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "subUnitNumber": {
                                          "name": "subUnitNumber",
                                          "type": "string",
                                          "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                                        },
                                        "subUnitType": {
                                          "name": "subUnitType",
                                          "type": "string",
                                          "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                                        }
                                      }
                                    }
                                  },
                                  "subAddressType": {
                                    "name": "subAddressType",
                                    "type": "string",
                                    "description": "Type of subAddress : it can be a subunit or a private street"
                                  }
                                }
                              }
                            },
                            "geographicAddressType": {
                              "name": "geographicAddressType",
                              "type": "string",
                              "description": "Classification of the address, e.g., residential, industrial "
                            }
                          }
                        },
                        {
                          "name": "place_variant_3",
                          "type": "object",
                          "description": "Place reference.",
                          "properties": {}
                        }
                      ]
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                }
              },
              "resourceRelationship": {
                "name": "resourceRelationship",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "resourceRelationshipCharacteristic": {
                      "name": "resourceRelationshipCharacteristic",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the characteristic"
                          },
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "Data type of the value of the characteristic"
                          },
                          "characteristicRelationship": {
                            "name": "characteristicRelationship",
                            "type": "array",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "name": "id",
                                  "type": "string",
                                  "description": "Unique identifier of the characteristic"
                                },
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "The type of relationship"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "resource": {
                      "name": "resource",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Resource entity and not the ResourceRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "resource_variant_0",
                          "type": "object",
                          "description": "Reference to Resource"
                        },
                        {
                          "name": "resource_variant_1",
                          "type": "object",
                          "description": "Resource reference, for when Resource is used by other entities.",
                          "properties": {}
                        }
                      ]
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of the resource relationship, such as [bundled] if the resource is a bundle and you want to describe the bundled resources inside this bundle; [reliesOn] if the resource needs another already owned resource to rely on (eg: an option on an already owned mobile access resource) [targets] or [isTargeted] (depending on the way of expressing the link) for any other kind of links that may be useful"
                    }
                  }
                }
              },
              "resourceCharacteristic": {
                "name": "resourceCharacteristic",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to Characteristic"
                }
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative text describing the content of the attachment"
                    },
                    "url": {
                      "name": "url",
                      "type": "string",
                      "description": "Link to the attachment media/content"
                    }
                  }
                }
              },
              "resourceSpecification": {
                "name": "resourceSpecification",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "Resource Specification version"
                  }
                }
              },
              "startOperatingDate": {
                "name": "startOperatingDate",
                "type": "string",
                "description": "A date time( DateTime). The date from which the resource is operating",
                "format": "date-time"
              },
              "resourceVersion": {
                "name": "resourceVersion",
                "type": "string",
                "description": "A field that identifies the specific version of an instance of a resource."
              },
              "activationFeature": {
                "name": "activationFeature",
                "type": "array",
                "description": "Configuration features",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "isBundle": {
                      "name": "isBundle",
                      "type": "boolean",
                      "description": "True if this is a feature group. Default is false."
                    },
                    "featureRelationship": {
                      "name": "featureRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "This is the type of the feature relationship.",
                            "enum": [
                              "excluded",
                              "includes",
                              "may include",
                              "requires"
                            ]
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "This is the name of the target feature."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      }
                    },
                    "featureCharacteristic": {
                      "name": "featureCharacteristic",
                      "type": "array",
                      "description": "This is a list of Characteristics for a particular feature.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to Characteristic"
                      }
                    },
                    "policyConstraint": {
                      "name": "policyConstraint",
                      "type": "array",
                      "description": "Reference to mangage a list of feature specification policy constraints",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "unique identifier"
                          },
                          "href": {
                            "name": "href",
                            "type": "string",
                            "description": "Hyperlink reference"
                          },
                          "version": {
                            "name": "version",
                            "type": "string"
                          },
                          "@type": {
                            "name": "@type",
                            "type": "string",
                            "description": "When sub-classing, this defines the sub-class Extensible name"
                          },
                          "@baseType": {
                            "name": "@baseType",
                            "type": "string",
                            "description": "When sub-classing, this defines the super-class"
                          },
                          "@schemaLocation": {
                            "name": "@schemaLocation",
                            "type": "string",
                            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                          }
                        }
                      }
                    },
                    "isEnabled": {
                      "name": "isEnabled",
                      "type": "boolean",
                      "description": "True if this feature is enabled. Default is true."
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "unique identifier"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "This is the name for the feature."
                    }
                  }
                }
              },
              "intent": {
                "name": "intent",
                "type": "object",
                "description": "Intent reference, for when Intent is used by other entities",
                "properties": {}
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "description": "An identification of this resource that is owned by or originates in a software system different from the current system. The structure identifies the system itself, the nature of the resource within the system and the unique ID of the resource within the system. It is anticipated that multiple external IDs can be held for a single resource, e.g. if the resource passed through multiple systems on the way to the current system.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ExternalIdentifier"
                }
              },
              "value": {
                "name": "value",
                "type": "string",
                "description": "the value of the logical resource. E.g '0746712345' for  MSISDN's"
              }
            }
          }
        }
      }
    }
  },
  "cloudApplicationSpecification": {
    "tableName": "CloudApplicationSpecification",
    "endpoints": [
      {
        "operationId": "listCloudApplicationSpecification",
        "path": "/cloudApplicationSpecification",
        "method": "get"
      },
      {
        "operationId": "createCloudApplicationSpecification",
        "path": "/cloudApplicationSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveCloudApplicationSpecification",
        "path": "/cloudApplicationSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteCloudApplicationSpecification",
        "path": "/cloudApplicationSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchCloudApplicationSpecification",
        "path": "/cloudApplicationSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of this REST resource"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Resource Specification version"
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "A flag indicates that if this resource specification is a bundled specification (true) or single (false)."
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of this REST resource",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of the resource specification"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name given to this REST resource"
              },
              "category": {
                "name": "category",
                "type": "string",
                "description": "Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic, L2Network and so on."
              },
              "targetResourceSchema": {
                "name": "targetResourceSchema",
                "type": "object",
                "description": "The reference object to the schema and type of target resource which is described by resource specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target resource"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target resource",
                    "format": "uri"
                  }
                }
              },
              "featureSpecification": {
                "name": "featureSpecification",
                "type": "array",
                "description": "A list of Features for this specification.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the feature specification"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "feature identifier"
                    },
                    "isBundle": {
                      "name": "isBundle",
                      "type": "boolean",
                      "description": "A flag indicating if this is a feature group (true) or not (false)"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "featureSpecRelationship": {
                      "name": "featureSpecRelationship",
                      "type": "array",
                      "description": "A dependency, exclusivity or aggratation relationship between/among feature specifications.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "This is the type of the feature specification relationship.",
                            "enum": [
                              "excluded",
                              "includes",
                              "may include",
                              "requires"
                            ]
                          },
                          "featureId": {
                            "name": "featureId",
                            "type": "string",
                            "description": "Unique identifier of the target feature specification."
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target feature"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target feature",
                            "format": "uri"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "This is the name of the target feature specification."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      }
                    },
                    "policyConstraint": {
                      "name": "policyConstraint",
                      "type": "array",
                      "description": "Reference to mangage a list of feature specification policy constraints",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "unique identifier"
                          },
                          "href": {
                            "name": "href",
                            "type": "string",
                            "description": "Hyperlink reference"
                          },
                          "version": {
                            "name": "version",
                            "type": "string"
                          },
                          "@type": {
                            "name": "@type",
                            "type": "string",
                            "description": "When sub-classing, this defines the sub-class Extensible name"
                          },
                          "@baseType": {
                            "name": "@baseType",
                            "type": "string",
                            "description": "When sub-classing, this defines the super-class"
                          },
                          "@schemaLocation": {
                            "name": "@schemaLocation",
                            "type": "string",
                            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                          }
                        }
                      }
                    },
                    "isEnabled": {
                      "name": "isEnabled",
                      "type": "boolean",
                      "description": "A flag indicating if the feature is enabled (true) or not (false)"
                    },
                    "featureSpecCharacteristic": {
                      "name": "featureSpecCharacteristic",
                      "type": "array",
                      "description": "This is a list of characteristics for a particular feature",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique ID for the characteristic"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                          },
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "A narrative that explains the CharacteristicSpecification."
                          },
                          "configurable": {
                            "name": "configurable",
                            "type": "boolean",
                            "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "minCardinality": {
                            "name": "minCardinality",
                            "type": "integer",
                            "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                          },
                          "maxCardinality": {
                            "name": "maxCardinality",
                            "type": "integer",
                            "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                          },
                          "isUnique": {
                            "name": "isUnique",
                            "type": "boolean",
                            "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                          },
                          "extensible": {
                            "name": "extensible",
                            "type": "boolean",
                            "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                          },
                          "@valueSchemaLocation": {
                            "name": "@valueSchemaLocation",
                            "type": "string",
                            "description": "This (optional) field provides a link to the schema describing the value type."
                          },
                          "charSpecRelationship": {
                            "name": "charSpecRelationship",
                            "type": "array",
                            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "Name of the target characteristic within the specification"
                                },
                                "characteristicSpecificationId": {
                                  "name": "characteristicSpecificationId",
                                  "type": "string",
                                  "description": "Unique identifier of the characteristic within the specification"
                                },
                                "parentSpecificationHref": {
                                  "name": "parentSpecificationHref",
                                  "type": "string",
                                  "description": "Hyperlink reference to the parent specification containing the target characteristic",
                                  "format": "uri"
                                },
                                "validFor": {
                                  "name": "validFor",
                                  "type": "object",
                                  "description": "Reference to TimePeriod"
                                },
                                "parentSpecificationId": {
                                  "name": "parentSpecificationId",
                                  "type": "string",
                                  "description": "Unique identifier of the parent specification containing the target characteristic"
                                }
                              }
                            }
                          },
                          "characteristicValueSpecification": {
                            "name": "characteristicValueSpecification",
                            "type": "array",
                            "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "name": "valueType",
                                  "type": "string",
                                  "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                                },
                                "isDefault": {
                                  "name": "isDefault",
                                  "type": "boolean",
                                  "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                                },
                                "unitOfMeasure": {
                                  "name": "unitOfMeasure",
                                  "type": "string",
                                  "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                                },
                                "validFor": {
                                  "name": "validFor",
                                  "type": "object",
                                  "description": "Reference to TimePeriod"
                                },
                                "valueFrom": {
                                  "name": "valueFrom",
                                  "type": "integer",
                                  "description": "The low range value that a characteristic can take on"
                                },
                                "valueTo": {
                                  "name": "valueTo",
                                  "type": "integer",
                                  "description": "The upper range value that a characteristic can take on"
                                },
                                "rangeInterval": {
                                  "name": "rangeInterval",
                                  "type": "string",
                                  "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                                },
                                "regex": {
                                  "name": "regex",
                                  "type": "string",
                                  "description": "A regular expression constraint for given value"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "This is the name for the feature."
                    }
                  }
                }
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Complements the description of an element (for instance a resource) through video, pictures ...",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "A related party defines party or party role linked to a specific entity.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "resourceSpecCharacteristic": {
                "name": "resourceSpecCharacteristic",
                "type": "array",
                "description": "A characteristic quality or distinctive feature of a ResourceSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to CharacteristicSpecification"
                }
              },
              "resourceSpecRelationship": {
                "name": "resourceSpecRelationship",
                "type": "array",
                "description": "A migration, substitution, dependency or exclusivity relationship between/among resource specifications.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this resource specification"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of target ResourceSpecification"
                    },
                    "href": {
                      "name": "href",
                      "type": "string",
                      "description": "Reference of the target ResourceSpecification",
                      "format": "uri"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "The name given to the target resource specification instance"
                    },
                    "defaultQuantity": {
                      "name": "defaultQuantity",
                      "type": "integer",
                      "description": "The default number of the related resource that should be instantiated, for example a rack would typically have 4 cards, although it could support more."
                    },
                    "maximumQuantity": {
                      "name": "maximumQuantity",
                      "type": "integer",
                      "description": "The maximum number of the related resource that should be instantiated, for example a rack supports a maximum of 16 cards"
                    },
                    "minimumQuantity": {
                      "name": "minimumQuantity",
                      "type": "integer",
                      "description": "The minimum number of the related resource that should be instantiated, for example a rack must have at least 1 card"
                    },
                    "characteristic": {
                      "name": "characteristic",
                      "type": "array",
                      "description": "A characteristic that refines the relationship. For example, consider the relationship between a slot and a card. For a half-height card it is important to know the position at which the card is inserted, so a characteristic Position might be defined on the relationship to allow capturing of this in the inventory",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to CharacteristicSpecification"
                      }
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "intentSpecification": {
                "name": "intentSpecification",
                "type": "object",
                "properties": {}
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "userEquipment": {
    "tableName": "UserEquipment",
    "endpoints": [
      {
        "operationId": "listUserEquipment",
        "path": "/userEquipment",
        "method": "get"
      },
      {
        "operationId": "createUserEquipment",
        "path": "/userEquipment",
        "method": "post"
      },
      {
        "operationId": "retrieveUserEquipment",
        "path": "/userEquipment/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteUserEquipment",
        "path": "/userEquipment/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchUserEquipment",
        "path": "/userEquipment/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "category": {
                "name": "category",
                "type": "string",
                "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "free-text description of the resource"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "the name of the resource"
              },
              "endOperatingDate": {
                "name": "endOperatingDate",
                "type": "string",
                "description": "A date time( DateTime). The date till the resource is operating",
                "format": "date-time"
              },
              "administrativeState": {
                "name": "administrativeState",
                "type": "string",
                "description": "ResourceAdministrativeStateType enumerations",
                "enum": [
                  "locked",
                  "unlocked",
                  "shutdown"
                ]
              },
              "operationalState": {
                "name": "operationalState",
                "type": "string",
                "description": "ResourceOperationalStateType enumerations",
                "enum": [
                  "enable",
                  "disable"
                ]
              },
              "resourceStatus": {
                "name": "resourceStatus",
                "type": "string",
                "description": "ResourceStatusType enumerations",
                "enum": [
                  "alarm",
                  "available",
                  "installed",
                  "not exists",
                  "pendingRemoval",
                  "planned",
                  "reserved",
                  "standby",
                  "suspended",
                  "unknown"
                ]
              },
              "usageState": {
                "name": "usageState",
                "type": "string",
                "description": "ResourceUsageStateType enumerations",
                "enum": [
                  "idle",
                  "active",
                  "busy"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "resourceOrderItem": {
                "name": "resourceOrderItem",
                "type": "array",
                "description": "A list of resource order items related to this resource",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string",
                      "description": "The actual type of the target instance when needed for disambiguation."
                    },
                    "resourceOrderHref": {
                      "name": "resourceOrderHref",
                      "type": "string",
                      "description": "Reference of the related entity."
                    },
                    "resourceOrderId": {
                      "name": "resourceOrderId",
                      "type": "string",
                      "description": "Unique identifier of a related entity."
                    },
                    "itemAction": {
                      "name": "itemAction",
                      "type": "string",
                      "description": "action to be performed on the product",
                      "enum": [
                        "add",
                        "modify",
                        "delete",
                        "noChange"
                      ]
                    },
                    "itemId": {
                      "name": "itemId",
                      "type": "string",
                      "description": "Identifier of the order item where the resource was managed"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "role of the resource order item for this resource"
                    }
                  }
                }
              },
              "place": {
                "name": "place",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "place": {
                      "name": "place",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place entity and not the PlaceRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "place_variant_0",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the geographic location"
                            },
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "An URI used to access to the geographic location resource"
                            },
                            "@type": {
                              "name": "@type",
                              "type": "string",
                              "description": "The name of the GeoJSON structure used in the geometry attribute",
                              "enum": [
                                "GeoJsonPoint",
                                "GeoJsonMultiPoint",
                                "GeoJsonLineString",
                                "GeoJsonMultiLineString",
                                "GeoJsonPolygon"
                              ]
                            },
                            "bbox": {
                              "name": "bbox",
                              "type": "array",
                              "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                              "items": {
                                "name": "items",
                                "type": "number"
                              }
                            }
                          }
                        },
                        {
                          "name": "place_variant_1",
                          "type": "object",
                          "properties": {
                            "code": {
                              "name": "code",
                              "type": "string",
                              "description": "A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]"
                            },
                            "creationDate": {
                              "name": "creationDate",
                              "type": "string",
                              "description": "Date and time when the GeographicSite was created",
                              "format": "date-time"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Text describing additional information regarding the site"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former"
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                  },
                                  "partyOrPartyRole": {
                                    "name": "partyOrPartyRole",
                                    "type": "union",
                                    "description": "",
                                    "oneOf": [
                                      {
                                        "name": "partyOrPartyRole_variant_0",
                                        "type": "object",
                                        "description": "A Party reference",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "partyId": {
                                            "name": "partyId",
                                            "type": "string",
                                            "description": "The identifier of the engaged party that is linked to the PartyRole object."
                                          },
                                          "partyName": {
                                            "name": "partyName",
                                            "type": "string",
                                            "description": "The name of the engaged party that is linked to the PartyRole object."
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "externalIdentifier": {
                              "name": "externalIdentifier",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "owner": {
                                    "name": "owner",
                                    "type": "string",
                                    "description": "Name of the external system that owns the entity."
                                  },
                                  "externalIdentifierType": {
                                    "name": "externalIdentifierType",
                                    "type": "string",
                                    "description": "Type of the identification, typically would be the type of the entity within the external system"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "identification of the entity within the external system."
                                  }
                                }
                              }
                            },
                            "calendar": {
                              "name": "calendar",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "day": {
                                    "name": "day",
                                    "type": "string",
                                    "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, ...)"
                                  },
                                  "timeZone": {
                                    "name": "timeZone",
                                    "type": "string",
                                    "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)"
                                  },
                                  "hourPeriod": {
                                    "name": "hourPeriod",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "endHour": {
                                          "name": "endHour",
                                          "type": "string",
                                          "description": "The time when the status ends applying"
                                        },
                                        "startHour": {
                                          "name": "startHour",
                                          "type": "string",
                                          "description": "The time when the status starts applying"
                                        }
                                      }
                                    }
                                  },
                                  "status": {
                                    "name": "status",
                                    "type": "string",
                                    "description": "Indication of the availability of the caledar period (e.g.: available, booked, etc.)"
                                  }
                                }
                              }
                            },
                            "place": {
                              "name": "place",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to PlaceRefOrValue"
                              }
                            },
                            "siteRelationship": {
                              "name": "siteRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Reference of the related geographic site"
                                  },
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role of the related site in the relationship"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the related site entity within the server"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Type of relationship"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "name": "place_variant_2",
                          "type": "object",
                          "properties": {
                            "city": {
                              "name": "city",
                              "type": "string",
                              "description": "City that the address is in"
                            },
                            "country": {
                              "name": "country",
                              "type": "string",
                              "description": "Country that the address is in"
                            },
                            "locality": {
                              "name": "locality",
                              "type": "string",
                              "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                            },
                            "postcode": {
                              "name": "postcode",
                              "type": "string",
                              "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                            },
                            "stateOrProvince": {
                              "name": "stateOrProvince",
                              "type": "string",
                              "description": "the State or Province that the address is in"
                            },
                            "streetName": {
                              "name": "streetName",
                              "type": "string",
                              "description": "Name of the street or other street type"
                            },
                            "streetNr": {
                              "name": "streetNr",
                              "type": "string",
                              "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                            },
                            "streetNrLast": {
                              "name": "streetNrLast",
                              "type": "string",
                              "description": "Last number in a range of street numbers allocated to a property"
                            },
                            "streetNrLastSuffix": {
                              "name": "streetNrLastSuffix",
                              "type": "string",
                              "description": "Last street number suffix for a ranged address"
                            },
                            "streetNrSuffix": {
                              "name": "streetNrSuffix",
                              "type": "string",
                              "description": "the first street number suffix"
                            },
                            "streetSuffix": {
                              "name": "streetSuffix",
                              "type": "string",
                              "description": "A modifier denoting a relative direction"
                            },
                            "streetType": {
                              "name": "streetType",
                              "type": "string",
                              "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                            },
                            "countryCode": {
                              "name": "countryCode",
                              "type": "array",
                              "description": "Country codes are short alphabetic or numeric geographical codes (geocodes) developed to represent countries and dependent areas, for use in data processing and communications. Several different systems have been developed to do this. The term country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes, the E.164 country calling codes.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "format": {
                                    "name": "format",
                                    "type": "string",
                                    "description": "Standard/Regulatory definition identifier. e.g., ISO 3166-1"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "The value of the resource in the corresponding standard.e.g., a country code value"
                                  }
                                }
                              }
                            },
                            "externalIdentifier": {
                              "name": "externalIdentifier",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ExternalIdentifier"
                              }
                            },
                            "geographicLocation": {
                              "name": "geographicLocation",
                              "type": "union",
                              "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicLocation entity and not the GeographicLocationRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "geographicLocation_variant_0",
                                  "type": "object",
                                  "description": "Reference to GeographicLocation"
                                },
                                {
                                  "name": "geographicLocation_variant_1",
                                  "type": "object",
                                  "properties": {}
                                }
                              ]
                            },
                            "geographicSubAddress": {
                              "name": "geographicSubAddress",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "buildingName": {
                                    "name": "buildingName",
                                    "type": "string",
                                    "description": "allows for buildings that have well-known names"
                                  },
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Link to the subAddress"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique Identifier of the subAddress"
                                  },
                                  "levelNumber": {
                                    "name": "levelNumber",
                                    "type": "string",
                                    "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                                  },
                                  "levelType": {
                                    "name": "levelType",
                                    "type": "string",
                                    "description": "describes level types within a building"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the subAddress to identify it with a meaningful identification"
                                  },
                                  "privateStreetName": {
                                    "name": "privateStreetName",
                                    "type": "string",
                                    "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                                  },
                                  "privateStreetNumber": {
                                    "name": "privateStreetNumber",
                                    "type": "string",
                                    "description": "private streets numbers internal to a private street"
                                  },
                                  "subUnit": {
                                    "name": "subUnit",
                                    "type": "array",
                                    "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "subUnitNumber": {
                                          "name": "subUnitNumber",
                                          "type": "string",
                                          "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                                        },
                                        "subUnitType": {
                                          "name": "subUnitType",
                                          "type": "string",
                                          "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                                        }
                                      }
                                    }
                                  },
                                  "subAddressType": {
                                    "name": "subAddressType",
                                    "type": "string",
                                    "description": "Type of subAddress : it can be a subunit or a private street"
                                  }
                                }
                              }
                            },
                            "geographicAddressType": {
                              "name": "geographicAddressType",
                              "type": "string",
                              "description": "Classification of the address, e.g., residential, industrial "
                            }
                          }
                        },
                        {
                          "name": "place_variant_3",
                          "type": "object",
                          "description": "Place reference.",
                          "properties": {}
                        }
                      ]
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                }
              },
              "resourceRelationship": {
                "name": "resourceRelationship",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "resourceRelationshipCharacteristic": {
                      "name": "resourceRelationshipCharacteristic",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the characteristic"
                          },
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "Data type of the value of the characteristic"
                          },
                          "characteristicRelationship": {
                            "name": "characteristicRelationship",
                            "type": "array",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "name": "id",
                                  "type": "string",
                                  "description": "Unique identifier of the characteristic"
                                },
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "The type of relationship"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "resource": {
                      "name": "resource",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Resource entity and not the ResourceRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "resource_variant_0",
                          "type": "object",
                          "description": "Reference to Resource"
                        },
                        {
                          "name": "resource_variant_1",
                          "type": "object",
                          "description": "Resource reference, for when Resource is used by other entities.",
                          "properties": {}
                        }
                      ]
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of the resource relationship, such as [bundled] if the resource is a bundle and you want to describe the bundled resources inside this bundle; [reliesOn] if the resource needs another already owned resource to rely on (eg: an option on an already owned mobile access resource) [targets] or [isTargeted] (depending on the way of expressing the link) for any other kind of links that may be useful"
                    }
                  }
                }
              },
              "resourceCharacteristic": {
                "name": "resourceCharacteristic",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to Characteristic"
                }
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative text describing the content of the attachment"
                    },
                    "url": {
                      "name": "url",
                      "type": "string",
                      "description": "Link to the attachment media/content"
                    }
                  }
                }
              },
              "resourceSpecification": {
                "name": "resourceSpecification",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "Resource Specification version"
                  }
                }
              },
              "startOperatingDate": {
                "name": "startOperatingDate",
                "type": "string",
                "description": "A date time( DateTime). The date from which the resource is operating",
                "format": "date-time"
              },
              "resourceVersion": {
                "name": "resourceVersion",
                "type": "string",
                "description": "A field that identifies the specific version of an instance of a resource."
              },
              "activationFeature": {
                "name": "activationFeature",
                "type": "array",
                "description": "Configuration features",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "isBundle": {
                      "name": "isBundle",
                      "type": "boolean",
                      "description": "True if this is a feature group. Default is false."
                    },
                    "featureRelationship": {
                      "name": "featureRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "This is the type of the feature relationship.",
                            "enum": [
                              "excluded",
                              "includes",
                              "may include",
                              "requires"
                            ]
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "This is the name of the target feature."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      }
                    },
                    "featureCharacteristic": {
                      "name": "featureCharacteristic",
                      "type": "array",
                      "description": "This is a list of Characteristics for a particular feature.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to Characteristic"
                      }
                    },
                    "policyConstraint": {
                      "name": "policyConstraint",
                      "type": "array",
                      "description": "Reference to mangage a list of feature specification policy constraints",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "unique identifier"
                          },
                          "href": {
                            "name": "href",
                            "type": "string",
                            "description": "Hyperlink reference"
                          },
                          "version": {
                            "name": "version",
                            "type": "string"
                          },
                          "@type": {
                            "name": "@type",
                            "type": "string",
                            "description": "When sub-classing, this defines the sub-class Extensible name"
                          },
                          "@baseType": {
                            "name": "@baseType",
                            "type": "string",
                            "description": "When sub-classing, this defines the super-class"
                          },
                          "@schemaLocation": {
                            "name": "@schemaLocation",
                            "type": "string",
                            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                          }
                        }
                      }
                    },
                    "isEnabled": {
                      "name": "isEnabled",
                      "type": "boolean",
                      "description": "True if this feature is enabled. Default is true."
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "unique identifier"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "This is the name for the feature."
                    }
                  }
                }
              },
              "intent": {
                "name": "intent",
                "type": "object",
                "description": "Intent reference, for when Intent is used by other entities",
                "properties": {}
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "description": "An identification of this resource that is owned by or originates in a software system different from the current system. The structure identifies the system itself, the nature of the resource within the system and the unique ID of the resource within the system. It is anticipated that multiple external IDs can be held for a single resource, e.g. if the resource passed through multiple systems on the way to the current system.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ExternalIdentifier"
                }
              },
              "manufactureDate": {
                "name": "manufactureDate",
                "type": "string",
                "description": "This is a string attribute that defines the date of manufacture of this item in the fixed format \"dd/mm/yyyy\". This is an optional attribute.",
                "format": "date-time"
              },
              "powerState": {
                "name": "powerState",
                "type": "string",
                "description": "This defines the current power status of the hardware item. Values include:\n\n  0:  Unknown\n  1:  Not Applicable\n  2:  No Power Applied\n  3: Full Power Applied\n  4:  Power Save - Normal\n  5:  Power Save - Degraded\n  6:  Power Save - Standby\n  7:  Power Save - Critical\n  8:  Power Save - Low Power Mode\n  9:  Power Save - Unknown\n 10: Power Cycle\n 11: Power Warning\n 12: Power Off"
              },
              "serialNumber": {
                "name": "serialNumber",
                "type": "string",
                "description": "This is a string that represents a manufacturer-allocated number used to identify different instances of the same hardware item. The ModelNumber and PartNumber attributes are used to identify different types of hardware items. This is a REQUIRED attribute."
              },
              "versionNumber": {
                "name": "versionNumber",
                "type": "string",
                "description": "This is a string that identifies the version of this physical resource. This is an optional attribute."
              }
            }
          }
        }
      }
    }
  },
  "userEquipmentSpecification": {
    "tableName": "UserEquipmentSpecification",
    "endpoints": [
      {
        "operationId": "listUserEquipmentSpecification",
        "path": "/userEquipmentSpecification",
        "method": "get"
      },
      {
        "operationId": "createUserEquipmentSpecification",
        "path": "/userEquipmentSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveUserEquipmentSpecification",
        "path": "/userEquipmentSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteUserEquipmentSpecification",
        "path": "/userEquipmentSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchUserEquipmentSpecification",
        "path": "/userEquipmentSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of this REST resource"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Resource Specification version"
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "A flag indicates that if this resource specification is a bundled specification (true) or single (false)."
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of this REST resource",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of the resource specification"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name given to this REST resource"
              },
              "category": {
                "name": "category",
                "type": "string",
                "description": "Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic, L2Network and so on."
              },
              "targetResourceSchema": {
                "name": "targetResourceSchema",
                "type": "object",
                "description": "The reference object to the schema and type of target resource which is described by resource specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target resource"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target resource",
                    "format": "uri"
                  }
                }
              },
              "featureSpecification": {
                "name": "featureSpecification",
                "type": "array",
                "description": "A list of Features for this specification.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the feature specification"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "feature identifier"
                    },
                    "isBundle": {
                      "name": "isBundle",
                      "type": "boolean",
                      "description": "A flag indicating if this is a feature group (true) or not (false)"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "featureSpecRelationship": {
                      "name": "featureSpecRelationship",
                      "type": "array",
                      "description": "A dependency, exclusivity or aggratation relationship between/among feature specifications.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "This is the type of the feature specification relationship.",
                            "enum": [
                              "excluded",
                              "includes",
                              "may include",
                              "requires"
                            ]
                          },
                          "featureId": {
                            "name": "featureId",
                            "type": "string",
                            "description": "Unique identifier of the target feature specification."
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target feature"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target feature",
                            "format": "uri"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "This is the name of the target feature specification."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      }
                    },
                    "policyConstraint": {
                      "name": "policyConstraint",
                      "type": "array",
                      "description": "Reference to mangage a list of feature specification policy constraints",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "unique identifier"
                          },
                          "href": {
                            "name": "href",
                            "type": "string",
                            "description": "Hyperlink reference"
                          },
                          "version": {
                            "name": "version",
                            "type": "string"
                          },
                          "@type": {
                            "name": "@type",
                            "type": "string",
                            "description": "When sub-classing, this defines the sub-class Extensible name"
                          },
                          "@baseType": {
                            "name": "@baseType",
                            "type": "string",
                            "description": "When sub-classing, this defines the super-class"
                          },
                          "@schemaLocation": {
                            "name": "@schemaLocation",
                            "type": "string",
                            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                          }
                        }
                      }
                    },
                    "isEnabled": {
                      "name": "isEnabled",
                      "type": "boolean",
                      "description": "A flag indicating if the feature is enabled (true) or not (false)"
                    },
                    "featureSpecCharacteristic": {
                      "name": "featureSpecCharacteristic",
                      "type": "array",
                      "description": "This is a list of characteristics for a particular feature",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique ID for the characteristic"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                          },
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "A narrative that explains the CharacteristicSpecification."
                          },
                          "configurable": {
                            "name": "configurable",
                            "type": "boolean",
                            "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "minCardinality": {
                            "name": "minCardinality",
                            "type": "integer",
                            "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                          },
                          "maxCardinality": {
                            "name": "maxCardinality",
                            "type": "integer",
                            "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                          },
                          "isUnique": {
                            "name": "isUnique",
                            "type": "boolean",
                            "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                          },
                          "extensible": {
                            "name": "extensible",
                            "type": "boolean",
                            "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                          },
                          "@valueSchemaLocation": {
                            "name": "@valueSchemaLocation",
                            "type": "string",
                            "description": "This (optional) field provides a link to the schema describing the value type."
                          },
                          "charSpecRelationship": {
                            "name": "charSpecRelationship",
                            "type": "array",
                            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "Name of the target characteristic within the specification"
                                },
                                "characteristicSpecificationId": {
                                  "name": "characteristicSpecificationId",
                                  "type": "string",
                                  "description": "Unique identifier of the characteristic within the specification"
                                },
                                "parentSpecificationHref": {
                                  "name": "parentSpecificationHref",
                                  "type": "string",
                                  "description": "Hyperlink reference to the parent specification containing the target characteristic",
                                  "format": "uri"
                                },
                                "validFor": {
                                  "name": "validFor",
                                  "type": "object",
                                  "description": "Reference to TimePeriod"
                                },
                                "parentSpecificationId": {
                                  "name": "parentSpecificationId",
                                  "type": "string",
                                  "description": "Unique identifier of the parent specification containing the target characteristic"
                                }
                              }
                            }
                          },
                          "characteristicValueSpecification": {
                            "name": "characteristicValueSpecification",
                            "type": "array",
                            "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "name": "valueType",
                                  "type": "string",
                                  "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                                },
                                "isDefault": {
                                  "name": "isDefault",
                                  "type": "boolean",
                                  "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                                },
                                "unitOfMeasure": {
                                  "name": "unitOfMeasure",
                                  "type": "string",
                                  "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                                },
                                "validFor": {
                                  "name": "validFor",
                                  "type": "object",
                                  "description": "Reference to TimePeriod"
                                },
                                "valueFrom": {
                                  "name": "valueFrom",
                                  "type": "integer",
                                  "description": "The low range value that a characteristic can take on"
                                },
                                "valueTo": {
                                  "name": "valueTo",
                                  "type": "integer",
                                  "description": "The upper range value that a characteristic can take on"
                                },
                                "rangeInterval": {
                                  "name": "rangeInterval",
                                  "type": "string",
                                  "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                                },
                                "regex": {
                                  "name": "regex",
                                  "type": "string",
                                  "description": "A regular expression constraint for given value"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "This is the name for the feature."
                    }
                  }
                }
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Complements the description of an element (for instance a resource) through video, pictures ...",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "A related party defines party or party role linked to a specific entity.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "resourceSpecCharacteristic": {
                "name": "resourceSpecCharacteristic",
                "type": "array",
                "description": "A characteristic quality or distinctive feature of a ResourceSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to CharacteristicSpecification"
                }
              },
              "resourceSpecRelationship": {
                "name": "resourceSpecRelationship",
                "type": "array",
                "description": "A migration, substitution, dependency or exclusivity relationship between/among resource specifications.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this resource specification"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of target ResourceSpecification"
                    },
                    "href": {
                      "name": "href",
                      "type": "string",
                      "description": "Reference of the target ResourceSpecification",
                      "format": "uri"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "The name given to the target resource specification instance"
                    },
                    "defaultQuantity": {
                      "name": "defaultQuantity",
                      "type": "integer",
                      "description": "The default number of the related resource that should be instantiated, for example a rack would typically have 4 cards, although it could support more."
                    },
                    "maximumQuantity": {
                      "name": "maximumQuantity",
                      "type": "integer",
                      "description": "The maximum number of the related resource that should be instantiated, for example a rack supports a maximum of 16 cards"
                    },
                    "minimumQuantity": {
                      "name": "minimumQuantity",
                      "type": "integer",
                      "description": "The minimum number of the related resource that should be instantiated, for example a rack must have at least 1 card"
                    },
                    "characteristic": {
                      "name": "characteristic",
                      "type": "array",
                      "description": "A characteristic that refines the relationship. For example, consider the relationship between a slot and a card. For a half-height card it is important to know the position at which the card is inserted, so a characteristic Position might be defined on the relationship to allow capturing of this in the inventory",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to CharacteristicSpecification"
                      }
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "intentSpecification": {
                "name": "intentSpecification",
                "type": "object",
                "properties": {}
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              },
              "model": {
                "name": "model",
                "type": "string",
                "description": "This is a string that represents a manufacturer-allocated number used to identify the general type and/or category of the hardware item. This, in combination with the Part and the Vendor, identify different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is an optional attribute."
              },
              "part": {
                "name": "part",
                "type": "string",
                "description": "This is a string that defines a manufacturer-allocated part number assigned by the organization that manufactures the hardware item. This, in combination with the Model and the Vendor, identify different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is a REQUIRED attribute."
              },
              "sku": {
                "name": "sku",
                "type": "string",
                "description": "This is a string that defines the manufacturer-allocated Stock Keeping Unit (SKU) number of the hardware item. This is an optional attribute."
              },
              "vendor": {
                "name": "vendor",
                "type": "string",
                "description": "This is a string that defines the name of the manufacturer. This, in combination with the Model and the Part, identify different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is a REQUIRED attribute for a physical resource."
              },
              "hasNetworkInterface": {
                "name": "hasNetworkInterface",
                "type": "boolean",
                "description": "tell if UserEquipment has network interface(s)"
              },
              "isWearable": {
                "name": "isWearable",
                "type": "boolean",
                "description": "tell if UserEquipment is a wearable device"
              },
              "isPortable": {
                "name": "isPortable",
                "type": "boolean",
                "description": "tell if UserEquipment is a portable/movable device"
              }
            }
          }
        }
      }
    }
  },
  "closedLoop": {
    "tableName": "ClosedLoop",
    "endpoints": [
      {
        "operationId": "listClosedLoop",
        "path": "/closedLoop",
        "method": "get"
      },
      {
        "operationId": "createClosedLoop",
        "path": "/closedLoop",
        "method": "post"
      },
      {
        "operationId": "retrieveClosedLoop",
        "path": "/closedLoop/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteClosedLoop",
        "path": "/closedLoop/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchClosedLoop",
        "path": "/closedLoop/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "format": "date-time"
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "plannedStart": {
                "name": "plannedStart",
                "type": "string",
                "description": "Captures the scheduled date-time to start a closed loop.",
                "format": "date-time"
              },
              "plannedEnd": {
                "name": "plannedEnd",
                "type": "string",
                "description": "Captures the scheduled date-time to end a closed loop.",
                "format": "date-time"
              },
              "errorEvent": {
                "name": "errorEvent",
                "type": "array",
                "description": "Captures known information or occurrence where the closed loop does not respond as intended or expected. The error event captures known error that signal the closed loop mechanism has failed and the output does not match the intended or expected outcome.",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "Trigger between Event or Monitor",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "href": {
                          "name": "href",
                          "type": "string",
                          "description": "Hyperlink reference"
                        },
                        "id": {
                          "name": "id",
                          "type": "string",
                          "description": "unique identifier"
                        },
                        "correlationId": {
                          "name": "correlationId",
                          "type": "string",
                          "description": "The correlation id for this event."
                        },
                        "domain": {
                          "name": "domain",
                          "type": "string",
                          "description": "The domain of the event."
                        },
                        "title": {
                          "name": "title",
                          "type": "string",
                          "description": "The title of the event."
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "An explnatory of the event."
                        },
                        "priority": {
                          "name": "priority",
                          "type": "string",
                          "description": "A priority."
                        },
                        "timeOccurred": {
                          "name": "timeOccurred",
                          "type": "string",
                          "description": "The time the event occurred.",
                          "format": "date-time"
                        },
                        "source": {
                          "name": "source",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the referred entity."
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string",
                              "description": "The actual type of the target instance when needed for disambiguation."
                            }
                          }
                        },
                        "reportingSystem": {
                          "name": "reportingSystem",
                          "type": "object",
                          "description": "Reference to EntityRef"
                        },
                        "relatedParty": {
                          "name": "relatedParty",
                          "type": "array",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "role": {
                                "name": "role",
                                "type": "string"
                              },
                              "partyOrPartyRole": {
                                "name": "partyOrPartyRole",
                                "type": "union",
                                "description": "",
                                "oneOf": [
                                  {
                                    "name": "partyOrPartyRole_variant_0",
                                    "type": "object",
                                    "properties": {
                                      "externalReference": {
                                        "name": "externalReference",
                                        "type": "array",
                                        "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "properties": {
                                            "owner": {
                                              "name": "owner",
                                              "type": "string",
                                              "description": "Name of the external system that owns the entity."
                                            },
                                            "externalIdentifierType": {
                                              "name": "externalIdentifierType",
                                              "type": "string",
                                              "description": "Type of the identification, typically would be the type of the entity within the external system"
                                            },
                                            "id": {
                                              "name": "id",
                                              "type": "string",
                                              "description": "identification of the entity within the external system."
                                            }
                                          }
                                        }
                                      },
                                      "partyCharacteristic": {
                                        "name": "partyCharacteristic",
                                        "type": "array",
                                        "description": "List of additional characteristics that a Party can take on.",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "name": "id",
                                              "type": "string",
                                              "description": "Unique identifier of the characteristic"
                                            },
                                            "valueType": {
                                              "name": "valueType",
                                              "type": "string",
                                              "description": "Data type of the value of the characteristic"
                                            },
                                            "characteristicRelationship": {
                                              "name": "characteristicRelationship",
                                              "type": "array",
                                              "items": {
                                                "name": "items",
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "name": "id",
                                                    "type": "string",
                                                    "description": "Unique identifier of the characteristic"
                                                  },
                                                  "relationshipType": {
                                                    "name": "relationshipType",
                                                    "type": "string",
                                                    "description": "The type of relationship"
                                                  }
                                                }
                                              }
                                            },
                                            "name": {
                                              "name": "name",
                                              "type": "string",
                                              "description": "Name of the characteristic"
                                            }
                                          }
                                        }
                                      },
                                      "taxExemptionCertificate": {
                                        "name": "taxExemptionCertificate",
                                        "type": "array",
                                        "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "name": "id",
                                              "type": "string",
                                              "description": "Identifier of the tax exemption within list of the exemptions"
                                            },
                                            "taxDefinition": {
                                              "name": "taxDefinition",
                                              "type": "array",
                                              "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                                              "items": {
                                                "name": "items",
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "name": "id",
                                                    "type": "string",
                                                    "description": "Unique identifier of the tax."
                                                  },
                                                  "name": {
                                                    "name": "name",
                                                    "type": "string",
                                                    "description": "Tax name."
                                                  },
                                                  "validFor": {
                                                    "name": "validFor",
                                                    "type": "object",
                                                    "description": "Reference to TimePeriod"
                                                  },
                                                  "jurisdictionName": {
                                                    "name": "jurisdictionName",
                                                    "type": "string",
                                                    "description": "Name of the jurisdiction that levies the tax"
                                                  },
                                                  "jurisdictionLevel": {
                                                    "name": "jurisdictionLevel",
                                                    "type": "string",
                                                    "description": "Level of the jurisdiction that levies the tax"
                                                  },
                                                  "taxType": {
                                                    "name": "taxType",
                                                    "type": "string",
                                                    "description": "Type of the tax."
                                                  }
                                                }
                                              }
                                            },
                                            "validFor": {
                                              "name": "validFor",
                                              "type": "object",
                                              "description": "Reference to TimePeriod"
                                            },
                                            "certificateNumber": {
                                              "name": "certificateNumber",
                                              "type": "string",
                                              "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                                            },
                                            "issuingJurisdiction": {
                                              "name": "issuingJurisdiction",
                                              "type": "string",
                                              "description": "Name of the jurisdiction that issued the exemption"
                                            },
                                            "reason": {
                                              "name": "reason",
                                              "type": "string",
                                              "description": "Reason for the tax exemption"
                                            },
                                            "attachment": {
                                              "name": "attachment",
                                              "type": "union",
                                              "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                              "oneOf": [
                                                {
                                                  "name": "attachment_variant_0",
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "name": "name",
                                                      "type": "string",
                                                      "description": "The name of the attachment"
                                                    },
                                                    "description": {
                                                      "name": "description",
                                                      "type": "string",
                                                      "description": "A narrative text describing the content of the attachment"
                                                    },
                                                    "url": {
                                                      "name": "url",
                                                      "type": "string",
                                                      "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                                    },
                                                    "content": {
                                                      "name": "content",
                                                      "type": "string",
                                                      "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                                      "format": "base64"
                                                    },
                                                    "size": {
                                                      "name": "size",
                                                      "type": "object",
                                                      "description": "An amount in a given unit",
                                                      "properties": {
                                                        "amount": {
                                                          "name": "amount",
                                                          "type": "number",
                                                          "description": "Numeric value in a given unit",
                                                          "format": "float"
                                                        },
                                                        "units": {
                                                          "name": "units",
                                                          "type": "string",
                                                          "description": "Unit"
                                                        }
                                                      }
                                                    },
                                                    "validFor": {
                                                      "name": "validFor",
                                                      "type": "object",
                                                      "description": "Reference to TimePeriod"
                                                    },
                                                    "attachmentType": {
                                                      "name": "attachmentType",
                                                      "type": "string",
                                                      "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                                    },
                                                    "mimeType": {
                                                      "name": "mimeType",
                                                      "type": "string",
                                                      "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                                    }
                                                  }
                                                },
                                                {
                                                  "name": "attachment_variant_1",
                                                  "type": "object",
                                                  "properties": {
                                                    "description": {
                                                      "name": "description",
                                                      "type": "string",
                                                      "description": "A narrative text describing the content of the attachment"
                                                    },
                                                    "url": {
                                                      "name": "url",
                                                      "type": "string",
                                                      "description": "Link to the attachment media/content"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "creditRating": {
                                        "name": "creditRating",
                                        "type": "array",
                                        "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "properties": {
                                            "creditAgencyName": {
                                              "name": "creditAgencyName",
                                              "type": "string",
                                              "description": "Name of the credit agency giving the score"
                                            },
                                            "creditAgencyType": {
                                              "name": "creditAgencyType",
                                              "type": "string",
                                              "description": "Type of the credit agency giving the score"
                                            },
                                            "ratingReference": {
                                              "name": "ratingReference",
                                              "type": "string",
                                              "description": "Reference corresponding to the credit rating"
                                            },
                                            "ratingScore": {
                                              "name": "ratingScore",
                                              "type": "integer",
                                              "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                                              "format": "int32"
                                            },
                                            "validFor": {
                                              "name": "validFor",
                                              "type": "object",
                                              "description": "Reference to TimePeriod"
                                            }
                                          }
                                        }
                                      },
                                      "relatedParty": {
                                        "name": "relatedParty",
                                        "type": "array",
                                        "description": "List of parties and/or party roles related to this party",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "description": "Reference to RelatedPartyOrPartyRole"
                                        }
                                      },
                                      "contactMedium": {
                                        "name": "contactMedium",
                                        "type": "array",
                                        "description": "List of means for contacting the party, e.g. mobile phone, email address",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "name": "id",
                                              "type": "string",
                                              "description": "Identifier for this contact medium."
                                            },
                                            "preferred": {
                                              "name": "preferred",
                                              "type": "boolean",
                                              "description": "If true, indicates that is the preferred contact medium"
                                            },
                                            "contactType": {
                                              "name": "contactType",
                                              "type": "string",
                                              "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                            },
                                            "validFor": {
                                              "name": "validFor",
                                              "type": "object",
                                              "description": "Reference to TimePeriod"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "name": "partyOrPartyRole_variant_1",
                                    "type": "object",
                                    "description": "A Party reference",
                                    "properties": {}
                                  },
                                  {
                                    "name": "partyOrPartyRole_variant_2",
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "name": "status",
                                        "type": "string",
                                        "description": "Used to track the lifecycle status of the party role."
                                      },
                                      "statusReason": {
                                        "name": "statusReason",
                                        "type": "string",
                                        "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                                      },
                                      "validFor": {
                                        "name": "validFor",
                                        "type": "object",
                                        "description": "Reference to TimePeriod"
                                      },
                                      "engagedParty": {
                                        "name": "engagedParty",
                                        "type": "union",
                                        "description": " Entity reference. A Party defines a Party described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Party entity and not the RelatedPartyRefOrValue class itself",
                                        "oneOf": [
                                          {
                                            "name": "engagedParty_variant_0",
                                            "type": "object",
                                            "description": "Reference to Party"
                                          },
                                          {
                                            "name": "engagedParty_variant_1",
                                            "type": "object",
                                            "description": "Reference to PartyRef"
                                          }
                                        ]
                                      },
                                      "account": {
                                        "name": "account",
                                        "type": "array",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "properties": {
                                            "description": {
                                              "name": "description",
                                              "type": "string",
                                              "description": "Detailed description of the account"
                                            },
                                            "href": {
                                              "name": "href",
                                              "type": "string",
                                              "description": "Reference of the account"
                                            },
                                            "id": {
                                              "name": "id",
                                              "type": "string",
                                              "description": "Unique identifier of the account"
                                            },
                                            "name": {
                                              "name": "name",
                                              "type": "string",
                                              "description": "Name of the account"
                                            },
                                            "@referredType": {
                                              "name": "@referredType",
                                              "type": "string",
                                              "description": "The actual type of the target instance when needed for disambiguation."
                                            }
                                          }
                                        }
                                      },
                                      "paymentMethod": {
                                        "name": "paymentMethod",
                                        "type": "array",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                          "properties": {}
                                        }
                                      },
                                      "contactMedium": {
                                        "name": "contactMedium",
                                        "type": "array",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "description": "Reference to ContactMedium"
                                        }
                                      },
                                      "characteristic": {
                                        "name": "characteristic",
                                        "type": "array",
                                        "description": "Describes the characteristic of a party role.",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "description": "Reference to Characteristic"
                                        }
                                      },
                                      "creditProfile": {
                                        "name": "creditProfile",
                                        "type": "array",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "properties": {
                                            "creditProfileDate": {
                                              "name": "creditProfileDate",
                                              "type": "string",
                                              "description": "The date the profile was established",
                                              "format": "date-time"
                                            },
                                            "creditRiskRating": {
                                              "name": "creditRiskRating",
                                              "type": "integer",
                                              "description": "This is an integer whose value is used to rate the risk"
                                            },
                                            "creditScore": {
                                              "name": "creditScore",
                                              "type": "integer",
                                              "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                            },
                                            "validFor": {
                                              "name": "validFor",
                                              "type": "object",
                                              "description": "Reference to TimePeriod"
                                            }
                                          }
                                        }
                                      },
                                      "agreement": {
                                        "name": "agreement",
                                        "type": "array",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                          "properties": {}
                                        }
                                      },
                                      "relatedParty": {
                                        "name": "relatedParty",
                                        "type": "array",
                                        "items": {
                                          "name": "items",
                                          "type": "object",
                                          "description": "Reference to RelatedPartyOrPartyRole"
                                        }
                                      },
                                      "roleType": {
                                        "name": "roleType",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "The name of the role type. It uniquely identifies the role type within the partnership type."
                                          },
                                          "partnershipHref": {
                                            "name": "partnershipHref",
                                            "type": "string",
                                            "description": "Reference url of the partnership type containing the role type"
                                          },
                                          "partnershipId": {
                                            "name": "partnershipId",
                                            "type": "string",
                                            "description": "The identifier of the partnership type containing the role type"
                                          },
                                          "partnershipName": {
                                            "name": "partnershipName",
                                            "type": "string",
                                            "description": "The name of the partnership type defining this role type"
                                          },
                                          "@referredType": {
                                            "name": "@referredType",
                                            "type": "string",
                                            "description": "The actual type of the target instance when needed for disambiguation."
                                          }
                                        }
                                      },
                                      "name": {
                                        "name": "name",
                                        "type": "string",
                                        "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles."
                                      }
                                    }
                                  },
                                  {
                                    "name": "partyOrPartyRole_variant_3",
                                    "type": "object",
                                    "properties": {
                                      "href": {
                                        "name": "href",
                                        "type": "string",
                                        "description": "Reference of the product"
                                      },
                                      "id": {
                                        "name": "id",
                                        "type": "string",
                                        "description": "Unique identifier of the product"
                                      },
                                      "name": {
                                        "name": "name",
                                        "type": "string",
                                        "description": "The name of the referred party role."
                                      },
                                      "partyId": {
                                        "name": "partyId",
                                        "type": "string",
                                        "description": "The identifier of the engaged party that is linked to the PartyRole object."
                                      },
                                      "partyName": {
                                        "name": "partyName",
                                        "type": "string",
                                        "description": "The name of the engaged party that is linked to the PartyRole object."
                                      },
                                      "@referredType": {
                                        "name": "@referredType",
                                        "type": "string",
                                        "description": "The actual type of the target instance when needed for disambiguation."
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "analyticCharacteristic": {
                          "name": "analyticCharacteristic",
                          "type": "array",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Reference to Characteristic"
                          }
                        },
                        "eventId": {
                          "name": "eventId",
                          "type": "string",
                          "description": "The identifier of the notification."
                        },
                        "eventTime": {
                          "name": "eventTime",
                          "type": "string",
                          "description": "Time of the event occurrence.",
                          "format": "date-time"
                        },
                        "eventType": {
                          "name": "eventType",
                          "type": "string",
                          "description": "The type of the notification."
                        },
                        "event": {
                          "name": "event",
                          "type": "object",
                          "description": "The event linked to the involved resource object"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "request": {
                          "name": "request",
                          "type": "object",
                          "description": "A response to a request",
                          "properties": {
                            "method": {
                              "name": "method",
                              "type": "string",
                              "description": "The protocol of the request, e.g. http"
                            },
                            "to": {
                              "name": "to",
                              "type": "string",
                              "description": "The target of the request, e.g. a URL for an HTTP request"
                            },
                            "body": {
                              "name": "body",
                              "type": "string",
                              "description": "The body of the request. For example for an HTTP request might contain content of a form ."
                            },
                            "header": {
                              "name": "header",
                              "type": "array",
                              "description": "Items included in the header of the request. For example for an HTTP request might contain requested locale, basic authentication.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "An item typically included in a request or response",
                                "properties": {
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "The name of the header item, e.g. locale"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "The value of the header item, e.g. en-us"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "response": {
                          "name": "response",
                          "type": "object",
                          "description": "A response to a request",
                          "properties": {
                            "statusCode": {
                              "name": "statusCode",
                              "type": "string",
                              "description": "The status of the response. For example for an HTTP response would be codes such as 200, 400, etc."
                            },
                            "body": {
                              "name": "body",
                              "type": "string",
                              "description": "The body of the response. For example for an HTTP response might contain HTML for rendering."
                            },
                            "header": {
                              "name": "header",
                              "type": "array",
                              "description": "Items included in the header of the response. For example for an HTTP response might contain negotiated locale.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to HeaderItem"
                              }
                            }
                          }
                        },
                        "sourceHref": {
                          "name": "sourceHref",
                          "type": "string",
                          "description": "The monitored resource href"
                        },
                        "state": {
                          "name": "state",
                          "type": "string",
                          "description": "The Monitor state of the resource.  InProgress, InError, Completed"
                        }
                      }
                    }
                  ]
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "object",
                "description": "Reference to PartyOrPartyRole"
              },
              "startedBy": {
                "name": "startedBy",
                "type": "object",
                "description": "Reference to Trigger"
              },
              "endedBy": {
                "name": "endedBy",
                "type": "object",
                "description": "Reference to Trigger"
              },
              "ingressPoint": {
                "name": "ingressPoint",
                "type": "object",
                "description": "Reference to EntityRef"
              },
              "egressPoint": {
                "name": "egressPoint",
                "type": "object",
                "description": "Reference to EntityRef"
              },
              "closedLoopGoal": {
                "name": "closedLoopGoal",
                "type": "object",
                "description": "A reference to the representation that captures the target  ambition of a closed loop.",
                "properties": {}
              },
              "closedLoopStatus": {
                "name": "closedLoopStatus",
                "type": "string",
                "description": "The possible values to represent the state of the Closed Loop over the lifecycle and during active operation",
                "enum": [
                  "designed",
                  "verified",
                  "validated",
                  "deployed",
                  "ready",
                  "active.observing",
                  "active.deciding",
                  "active.acting",
                  "active.orienting.learning",
                  "active.orienting.analysis",
                  "active.orienting.synthesis",
                  "inactive",
                  "terminated"
                ]
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "policy": {
                "name": "policy",
                "type": "object",
                "properties": {
                  "id": {
                    "name": "id",
                    "type": "string",
                    "description": "unique identifier"
                  },
                  "href": {
                    "name": "href",
                    "type": "string",
                    "description": "Hyperlink reference"
                  },
                  "version": {
                    "name": "version",
                    "type": "string"
                  },
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                  },
                  "@baseType": {
                    "name": "@baseType",
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                  }
                }
              },
              "closedLoopSpecification": {
                "name": "closedLoopSpecification",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "EntitySpecification version"
                  }
                }
              },
              "closedLoopRelationship": {
                "name": "closedLoopRelationship",
                "type": "array",
                "description": "A list of intents related to this closedLoop",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A uni-directionmal relationship from this entity to a target entity instance",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "name": {
                      "name": "name",
                      "type": "string"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this entity"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "associationSpec": {
                      "name": "associationSpec",
                      "type": "object",
                      "description": "Reference to EntityRef"
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string",
                      "description": "When sub-classing, this defines the super-class"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string",
                      "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    },
                    "id": {
                      "name": "id",
                      "type": "string"
                    },
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string"
                    },
                    "@type": {
                      "name": "@type",
                      "type": "string"
                    }
                  }
                }
              },
              "characteristic": {
                "name": "characteristic",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to Characteristic"
                }
              }
            }
          }
        }
      }
    }
  },
  "closedLoopActivity": {
    "tableName": "ClosedLoopActivity",
    "endpoints": [
      {
        "operationId": "listClosedLoopActivity",
        "path": "/closedLoopActivity",
        "method": "get"
      },
      {
        "operationId": "createClosedLoopActivity",
        "path": "/closedLoopActivity",
        "method": "post"
      },
      {
        "operationId": "retrieveClosedLoopActivity",
        "path": "/closedLoopActivity/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteClosedLoopActivity",
        "path": "/closedLoopActivity/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchClosedLoopActivity",
        "path": "/closedLoopActivity/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "creationdate": {
                "name": "creationdate",
                "type": "string",
                "format": "date-time"
              },
              "validfor": {
                "name": "validfor",
                "type": "string",
                "format": "date-time"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "union",
                "description": "",
                "oneOf": [
                  {
                    "name": "relatedParty_variant_0",
                    "type": "object",
                    "properties": {
                      "externalReference": {
                        "name": "externalReference",
                        "type": "array",
                        "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "owner": {
                              "name": "owner",
                              "type": "string",
                              "description": "Name of the external system that owns the entity."
                            },
                            "externalIdentifierType": {
                              "name": "externalIdentifierType",
                              "type": "string",
                              "description": "Type of the identification, typically would be the type of the entity within the external system"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "identification of the entity within the external system."
                            }
                          }
                        }
                      },
                      "partyCharacteristic": {
                        "name": "partyCharacteristic",
                        "type": "array",
                        "description": "List of additional characteristics that a Party can take on.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the characteristic"
                            },
                            "valueType": {
                              "name": "valueType",
                              "type": "string",
                              "description": "Data type of the value of the characteristic"
                            },
                            "characteristicRelationship": {
                              "name": "characteristicRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "The type of relationship"
                                  }
                                }
                              }
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the characteristic"
                            }
                          }
                        }
                      },
                      "taxExemptionCertificate": {
                        "name": "taxExemptionCertificate",
                        "type": "array",
                        "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Identifier of the tax exemption within list of the exemptions"
                            },
                            "taxDefinition": {
                              "name": "taxDefinition",
                              "type": "array",
                              "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the tax."
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Tax name."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                                    "properties": {
                                      "startDateTime": {
                                        "name": "startDateTime",
                                        "type": "string",
                                        "description": "Start of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      },
                                      "endDateTime": {
                                        "name": "endDateTime",
                                        "type": "string",
                                        "description": "End of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      }
                                    }
                                  },
                                  "jurisdictionName": {
                                    "name": "jurisdictionName",
                                    "type": "string",
                                    "description": "Name of the jurisdiction that levies the tax"
                                  },
                                  "jurisdictionLevel": {
                                    "name": "jurisdictionLevel",
                                    "type": "string",
                                    "description": "Level of the jurisdiction that levies the tax"
                                  },
                                  "taxType": {
                                    "name": "taxType",
                                    "type": "string",
                                    "description": "Type of the tax."
                                  }
                                }
                              }
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "certificateNumber": {
                              "name": "certificateNumber",
                              "type": "string",
                              "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                            },
                            "issuingJurisdiction": {
                              "name": "issuingJurisdiction",
                              "type": "string",
                              "description": "Name of the jurisdiction that issued the exemption"
                            },
                            "reason": {
                              "name": "reason",
                              "type": "string",
                              "description": "Reason for the tax exemption"
                            },
                            "attachment": {
                              "name": "attachment",
                              "type": "union",
                              "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "attachment_variant_0",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "name": "name",
                                      "type": "string",
                                      "description": "The name of the attachment"
                                    },
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "A narrative text describing the content of the attachment"
                                    },
                                    "url": {
                                      "name": "url",
                                      "type": "string",
                                      "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                    },
                                    "content": {
                                      "name": "content",
                                      "type": "string",
                                      "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                      "format": "base64"
                                    },
                                    "size": {
                                      "name": "size",
                                      "type": "object",
                                      "description": "An amount in a given unit",
                                      "properties": {
                                        "amount": {
                                          "name": "amount",
                                          "type": "number",
                                          "description": "Numeric value in a given unit",
                                          "format": "float"
                                        },
                                        "units": {
                                          "name": "units",
                                          "type": "string",
                                          "description": "Unit"
                                        }
                                      }
                                    },
                                    "validFor": {
                                      "name": "validFor",
                                      "type": "object",
                                      "description": "Reference to TimePeriod"
                                    },
                                    "attachmentType": {
                                      "name": "attachmentType",
                                      "type": "string",
                                      "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                    },
                                    "mimeType": {
                                      "name": "mimeType",
                                      "type": "string",
                                      "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                    }
                                  }
                                },
                                {
                                  "name": "attachment_variant_1",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "A narrative text describing the content of the attachment"
                                    },
                                    "url": {
                                      "name": "url",
                                      "type": "string",
                                      "description": "Link to the attachment media/content"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "creditRating": {
                        "name": "creditRating",
                        "type": "array",
                        "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "creditAgencyName": {
                              "name": "creditAgencyName",
                              "type": "string",
                              "description": "Name of the credit agency giving the score"
                            },
                            "creditAgencyType": {
                              "name": "creditAgencyType",
                              "type": "string",
                              "description": "Type of the credit agency giving the score"
                            },
                            "ratingReference": {
                              "name": "ratingReference",
                              "type": "string",
                              "description": "Reference corresponding to the credit rating"
                            },
                            "ratingScore": {
                              "name": "ratingScore",
                              "type": "integer",
                              "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                              "format": "int32"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "description": "List of parties and/or party roles related to this party",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "role": {
                              "name": "role",
                              "type": "string"
                            },
                            "partyOrPartyRole": {
                              "name": "partyOrPartyRole",
                              "type": "object",
                              "description": "Reference to PartyOrPartyRole"
                            }
                          }
                        }
                      },
                      "contactMedium": {
                        "name": "contactMedium",
                        "type": "array",
                        "description": "List of means for contacting the party, e.g. mobile phone, email address",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Identifier for this contact medium."
                            },
                            "preferred": {
                              "name": "preferred",
                              "type": "boolean",
                              "description": "If true, indicates that is the preferred contact medium"
                            },
                            "contactType": {
                              "name": "contactType",
                              "type": "string",
                              "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "name": "relatedParty_variant_1",
                    "type": "object",
                    "description": "A Party reference",
                    "properties": {}
                  },
                  {
                    "name": "relatedParty_variant_2",
                    "type": "object",
                    "properties": {
                      "status": {
                        "name": "status",
                        "type": "string",
                        "description": "Used to track the lifecycle status of the party role."
                      },
                      "statusReason": {
                        "name": "statusReason",
                        "type": "string",
                        "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                      },
                      "validFor": {
                        "name": "validFor",
                        "type": "object",
                        "description": "Reference to TimePeriod"
                      },
                      "engagedParty": {
                        "name": "engagedParty",
                        "type": "union",
                        "description": " Entity reference. A Party defines a Party described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Party entity and not the RelatedPartyRefOrValue class itself",
                        "oneOf": [
                          {
                            "name": "engagedParty_variant_0",
                            "type": "object",
                            "description": "Reference to Party"
                          },
                          {
                            "name": "engagedParty_variant_1",
                            "type": "object",
                            "description": "Reference to PartyRef"
                          }
                        ]
                      },
                      "account": {
                        "name": "account",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Detailed description of the account"
                            },
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Reference of the account"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the account"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the account"
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string",
                              "description": "The actual type of the target instance when needed for disambiguation."
                            }
                          }
                        }
                      },
                      "paymentMethod": {
                        "name": "paymentMethod",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                          "properties": {}
                        }
                      },
                      "contactMedium": {
                        "name": "contactMedium",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to ContactMedium"
                        }
                      },
                      "characteristic": {
                        "name": "characteristic",
                        "type": "array",
                        "description": "Describes the characteristic of a party role.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to Characteristic"
                        }
                      },
                      "creditProfile": {
                        "name": "creditProfile",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "creditProfileDate": {
                              "name": "creditProfileDate",
                              "type": "string",
                              "description": "The date the profile was established",
                              "format": "date-time"
                            },
                            "creditRiskRating": {
                              "name": "creditRiskRating",
                              "type": "integer",
                              "description": "This is an integer whose value is used to rate the risk"
                            },
                            "creditScore": {
                              "name": "creditScore",
                              "type": "integer",
                              "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      },
                      "agreement": {
                        "name": "agreement",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                          "properties": {}
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to RelatedPartyOrPartyRole"
                        }
                      },
                      "roleType": {
                        "name": "roleType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "The name of the role type. It uniquely identifies the role type within the partnership type."
                          },
                          "partnershipHref": {
                            "name": "partnershipHref",
                            "type": "string",
                            "description": "Reference url of the partnership type containing the role type"
                          },
                          "partnershipId": {
                            "name": "partnershipId",
                            "type": "string",
                            "description": "The identifier of the partnership type containing the role type"
                          },
                          "partnershipName": {
                            "name": "partnershipName",
                            "type": "string",
                            "description": "The name of the partnership type defining this role type"
                          },
                          "@referredType": {
                            "name": "@referredType",
                            "type": "string",
                            "description": "The actual type of the target instance when needed for disambiguation."
                          }
                        }
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles."
                      }
                    }
                  },
                  {
                    "name": "relatedParty_variant_3",
                    "type": "object",
                    "properties": {
                      "href": {
                        "name": "href",
                        "type": "string",
                        "description": "Reference of the product"
                      },
                      "id": {
                        "name": "id",
                        "type": "string",
                        "description": "Unique identifier of the product"
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "The name of the referred party role."
                      },
                      "partyId": {
                        "name": "partyId",
                        "type": "string",
                        "description": "The identifier of the engaged party that is linked to the PartyRole object."
                      },
                      "partyName": {
                        "name": "partyName",
                        "type": "string",
                        "description": "The name of the engaged party that is linked to the PartyRole object."
                      },
                      "@referredType": {
                        "name": "@referredType",
                        "type": "string",
                        "description": "The actual type of the target instance when needed for disambiguation."
                      }
                    }
                  }
                ]
              },
              "plannedStart": {
                "name": "plannedStart",
                "type": "string",
                "description": "Represents the scheduled date-time to start a activity for a closed loop.",
                "format": "date-time"
              },
              "plannedEnd": {
                "name": "plannedEnd",
                "type": "string",
                "description": "Represents the scheduled date-time to end a activity for a closed loop.",
                "format": "date-time"
              },
              "plannedTenure": {
                "name": "plannedTenure",
                "type": "object",
                "description": "Reference to TimePeriod"
              },
              "plannedCost": {
                "name": "plannedCost",
                "type": "string",
                "description": "Represents the budgeted cost of the closed loop activity."
              },
              "actualCost": {
                "name": "actualCost",
                "type": "string",
                "description": "Represents the actual cost of the closed loop activity."
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "activityRelationship": {
                "name": "activityRelationship",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "EntitySpecification version"
                  }
                }
              },
              "closedLoop": {
                "name": "closedLoop",
                "type": "object",
                "description": "A reference to the representation that captures the object of ambition of a closed loop.",
                "properties": {}
              },
              "ingressPoint": {
                "name": "ingressPoint",
                "type": "object",
                "description": "Reference to EntityRef"
              },
              "egressPoint": {
                "name": "egressPoint",
                "type": "object",
                "description": "Reference to EntityRef"
              },
              "closedLoopActivitySpecification": {
                "name": "closedLoopActivitySpecification",
                "type": "object",
                "description": "Reference to EntitySpecificationRef"
              }
            }
          }
        }
      }
    }
  },
  "closedLoopWorkflow": {
    "tableName": "ClosedLoopWorkflow",
    "endpoints": [
      {
        "operationId": "listClosedLoopWorkflow",
        "path": "/closedLoopWorkflow",
        "method": "get"
      },
      {
        "operationId": "createClosedLoopWorkflow",
        "path": "/closedLoopWorkflow",
        "method": "post"
      },
      {
        "operationId": "retrieveClosedLoopWorkflow",
        "path": "/closedLoopWorkflow/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteClosedLoopWorkflow",
        "path": "/closedLoopWorkflow/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchClosedLoopWorkflow",
        "path": "/closedLoopWorkflow/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "validfor": {
                "name": "validfor",
                "type": "string",
                "format": "date-time"
              },
              "creationdate": {
                "name": "creationdate",
                "type": "string",
                "format": "date-time"
              },
              "closedLoop": {
                "name": "closedLoop",
                "type": "object",
                "description": "A reference to the representation that captures the object of ambition of a closed loop.",
                "properties": {}
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "union",
                "description": "",
                "oneOf": [
                  {
                    "name": "relatedParty_variant_0",
                    "type": "object",
                    "properties": {
                      "externalReference": {
                        "name": "externalReference",
                        "type": "array",
                        "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "owner": {
                              "name": "owner",
                              "type": "string",
                              "description": "Name of the external system that owns the entity."
                            },
                            "externalIdentifierType": {
                              "name": "externalIdentifierType",
                              "type": "string",
                              "description": "Type of the identification, typically would be the type of the entity within the external system"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "identification of the entity within the external system."
                            }
                          }
                        }
                      },
                      "partyCharacteristic": {
                        "name": "partyCharacteristic",
                        "type": "array",
                        "description": "List of additional characteristics that a Party can take on.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the characteristic"
                            },
                            "valueType": {
                              "name": "valueType",
                              "type": "string",
                              "description": "Data type of the value of the characteristic"
                            },
                            "characteristicRelationship": {
                              "name": "characteristicRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "The type of relationship"
                                  }
                                }
                              }
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the characteristic"
                            }
                          }
                        }
                      },
                      "taxExemptionCertificate": {
                        "name": "taxExemptionCertificate",
                        "type": "array",
                        "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Identifier of the tax exemption within list of the exemptions"
                            },
                            "taxDefinition": {
                              "name": "taxDefinition",
                              "type": "array",
                              "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the tax."
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Tax name."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                                    "properties": {
                                      "startDateTime": {
                                        "name": "startDateTime",
                                        "type": "string",
                                        "description": "Start of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      },
                                      "endDateTime": {
                                        "name": "endDateTime",
                                        "type": "string",
                                        "description": "End of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      }
                                    }
                                  },
                                  "jurisdictionName": {
                                    "name": "jurisdictionName",
                                    "type": "string",
                                    "description": "Name of the jurisdiction that levies the tax"
                                  },
                                  "jurisdictionLevel": {
                                    "name": "jurisdictionLevel",
                                    "type": "string",
                                    "description": "Level of the jurisdiction that levies the tax"
                                  },
                                  "taxType": {
                                    "name": "taxType",
                                    "type": "string",
                                    "description": "Type of the tax."
                                  }
                                }
                              }
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "certificateNumber": {
                              "name": "certificateNumber",
                              "type": "string",
                              "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                            },
                            "issuingJurisdiction": {
                              "name": "issuingJurisdiction",
                              "type": "string",
                              "description": "Name of the jurisdiction that issued the exemption"
                            },
                            "reason": {
                              "name": "reason",
                              "type": "string",
                              "description": "Reason for the tax exemption"
                            },
                            "attachment": {
                              "name": "attachment",
                              "type": "union",
                              "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "attachment_variant_0",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "name": "name",
                                      "type": "string",
                                      "description": "The name of the attachment"
                                    },
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "A narrative text describing the content of the attachment"
                                    },
                                    "url": {
                                      "name": "url",
                                      "type": "string",
                                      "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                    },
                                    "content": {
                                      "name": "content",
                                      "type": "string",
                                      "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                      "format": "base64"
                                    },
                                    "size": {
                                      "name": "size",
                                      "type": "object",
                                      "description": "An amount in a given unit",
                                      "properties": {
                                        "amount": {
                                          "name": "amount",
                                          "type": "number",
                                          "description": "Numeric value in a given unit",
                                          "format": "float"
                                        },
                                        "units": {
                                          "name": "units",
                                          "type": "string",
                                          "description": "Unit"
                                        }
                                      }
                                    },
                                    "validFor": {
                                      "name": "validFor",
                                      "type": "object",
                                      "description": "Reference to TimePeriod"
                                    },
                                    "attachmentType": {
                                      "name": "attachmentType",
                                      "type": "string",
                                      "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                    },
                                    "mimeType": {
                                      "name": "mimeType",
                                      "type": "string",
                                      "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                    }
                                  }
                                },
                                {
                                  "name": "attachment_variant_1",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "A narrative text describing the content of the attachment"
                                    },
                                    "url": {
                                      "name": "url",
                                      "type": "string",
                                      "description": "Link to the attachment media/content"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "creditRating": {
                        "name": "creditRating",
                        "type": "array",
                        "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "creditAgencyName": {
                              "name": "creditAgencyName",
                              "type": "string",
                              "description": "Name of the credit agency giving the score"
                            },
                            "creditAgencyType": {
                              "name": "creditAgencyType",
                              "type": "string",
                              "description": "Type of the credit agency giving the score"
                            },
                            "ratingReference": {
                              "name": "ratingReference",
                              "type": "string",
                              "description": "Reference corresponding to the credit rating"
                            },
                            "ratingScore": {
                              "name": "ratingScore",
                              "type": "integer",
                              "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                              "format": "int32"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "description": "List of parties and/or party roles related to this party",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "role": {
                              "name": "role",
                              "type": "string"
                            },
                            "partyOrPartyRole": {
                              "name": "partyOrPartyRole",
                              "type": "object",
                              "description": "Reference to PartyOrPartyRole"
                            }
                          }
                        }
                      },
                      "contactMedium": {
                        "name": "contactMedium",
                        "type": "array",
                        "description": "List of means for contacting the party, e.g. mobile phone, email address",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Identifier for this contact medium."
                            },
                            "preferred": {
                              "name": "preferred",
                              "type": "boolean",
                              "description": "If true, indicates that is the preferred contact medium"
                            },
                            "contactType": {
                              "name": "contactType",
                              "type": "string",
                              "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "name": "relatedParty_variant_1",
                    "type": "object",
                    "description": "A Party reference",
                    "properties": {}
                  },
                  {
                    "name": "relatedParty_variant_2",
                    "type": "object",
                    "properties": {
                      "status": {
                        "name": "status",
                        "type": "string",
                        "description": "Used to track the lifecycle status of the party role."
                      },
                      "statusReason": {
                        "name": "statusReason",
                        "type": "string",
                        "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                      },
                      "validFor": {
                        "name": "validFor",
                        "type": "object",
                        "description": "Reference to TimePeriod"
                      },
                      "engagedParty": {
                        "name": "engagedParty",
                        "type": "union",
                        "description": " Entity reference. A Party defines a Party described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Party entity and not the RelatedPartyRefOrValue class itself",
                        "oneOf": [
                          {
                            "name": "engagedParty_variant_0",
                            "type": "object",
                            "description": "Reference to Party"
                          },
                          {
                            "name": "engagedParty_variant_1",
                            "type": "object",
                            "description": "Reference to PartyRef"
                          }
                        ]
                      },
                      "account": {
                        "name": "account",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Detailed description of the account"
                            },
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Reference of the account"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the account"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the account"
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string",
                              "description": "The actual type of the target instance when needed for disambiguation."
                            }
                          }
                        }
                      },
                      "paymentMethod": {
                        "name": "paymentMethod",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                          "properties": {}
                        }
                      },
                      "contactMedium": {
                        "name": "contactMedium",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to ContactMedium"
                        }
                      },
                      "characteristic": {
                        "name": "characteristic",
                        "type": "array",
                        "description": "Describes the characteristic of a party role.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to Characteristic"
                        }
                      },
                      "creditProfile": {
                        "name": "creditProfile",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "creditProfileDate": {
                              "name": "creditProfileDate",
                              "type": "string",
                              "description": "The date the profile was established",
                              "format": "date-time"
                            },
                            "creditRiskRating": {
                              "name": "creditRiskRating",
                              "type": "integer",
                              "description": "This is an integer whose value is used to rate the risk"
                            },
                            "creditScore": {
                              "name": "creditScore",
                              "type": "integer",
                              "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      },
                      "agreement": {
                        "name": "agreement",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                          "properties": {}
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to RelatedPartyOrPartyRole"
                        }
                      },
                      "roleType": {
                        "name": "roleType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "The name of the role type. It uniquely identifies the role type within the partnership type."
                          },
                          "partnershipHref": {
                            "name": "partnershipHref",
                            "type": "string",
                            "description": "Reference url of the partnership type containing the role type"
                          },
                          "partnershipId": {
                            "name": "partnershipId",
                            "type": "string",
                            "description": "The identifier of the partnership type containing the role type"
                          },
                          "partnershipName": {
                            "name": "partnershipName",
                            "type": "string",
                            "description": "The name of the partnership type defining this role type"
                          },
                          "@referredType": {
                            "name": "@referredType",
                            "type": "string",
                            "description": "The actual type of the target instance when needed for disambiguation."
                          }
                        }
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles."
                      }
                    }
                  },
                  {
                    "name": "relatedParty_variant_3",
                    "type": "object",
                    "properties": {
                      "href": {
                        "name": "href",
                        "type": "string",
                        "description": "Reference of the product"
                      },
                      "id": {
                        "name": "id",
                        "type": "string",
                        "description": "Unique identifier of the product"
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "The name of the referred party role."
                      },
                      "partyId": {
                        "name": "partyId",
                        "type": "string",
                        "description": "The identifier of the engaged party that is linked to the PartyRole object."
                      },
                      "partyName": {
                        "name": "partyName",
                        "type": "string",
                        "description": "The name of the engaged party that is linked to the PartyRole object."
                      },
                      "@referredType": {
                        "name": "@referredType",
                        "type": "string",
                        "description": "The actual type of the target instance when needed for disambiguation."
                      }
                    }
                  }
                ]
              },
              "closedLoopWorkflowActivity": {
                "name": "closedLoopWorkflowActivity",
                "type": "object",
                "description": "A reference to the representation that captures activity of a workflow in a closed loop.",
                "properties": {}
              },
              "startedBy": {
                "name": "startedBy",
                "type": "union",
                "description": "Trigger between Event or Monitor",
                "oneOf": [
                  {
                    "name": "startedBy_variant_0",
                    "type": "object",
                    "properties": {
                      "href": {
                        "name": "href",
                        "type": "string",
                        "description": "Hyperlink reference"
                      },
                      "id": {
                        "name": "id",
                        "type": "string",
                        "description": "unique identifier"
                      },
                      "correlationId": {
                        "name": "correlationId",
                        "type": "string",
                        "description": "The correlation id for this event."
                      },
                      "domain": {
                        "name": "domain",
                        "type": "string",
                        "description": "The domain of the event."
                      },
                      "title": {
                        "name": "title",
                        "type": "string",
                        "description": "The title of the event."
                      },
                      "description": {
                        "name": "description",
                        "type": "string",
                        "description": "An explnatory of the event."
                      },
                      "priority": {
                        "name": "priority",
                        "type": "string",
                        "description": "A priority."
                      },
                      "timeOccurred": {
                        "name": "timeOccurred",
                        "type": "string",
                        "description": "The time the event occurred.",
                        "format": "date-time"
                      },
                      "source": {
                        "name": "source",
                        "type": "object",
                        "description": "Reference to EntityRef"
                      },
                      "reportingSystem": {
                        "name": "reportingSystem",
                        "type": "object",
                        "description": "Reference to EntityRef"
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to RelatedPartyOrPartyRole"
                        }
                      },
                      "analyticCharacteristic": {
                        "name": "analyticCharacteristic",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to Characteristic"
                        }
                      },
                      "eventId": {
                        "name": "eventId",
                        "type": "string",
                        "description": "The identifier of the notification."
                      },
                      "eventTime": {
                        "name": "eventTime",
                        "type": "string",
                        "description": "Time of the event occurrence.",
                        "format": "date-time"
                      },
                      "eventType": {
                        "name": "eventType",
                        "type": "string",
                        "description": "The type of the notification."
                      },
                      "event": {
                        "name": "event",
                        "type": "object",
                        "description": "The event linked to the involved resource object"
                      }
                    }
                  },
                  {
                    "name": "startedBy_variant_1",
                    "type": "object",
                    "properties": {
                      "request": {
                        "name": "request",
                        "type": "object",
                        "description": "A response to a request",
                        "properties": {
                          "method": {
                            "name": "method",
                            "type": "string",
                            "description": "The protocol of the request, e.g. http"
                          },
                          "to": {
                            "name": "to",
                            "type": "string",
                            "description": "The target of the request, e.g. a URL for an HTTP request"
                          },
                          "body": {
                            "name": "body",
                            "type": "string",
                            "description": "The body of the request. For example for an HTTP request might contain content of a form ."
                          },
                          "header": {
                            "name": "header",
                            "type": "array",
                            "description": "Items included in the header of the request. For example for an HTTP request might contain requested locale, basic authentication.",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "description": "An item typically included in a request or response",
                              "properties": {
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The name of the header item, e.g. locale"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The value of the header item, e.g. en-us"
                                }
                              }
                            }
                          }
                        }
                      },
                      "response": {
                        "name": "response",
                        "type": "object",
                        "description": "A response to a request",
                        "properties": {
                          "statusCode": {
                            "name": "statusCode",
                            "type": "string",
                            "description": "The status of the response. For example for an HTTP response would be codes such as 200, 400, etc."
                          },
                          "body": {
                            "name": "body",
                            "type": "string",
                            "description": "The body of the response. For example for an HTTP response might contain HTML for rendering."
                          },
                          "header": {
                            "name": "header",
                            "type": "array",
                            "description": "Items included in the header of the response. For example for an HTTP response might contain negotiated locale.",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "description": "Reference to HeaderItem"
                            }
                          }
                        }
                      },
                      "sourceHref": {
                        "name": "sourceHref",
                        "type": "string",
                        "description": "The monitored resource href"
                      },
                      "state": {
                        "name": "state",
                        "type": "string",
                        "description": "The Monitor state of the resource.  InProgress, InError, Completed"
                      }
                    }
                  }
                ]
              },
              "endedBy": {
                "name": "endedBy",
                "type": "object",
                "description": "Reference to Trigger"
              },
              "ingressPoint": {
                "name": "ingressPoint",
                "type": "object",
                "description": "Reference to EntityRef"
              },
              "egressPoint": {
                "name": "egressPoint",
                "type": "object",
                "description": "Reference to EntityRef"
              },
              "closedLoopWorkflowPriority": {
                "name": "closedLoopWorkflowPriority",
                "type": "object",
                "description": "A reference to the representation that captures the priority of a workflow of a closed loop.",
                "properties": {}
              },
              "description": {
                "name": "description",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "closedLoopGoal": {
    "tableName": "ClosedLoopGoal",
    "endpoints": [
      {
        "operationId": "listClosedLoopGoal",
        "path": "/closedLoopGoal",
        "method": "get"
      },
      {
        "operationId": "createClosedLoopGoal",
        "path": "/closedLoopGoal",
        "method": "post"
      },
      {
        "operationId": "retrieveClosedLoopGoal",
        "path": "/closedLoopGoal/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteClosedLoopGoal",
        "path": "/closedLoopGoal/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchClosedLoopGoal",
        "path": "/closedLoopGoal/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "validfor": {
                "name": "validfor",
                "type": "string",
                "format": "date-time"
              },
              "creationdate": {
                "name": "creationdate",
                "type": "string",
                "format": "date-time"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "union",
                "description": "",
                "oneOf": [
                  {
                    "name": "relatedParty_variant_0",
                    "type": "object",
                    "properties": {
                      "externalReference": {
                        "name": "externalReference",
                        "type": "array",
                        "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "owner": {
                              "name": "owner",
                              "type": "string",
                              "description": "Name of the external system that owns the entity."
                            },
                            "externalIdentifierType": {
                              "name": "externalIdentifierType",
                              "type": "string",
                              "description": "Type of the identification, typically would be the type of the entity within the external system"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "identification of the entity within the external system."
                            }
                          }
                        }
                      },
                      "partyCharacteristic": {
                        "name": "partyCharacteristic",
                        "type": "array",
                        "description": "List of additional characteristics that a Party can take on.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the characteristic"
                            },
                            "valueType": {
                              "name": "valueType",
                              "type": "string",
                              "description": "Data type of the value of the characteristic"
                            },
                            "characteristicRelationship": {
                              "name": "characteristicRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "The type of relationship"
                                  }
                                }
                              }
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the characteristic"
                            }
                          }
                        }
                      },
                      "taxExemptionCertificate": {
                        "name": "taxExemptionCertificate",
                        "type": "array",
                        "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Identifier of the tax exemption within list of the exemptions"
                            },
                            "taxDefinition": {
                              "name": "taxDefinition",
                              "type": "array",
                              "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the tax."
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Tax name."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                                    "properties": {
                                      "startDateTime": {
                                        "name": "startDateTime",
                                        "type": "string",
                                        "description": "Start of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      },
                                      "endDateTime": {
                                        "name": "endDateTime",
                                        "type": "string",
                                        "description": "End of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      }
                                    }
                                  },
                                  "jurisdictionName": {
                                    "name": "jurisdictionName",
                                    "type": "string",
                                    "description": "Name of the jurisdiction that levies the tax"
                                  },
                                  "jurisdictionLevel": {
                                    "name": "jurisdictionLevel",
                                    "type": "string",
                                    "description": "Level of the jurisdiction that levies the tax"
                                  },
                                  "taxType": {
                                    "name": "taxType",
                                    "type": "string",
                                    "description": "Type of the tax."
                                  }
                                }
                              }
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "certificateNumber": {
                              "name": "certificateNumber",
                              "type": "string",
                              "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                            },
                            "issuingJurisdiction": {
                              "name": "issuingJurisdiction",
                              "type": "string",
                              "description": "Name of the jurisdiction that issued the exemption"
                            },
                            "reason": {
                              "name": "reason",
                              "type": "string",
                              "description": "Reason for the tax exemption"
                            },
                            "attachment": {
                              "name": "attachment",
                              "type": "union",
                              "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "attachment_variant_0",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "name": "name",
                                      "type": "string",
                                      "description": "The name of the attachment"
                                    },
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "A narrative text describing the content of the attachment"
                                    },
                                    "url": {
                                      "name": "url",
                                      "type": "string",
                                      "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                    },
                                    "content": {
                                      "name": "content",
                                      "type": "string",
                                      "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                      "format": "base64"
                                    },
                                    "size": {
                                      "name": "size",
                                      "type": "object",
                                      "description": "An amount in a given unit",
                                      "properties": {
                                        "amount": {
                                          "name": "amount",
                                          "type": "number",
                                          "description": "Numeric value in a given unit",
                                          "format": "float"
                                        },
                                        "units": {
                                          "name": "units",
                                          "type": "string",
                                          "description": "Unit"
                                        }
                                      }
                                    },
                                    "validFor": {
                                      "name": "validFor",
                                      "type": "object",
                                      "description": "Reference to TimePeriod"
                                    },
                                    "attachmentType": {
                                      "name": "attachmentType",
                                      "type": "string",
                                      "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                    },
                                    "mimeType": {
                                      "name": "mimeType",
                                      "type": "string",
                                      "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                    }
                                  }
                                },
                                {
                                  "name": "attachment_variant_1",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "A narrative text describing the content of the attachment"
                                    },
                                    "url": {
                                      "name": "url",
                                      "type": "string",
                                      "description": "Link to the attachment media/content"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "creditRating": {
                        "name": "creditRating",
                        "type": "array",
                        "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "creditAgencyName": {
                              "name": "creditAgencyName",
                              "type": "string",
                              "description": "Name of the credit agency giving the score"
                            },
                            "creditAgencyType": {
                              "name": "creditAgencyType",
                              "type": "string",
                              "description": "Type of the credit agency giving the score"
                            },
                            "ratingReference": {
                              "name": "ratingReference",
                              "type": "string",
                              "description": "Reference corresponding to the credit rating"
                            },
                            "ratingScore": {
                              "name": "ratingScore",
                              "type": "integer",
                              "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                              "format": "int32"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "description": "List of parties and/or party roles related to this party",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "role": {
                              "name": "role",
                              "type": "string"
                            },
                            "partyOrPartyRole": {
                              "name": "partyOrPartyRole",
                              "type": "object",
                              "description": "Reference to PartyOrPartyRole"
                            }
                          }
                        }
                      },
                      "contactMedium": {
                        "name": "contactMedium",
                        "type": "array",
                        "description": "List of means for contacting the party, e.g. mobile phone, email address",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Identifier for this contact medium."
                            },
                            "preferred": {
                              "name": "preferred",
                              "type": "boolean",
                              "description": "If true, indicates that is the preferred contact medium"
                            },
                            "contactType": {
                              "name": "contactType",
                              "type": "string",
                              "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "name": "relatedParty_variant_1",
                    "type": "object",
                    "description": "A Party reference",
                    "properties": {}
                  },
                  {
                    "name": "relatedParty_variant_2",
                    "type": "object",
                    "properties": {
                      "status": {
                        "name": "status",
                        "type": "string",
                        "description": "Used to track the lifecycle status of the party role."
                      },
                      "statusReason": {
                        "name": "statusReason",
                        "type": "string",
                        "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                      },
                      "validFor": {
                        "name": "validFor",
                        "type": "object",
                        "description": "Reference to TimePeriod"
                      },
                      "engagedParty": {
                        "name": "engagedParty",
                        "type": "union",
                        "description": " Entity reference. A Party defines a Party described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Party entity and not the RelatedPartyRefOrValue class itself",
                        "oneOf": [
                          {
                            "name": "engagedParty_variant_0",
                            "type": "object",
                            "description": "Reference to Party"
                          },
                          {
                            "name": "engagedParty_variant_1",
                            "type": "object",
                            "description": "Reference to PartyRef"
                          }
                        ]
                      },
                      "account": {
                        "name": "account",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Detailed description of the account"
                            },
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Reference of the account"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the account"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the account"
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string",
                              "description": "The actual type of the target instance when needed for disambiguation."
                            }
                          }
                        }
                      },
                      "paymentMethod": {
                        "name": "paymentMethod",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                          "properties": {}
                        }
                      },
                      "contactMedium": {
                        "name": "contactMedium",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to ContactMedium"
                        }
                      },
                      "characteristic": {
                        "name": "characteristic",
                        "type": "array",
                        "description": "Describes the characteristic of a party role.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to Characteristic"
                        }
                      },
                      "creditProfile": {
                        "name": "creditProfile",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "creditProfileDate": {
                              "name": "creditProfileDate",
                              "type": "string",
                              "description": "The date the profile was established",
                              "format": "date-time"
                            },
                            "creditRiskRating": {
                              "name": "creditRiskRating",
                              "type": "integer",
                              "description": "This is an integer whose value is used to rate the risk"
                            },
                            "creditScore": {
                              "name": "creditScore",
                              "type": "integer",
                              "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      },
                      "agreement": {
                        "name": "agreement",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                          "properties": {}
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to RelatedPartyOrPartyRole"
                        }
                      },
                      "roleType": {
                        "name": "roleType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "The name of the role type. It uniquely identifies the role type within the partnership type."
                          },
                          "partnershipHref": {
                            "name": "partnershipHref",
                            "type": "string",
                            "description": "Reference url of the partnership type containing the role type"
                          },
                          "partnershipId": {
                            "name": "partnershipId",
                            "type": "string",
                            "description": "The identifier of the partnership type containing the role type"
                          },
                          "partnershipName": {
                            "name": "partnershipName",
                            "type": "string",
                            "description": "The name of the partnership type defining this role type"
                          },
                          "@referredType": {
                            "name": "@referredType",
                            "type": "string",
                            "description": "The actual type of the target instance when needed for disambiguation."
                          }
                        }
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles."
                      }
                    }
                  },
                  {
                    "name": "relatedParty_variant_3",
                    "type": "object",
                    "properties": {
                      "href": {
                        "name": "href",
                        "type": "string",
                        "description": "Reference of the product"
                      },
                      "id": {
                        "name": "id",
                        "type": "string",
                        "description": "Unique identifier of the product"
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "The name of the referred party role."
                      },
                      "partyId": {
                        "name": "partyId",
                        "type": "string",
                        "description": "The identifier of the engaged party that is linked to the PartyRole object."
                      },
                      "partyName": {
                        "name": "partyName",
                        "type": "string",
                        "description": "The name of the engaged party that is linked to the PartyRole object."
                      },
                      "@referredType": {
                        "name": "@referredType",
                        "type": "string",
                        "description": "The actual type of the target instance when needed for disambiguation."
                      }
                    }
                  }
                ]
              },
              "policy": {
                "name": "policy",
                "type": "object",
                "properties": {
                  "id": {
                    "name": "id",
                    "type": "string",
                    "description": "unique identifier"
                  },
                  "href": {
                    "name": "href",
                    "type": "string",
                    "description": "Hyperlink reference"
                  },
                  "version": {
                    "name": "version",
                    "type": "string"
                  },
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                  },
                  "@baseType": {
                    "name": "@baseType",
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                  }
                }
              },
              "goal": {
                "name": "goal",
                "type": "object",
                "description": "A reference to the representation that captures the target  ambition of a closed loop.",
                "properties": {}
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "version": {
                "name": "version",
                "type": "string"
              },
              "closeLoopGoalSpecification": {
                "name": "closeLoopGoalSpecification",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "EntitySpecification version"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "closedLoopSpecification": {
    "tableName": "ClosedLoopSpecification",
    "endpoints": [
      {
        "operationId": "listClosedLoopSpecification",
        "path": "/closedLoopSpecification",
        "method": "get"
      },
      {
        "operationId": "createClosedLoopSpecification",
        "path": "/closedLoopSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveClosedLoopSpecification",
        "path": "/closedLoopSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteClosedLoopSpecification",
        "path": "/closedLoopSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchClosedLoopSpecification",
        "path": "/closedLoopSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "specification version"
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "targetEntitySchema": {
                "name": "targetEntitySchema",
                "type": "object",
                "description": "The reference object to the schema and type of target entity which is described by a specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target entity"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target entity"
                  }
                }
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "properties": {
                            "externalReference": {
                              "name": "externalReference",
                              "type": "array",
                              "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "owner": {
                                    "name": "owner",
                                    "type": "string",
                                    "description": "Name of the external system that owns the entity."
                                  },
                                  "externalIdentifierType": {
                                    "name": "externalIdentifierType",
                                    "type": "string",
                                    "description": "Type of the identification, typically would be the type of the entity within the external system"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "identification of the entity within the external system."
                                  }
                                }
                              }
                            },
                            "partyCharacteristic": {
                              "name": "partyCharacteristic",
                              "type": "array",
                              "description": "List of additional characteristics that a Party can take on.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  }
                                }
                              }
                            },
                            "taxExemptionCertificate": {
                              "name": "taxExemptionCertificate",
                              "type": "array",
                              "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier of the tax exemption within list of the exemptions"
                                  },
                                  "taxDefinition": {
                                    "name": "taxDefinition",
                                    "type": "array",
                                    "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the tax."
                                        },
                                        "name": {
                                          "name": "name",
                                          "type": "string",
                                          "description": "Tax name."
                                        },
                                        "validFor": {
                                          "name": "validFor",
                                          "type": "object",
                                          "description": "Reference to TimePeriod"
                                        },
                                        "jurisdictionName": {
                                          "name": "jurisdictionName",
                                          "type": "string",
                                          "description": "Name of the jurisdiction that levies the tax"
                                        },
                                        "jurisdictionLevel": {
                                          "name": "jurisdictionLevel",
                                          "type": "string",
                                          "description": "Level of the jurisdiction that levies the tax"
                                        },
                                        "taxType": {
                                          "name": "taxType",
                                          "type": "string",
                                          "description": "Type of the tax."
                                        }
                                      }
                                    }
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "certificateNumber": {
                                    "name": "certificateNumber",
                                    "type": "string",
                                    "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                                  },
                                  "issuingJurisdiction": {
                                    "name": "issuingJurisdiction",
                                    "type": "string",
                                    "description": "Name of the jurisdiction that issued the exemption"
                                  },
                                  "reason": {
                                    "name": "reason",
                                    "type": "string",
                                    "description": "Reason for the tax exemption"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "creditRating": {
                              "name": "creditRating",
                              "type": "array",
                              "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditAgencyName": {
                                    "name": "creditAgencyName",
                                    "type": "string",
                                    "description": "Name of the credit agency giving the score"
                                  },
                                  "creditAgencyType": {
                                    "name": "creditAgencyType",
                                    "type": "string",
                                    "description": "Type of the credit agency giving the score"
                                  },
                                  "ratingReference": {
                                    "name": "ratingReference",
                                    "type": "string",
                                    "description": "Reference corresponding to the credit rating"
                                  },
                                  "ratingScore": {
                                    "name": "ratingScore",
                                    "type": "integer",
                                    "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                                    "format": "int32"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "description": "List of parties and/or party roles related to this party",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "description": "List of means for contacting the party, e.g. mobile phone, email address",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier for this contact medium."
                                  },
                                  "preferred": {
                                    "name": "preferred",
                                    "type": "boolean",
                                    "description": "If true, indicates that is the preferred contact medium"
                                  },
                                  "contactType": {
                                    "name": "contactType",
                                    "type": "string",
                                    "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "properties": {
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Used to track the lifecycle status of the party role."
                            },
                            "statusReason": {
                              "name": "statusReason",
                              "type": "string",
                              "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "engagedParty": {
                              "name": "engagedParty",
                              "type": "union",
                              "description": " Entity reference. A Party defines a Party described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Party entity and not the RelatedPartyRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "engagedParty_variant_0",
                                  "type": "object",
                                  "description": "Reference to Party"
                                },
                                {
                                  "name": "engagedParty_variant_1",
                                  "type": "object",
                                  "description": "Reference to PartyRef"
                                }
                              ]
                            },
                            "account": {
                              "name": "account",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Detailed description of the account"
                                  },
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Reference of the account"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the account"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the account"
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  }
                                }
                              }
                            },
                            "paymentMethod": {
                              "name": "paymentMethod",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                "properties": {}
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ContactMedium"
                              }
                            },
                            "characteristic": {
                              "name": "characteristic",
                              "type": "array",
                              "description": "Describes the characteristic of a party role.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to Characteristic"
                              }
                            },
                            "creditProfile": {
                              "name": "creditProfile",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditProfileDate": {
                                    "name": "creditProfileDate",
                                    "type": "string",
                                    "description": "The date the profile was established",
                                    "format": "date-time"
                                  },
                                  "creditRiskRating": {
                                    "name": "creditRiskRating",
                                    "type": "integer",
                                    "description": "This is an integer whose value is used to rate the risk"
                                  },
                                  "creditScore": {
                                    "name": "creditScore",
                                    "type": "integer",
                                    "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "agreement": {
                              "name": "agreement",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                "properties": {}
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "roleType": {
                              "name": "roleType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The name of the role type. It uniquely identifies the role type within the partnership type."
                                },
                                "partnershipHref": {
                                  "name": "partnershipHref",
                                  "type": "string",
                                  "description": "Reference url of the partnership type containing the role type"
                                },
                                "partnershipId": {
                                  "name": "partnershipId",
                                  "type": "string",
                                  "description": "The identifier of the partnership type containing the role type"
                                },
                                "partnershipName": {
                                  "name": "partnershipName",
                                  "type": "string",
                                  "description": "The name of the partnership type defining this role type"
                                },
                                "@referredType": {
                                  "name": "@referredType",
                                  "type": "string",
                                  "description": "The actual type of the target instance when needed for disambiguation."
                                }
                              }
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles."
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "properties": {
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Reference of the product"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the product"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the referred party role."
                            },
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string",
                              "description": "The actual type of the target instance when needed for disambiguation."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "constraint": {
                "name": "constraint",
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "constraint version"
                    }
                  }
                }
              },
              "entitySpecRelationship": {
                "name": "entitySpecRelationship",
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications.",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "name": {
                      "name": "name",
                      "type": "string"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this entity specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "associationSpec": {
                      "name": "associationSpec",
                      "type": "object",
                      "description": "reference to an AssociationSpecification object",
                      "properties": {}
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    }
                  }
                }
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "validfor": {
                "name": "validfor",
                "type": "string",
                "format": "date-time"
              },
              "creationdate": {
                "name": "creationdate",
                "type": "string",
                "format": "date-time"
              },
              "closedLoopType": {
                "name": "closedLoopType",
                "type": "string",
                "description": "The possible values to represent the type of Closed Loop",
                "enum": [
                  "slow",
                  "fast"
                ]
              },
              "closedLoopGroup": {
                "name": "closedLoopGroup",
                "type": "object",
                "properties": {
                  "name": {
                    "name": "name",
                    "type": "string"
                  },
                  "validfor": {
                    "name": "validfor",
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationdate": {
                    "name": "creationdate",
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "name": "description",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "closedLoopGoalSpecification": {
    "tableName": "ClosedLoopGoalSpecification",
    "endpoints": [
      {
        "operationId": "listClosedLoopGoalSpecification",
        "path": "/closedLoopGoalSpecification",
        "method": "get"
      },
      {
        "operationId": "createClosedLoopGoalSpecification",
        "path": "/closedLoopGoalSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveClosedLoopGoalSpecification",
        "path": "/closedLoopGoalSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteClosedLoopGoalSpecification",
        "path": "/closedLoopGoalSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchClosedLoopGoalSpecification",
        "path": "/closedLoopGoalSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "specification version"
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "targetEntitySchema": {
                "name": "targetEntitySchema",
                "type": "object",
                "description": "The reference object to the schema and type of target entity which is described by a specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target entity"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target entity"
                  }
                }
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "properties": {
                            "externalReference": {
                              "name": "externalReference",
                              "type": "array",
                              "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "owner": {
                                    "name": "owner",
                                    "type": "string",
                                    "description": "Name of the external system that owns the entity."
                                  },
                                  "externalIdentifierType": {
                                    "name": "externalIdentifierType",
                                    "type": "string",
                                    "description": "Type of the identification, typically would be the type of the entity within the external system"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "identification of the entity within the external system."
                                  }
                                }
                              }
                            },
                            "partyCharacteristic": {
                              "name": "partyCharacteristic",
                              "type": "array",
                              "description": "List of additional characteristics that a Party can take on.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  }
                                }
                              }
                            },
                            "taxExemptionCertificate": {
                              "name": "taxExemptionCertificate",
                              "type": "array",
                              "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier of the tax exemption within list of the exemptions"
                                  },
                                  "taxDefinition": {
                                    "name": "taxDefinition",
                                    "type": "array",
                                    "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the tax."
                                        },
                                        "name": {
                                          "name": "name",
                                          "type": "string",
                                          "description": "Tax name."
                                        },
                                        "validFor": {
                                          "name": "validFor",
                                          "type": "object",
                                          "description": "Reference to TimePeriod"
                                        },
                                        "jurisdictionName": {
                                          "name": "jurisdictionName",
                                          "type": "string",
                                          "description": "Name of the jurisdiction that levies the tax"
                                        },
                                        "jurisdictionLevel": {
                                          "name": "jurisdictionLevel",
                                          "type": "string",
                                          "description": "Level of the jurisdiction that levies the tax"
                                        },
                                        "taxType": {
                                          "name": "taxType",
                                          "type": "string",
                                          "description": "Type of the tax."
                                        }
                                      }
                                    }
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "certificateNumber": {
                                    "name": "certificateNumber",
                                    "type": "string",
                                    "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                                  },
                                  "issuingJurisdiction": {
                                    "name": "issuingJurisdiction",
                                    "type": "string",
                                    "description": "Name of the jurisdiction that issued the exemption"
                                  },
                                  "reason": {
                                    "name": "reason",
                                    "type": "string",
                                    "description": "Reason for the tax exemption"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "creditRating": {
                              "name": "creditRating",
                              "type": "array",
                              "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditAgencyName": {
                                    "name": "creditAgencyName",
                                    "type": "string",
                                    "description": "Name of the credit agency giving the score"
                                  },
                                  "creditAgencyType": {
                                    "name": "creditAgencyType",
                                    "type": "string",
                                    "description": "Type of the credit agency giving the score"
                                  },
                                  "ratingReference": {
                                    "name": "ratingReference",
                                    "type": "string",
                                    "description": "Reference corresponding to the credit rating"
                                  },
                                  "ratingScore": {
                                    "name": "ratingScore",
                                    "type": "integer",
                                    "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                                    "format": "int32"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "description": "List of parties and/or party roles related to this party",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "description": "List of means for contacting the party, e.g. mobile phone, email address",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier for this contact medium."
                                  },
                                  "preferred": {
                                    "name": "preferred",
                                    "type": "boolean",
                                    "description": "If true, indicates that is the preferred contact medium"
                                  },
                                  "contactType": {
                                    "name": "contactType",
                                    "type": "string",
                                    "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "properties": {
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Used to track the lifecycle status of the party role."
                            },
                            "statusReason": {
                              "name": "statusReason",
                              "type": "string",
                              "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "engagedParty": {
                              "name": "engagedParty",
                              "type": "union",
                              "description": " Entity reference. A Party defines a Party described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Party entity and not the RelatedPartyRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "engagedParty_variant_0",
                                  "type": "object",
                                  "description": "Reference to Party"
                                },
                                {
                                  "name": "engagedParty_variant_1",
                                  "type": "object",
                                  "description": "Reference to PartyRef"
                                }
                              ]
                            },
                            "account": {
                              "name": "account",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Detailed description of the account"
                                  },
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Reference of the account"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the account"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the account"
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  }
                                }
                              }
                            },
                            "paymentMethod": {
                              "name": "paymentMethod",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                "properties": {}
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ContactMedium"
                              }
                            },
                            "characteristic": {
                              "name": "characteristic",
                              "type": "array",
                              "description": "Describes the characteristic of a party role.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to Characteristic"
                              }
                            },
                            "creditProfile": {
                              "name": "creditProfile",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditProfileDate": {
                                    "name": "creditProfileDate",
                                    "type": "string",
                                    "description": "The date the profile was established",
                                    "format": "date-time"
                                  },
                                  "creditRiskRating": {
                                    "name": "creditRiskRating",
                                    "type": "integer",
                                    "description": "This is an integer whose value is used to rate the risk"
                                  },
                                  "creditScore": {
                                    "name": "creditScore",
                                    "type": "integer",
                                    "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "agreement": {
                              "name": "agreement",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                "properties": {}
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "roleType": {
                              "name": "roleType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The name of the role type. It uniquely identifies the role type within the partnership type."
                                },
                                "partnershipHref": {
                                  "name": "partnershipHref",
                                  "type": "string",
                                  "description": "Reference url of the partnership type containing the role type"
                                },
                                "partnershipId": {
                                  "name": "partnershipId",
                                  "type": "string",
                                  "description": "The identifier of the partnership type containing the role type"
                                },
                                "partnershipName": {
                                  "name": "partnershipName",
                                  "type": "string",
                                  "description": "The name of the partnership type defining this role type"
                                },
                                "@referredType": {
                                  "name": "@referredType",
                                  "type": "string",
                                  "description": "The actual type of the target instance when needed for disambiguation."
                                }
                              }
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles."
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "properties": {
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Reference of the product"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the product"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the referred party role."
                            },
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string",
                              "description": "The actual type of the target instance when needed for disambiguation."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "constraint": {
                "name": "constraint",
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "constraint version"
                    }
                  }
                }
              },
              "entitySpecRelationship": {
                "name": "entitySpecRelationship",
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications.",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "name": {
                      "name": "name",
                      "type": "string"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this entity specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "associationSpec": {
                      "name": "associationSpec",
                      "type": "object",
                      "description": "reference to an AssociationSpecification object",
                      "properties": {}
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    }
                  }
                }
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "validfor": {
                "name": "validfor",
                "type": "string",
                "format": "date-time"
              },
              "creationdate": {
                "name": "creationdate",
                "type": "string",
                "format": "date-time"
              },
              "closedLoopGroup": {
                "name": "closedLoopGroup",
                "type": "object",
                "properties": {
                  "name": {
                    "name": "name",
                    "type": "string"
                  },
                  "validfor": {
                    "name": "validfor",
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationdate": {
                    "name": "creationdate",
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "name": "description",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "closedLoopWorkflowActivity": {
    "tableName": "ClosedLoopWorkflowActivity",
    "endpoints": [
      {
        "operationId": "listClosedLoopWorkflowActivity",
        "path": "/closedLoopWorkflowActivity",
        "method": "get"
      },
      {
        "operationId": "createClosedLoopWorkflowActivity",
        "path": "/closedLoopWorkflowActivity",
        "method": "post"
      },
      {
        "operationId": "retrieveClosedLoopWorkflowActivity",
        "path": "/closedLoopWorkflowActivity/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteClosedLoopWorkflowActivity",
        "path": "/closedLoopWorkflowActivity/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchClosedLoopWorkflowActivity",
        "path": "/closedLoopWorkflowActivity/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "creationdate": {
                "name": "creationdate",
                "type": "string",
                "format": "date-time"
              },
              "validfor": {
                "name": "validfor",
                "type": "string",
                "format": "date-time"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "union",
                "description": "",
                "oneOf": [
                  {
                    "name": "relatedParty_variant_0",
                    "type": "object",
                    "properties": {
                      "externalReference": {
                        "name": "externalReference",
                        "type": "array",
                        "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "owner": {
                              "name": "owner",
                              "type": "string",
                              "description": "Name of the external system that owns the entity."
                            },
                            "externalIdentifierType": {
                              "name": "externalIdentifierType",
                              "type": "string",
                              "description": "Type of the identification, typically would be the type of the entity within the external system"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "identification of the entity within the external system."
                            }
                          }
                        }
                      },
                      "partyCharacteristic": {
                        "name": "partyCharacteristic",
                        "type": "array",
                        "description": "List of additional characteristics that a Party can take on.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the characteristic"
                            },
                            "valueType": {
                              "name": "valueType",
                              "type": "string",
                              "description": "Data type of the value of the characteristic"
                            },
                            "characteristicRelationship": {
                              "name": "characteristicRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "The type of relationship"
                                  }
                                }
                              }
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the characteristic"
                            }
                          }
                        }
                      },
                      "taxExemptionCertificate": {
                        "name": "taxExemptionCertificate",
                        "type": "array",
                        "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Identifier of the tax exemption within list of the exemptions"
                            },
                            "taxDefinition": {
                              "name": "taxDefinition",
                              "type": "array",
                              "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the tax."
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Tax name."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                                    "properties": {
                                      "startDateTime": {
                                        "name": "startDateTime",
                                        "type": "string",
                                        "description": "Start of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      },
                                      "endDateTime": {
                                        "name": "endDateTime",
                                        "type": "string",
                                        "description": "End of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      }
                                    }
                                  },
                                  "jurisdictionName": {
                                    "name": "jurisdictionName",
                                    "type": "string",
                                    "description": "Name of the jurisdiction that levies the tax"
                                  },
                                  "jurisdictionLevel": {
                                    "name": "jurisdictionLevel",
                                    "type": "string",
                                    "description": "Level of the jurisdiction that levies the tax"
                                  },
                                  "taxType": {
                                    "name": "taxType",
                                    "type": "string",
                                    "description": "Type of the tax."
                                  }
                                }
                              }
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "certificateNumber": {
                              "name": "certificateNumber",
                              "type": "string",
                              "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                            },
                            "issuingJurisdiction": {
                              "name": "issuingJurisdiction",
                              "type": "string",
                              "description": "Name of the jurisdiction that issued the exemption"
                            },
                            "reason": {
                              "name": "reason",
                              "type": "string",
                              "description": "Reason for the tax exemption"
                            },
                            "attachment": {
                              "name": "attachment",
                              "type": "union",
                              "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "attachment_variant_0",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "name": "name",
                                      "type": "string",
                                      "description": "The name of the attachment"
                                    },
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "A narrative text describing the content of the attachment"
                                    },
                                    "url": {
                                      "name": "url",
                                      "type": "string",
                                      "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                    },
                                    "content": {
                                      "name": "content",
                                      "type": "string",
                                      "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                      "format": "base64"
                                    },
                                    "size": {
                                      "name": "size",
                                      "type": "object",
                                      "description": "An amount in a given unit",
                                      "properties": {
                                        "amount": {
                                          "name": "amount",
                                          "type": "number",
                                          "description": "Numeric value in a given unit",
                                          "format": "float"
                                        },
                                        "units": {
                                          "name": "units",
                                          "type": "string",
                                          "description": "Unit"
                                        }
                                      }
                                    },
                                    "validFor": {
                                      "name": "validFor",
                                      "type": "object",
                                      "description": "Reference to TimePeriod"
                                    },
                                    "attachmentType": {
                                      "name": "attachmentType",
                                      "type": "string",
                                      "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                    },
                                    "mimeType": {
                                      "name": "mimeType",
                                      "type": "string",
                                      "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                    }
                                  }
                                },
                                {
                                  "name": "attachment_variant_1",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "A narrative text describing the content of the attachment"
                                    },
                                    "url": {
                                      "name": "url",
                                      "type": "string",
                                      "description": "Link to the attachment media/content"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "creditRating": {
                        "name": "creditRating",
                        "type": "array",
                        "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "creditAgencyName": {
                              "name": "creditAgencyName",
                              "type": "string",
                              "description": "Name of the credit agency giving the score"
                            },
                            "creditAgencyType": {
                              "name": "creditAgencyType",
                              "type": "string",
                              "description": "Type of the credit agency giving the score"
                            },
                            "ratingReference": {
                              "name": "ratingReference",
                              "type": "string",
                              "description": "Reference corresponding to the credit rating"
                            },
                            "ratingScore": {
                              "name": "ratingScore",
                              "type": "integer",
                              "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                              "format": "int32"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "description": "List of parties and/or party roles related to this party",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "role": {
                              "name": "role",
                              "type": "string"
                            },
                            "partyOrPartyRole": {
                              "name": "partyOrPartyRole",
                              "type": "object",
                              "description": "Reference to PartyOrPartyRole"
                            }
                          }
                        }
                      },
                      "contactMedium": {
                        "name": "contactMedium",
                        "type": "array",
                        "description": "List of means for contacting the party, e.g. mobile phone, email address",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Identifier for this contact medium."
                            },
                            "preferred": {
                              "name": "preferred",
                              "type": "boolean",
                              "description": "If true, indicates that is the preferred contact medium"
                            },
                            "contactType": {
                              "name": "contactType",
                              "type": "string",
                              "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "name": "relatedParty_variant_1",
                    "type": "object",
                    "description": "A Party reference",
                    "properties": {}
                  },
                  {
                    "name": "relatedParty_variant_2",
                    "type": "object",
                    "properties": {
                      "status": {
                        "name": "status",
                        "type": "string",
                        "description": "Used to track the lifecycle status of the party role."
                      },
                      "statusReason": {
                        "name": "statusReason",
                        "type": "string",
                        "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                      },
                      "validFor": {
                        "name": "validFor",
                        "type": "object",
                        "description": "Reference to TimePeriod"
                      },
                      "engagedParty": {
                        "name": "engagedParty",
                        "type": "union",
                        "description": " Entity reference. A Party defines a Party described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Party entity and not the RelatedPartyRefOrValue class itself",
                        "oneOf": [
                          {
                            "name": "engagedParty_variant_0",
                            "type": "object",
                            "description": "Reference to Party"
                          },
                          {
                            "name": "engagedParty_variant_1",
                            "type": "object",
                            "description": "Reference to PartyRef"
                          }
                        ]
                      },
                      "account": {
                        "name": "account",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Detailed description of the account"
                            },
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Reference of the account"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the account"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the account"
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string",
                              "description": "The actual type of the target instance when needed for disambiguation."
                            }
                          }
                        }
                      },
                      "paymentMethod": {
                        "name": "paymentMethod",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                          "properties": {}
                        }
                      },
                      "contactMedium": {
                        "name": "contactMedium",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to ContactMedium"
                        }
                      },
                      "characteristic": {
                        "name": "characteristic",
                        "type": "array",
                        "description": "Describes the characteristic of a party role.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to Characteristic"
                        }
                      },
                      "creditProfile": {
                        "name": "creditProfile",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "creditProfileDate": {
                              "name": "creditProfileDate",
                              "type": "string",
                              "description": "The date the profile was established",
                              "format": "date-time"
                            },
                            "creditRiskRating": {
                              "name": "creditRiskRating",
                              "type": "integer",
                              "description": "This is an integer whose value is used to rate the risk"
                            },
                            "creditScore": {
                              "name": "creditScore",
                              "type": "integer",
                              "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      },
                      "agreement": {
                        "name": "agreement",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                          "properties": {}
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to RelatedPartyOrPartyRole"
                        }
                      },
                      "roleType": {
                        "name": "roleType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "The name of the role type. It uniquely identifies the role type within the partnership type."
                          },
                          "partnershipHref": {
                            "name": "partnershipHref",
                            "type": "string",
                            "description": "Reference url of the partnership type containing the role type"
                          },
                          "partnershipId": {
                            "name": "partnershipId",
                            "type": "string",
                            "description": "The identifier of the partnership type containing the role type"
                          },
                          "partnershipName": {
                            "name": "partnershipName",
                            "type": "string",
                            "description": "The name of the partnership type defining this role type"
                          },
                          "@referredType": {
                            "name": "@referredType",
                            "type": "string",
                            "description": "The actual type of the target instance when needed for disambiguation."
                          }
                        }
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles."
                      }
                    }
                  },
                  {
                    "name": "relatedParty_variant_3",
                    "type": "object",
                    "properties": {
                      "href": {
                        "name": "href",
                        "type": "string",
                        "description": "Reference of the product"
                      },
                      "id": {
                        "name": "id",
                        "type": "string",
                        "description": "Unique identifier of the product"
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "The name of the referred party role."
                      },
                      "partyId": {
                        "name": "partyId",
                        "type": "string",
                        "description": "The identifier of the engaged party that is linked to the PartyRole object."
                      },
                      "partyName": {
                        "name": "partyName",
                        "type": "string",
                        "description": "The name of the engaged party that is linked to the PartyRole object."
                      },
                      "@referredType": {
                        "name": "@referredType",
                        "type": "string",
                        "description": "The actual type of the target instance when needed for disambiguation."
                      }
                    }
                  }
                ]
              },
              "plannedStart": {
                "name": "plannedStart",
                "type": "string",
                "description": "Represents the scheduled date-time to start a activity for a closed loop.",
                "format": "date-time"
              },
              "plannedEnd": {
                "name": "plannedEnd",
                "type": "string",
                "description": "Represents the scheduled date-time to end a activity for a closed loop.",
                "format": "date-time"
              },
              "plannedTenure": {
                "name": "plannedTenure",
                "type": "object",
                "description": "Reference to TimePeriod"
              },
              "plannedCost": {
                "name": "plannedCost",
                "type": "string",
                "description": "Represents the budgeted cost of the closed loop activity."
              },
              "actualCost": {
                "name": "actualCost",
                "type": "string",
                "description": "Represents the actual cost of the closed loop activity."
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "activityRelationship": {
                "name": "activityRelationship",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "EntitySpecification version"
                  }
                }
              },
              "activity": {
                "name": "activity",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Id of the related activity"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Relationship type as relies on, bundles, etc..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "closedLoopBusinessRule": {
    "tableName": "ClosedLoopBusinessRule",
    "endpoints": [
      {
        "operationId": "listClosedLoopBusinessRule",
        "path": "/closedLoopBusinessRule",
        "method": "get"
      },
      {
        "operationId": "createClosedLoopBusinessRule",
        "path": "/closedLoopBusinessRule",
        "method": "post"
      },
      {
        "operationId": "retrieveClosedLoopBusinessRule",
        "path": "/closedLoopBusinessRule/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteClosedLoopBusinessRule",
        "path": "/closedLoopBusinessRule/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchClosedLoopBusinessRule",
        "path": "/closedLoopBusinessRule/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "validfor": {
                "name": "validfor",
                "type": "string",
                "format": "date-time"
              },
              "creationdate": {
                "name": "creationdate",
                "type": "string",
                "format": "date-time"
              },
              "value": {
                "name": "value",
                "type": "string"
              },
              "businessRuleTriggerEvent": {
                "name": "businessRuleTriggerEvent",
                "type": "object",
                "properties": {
                  "eventTime": {
                    "name": "eventTime",
                    "type": "string",
                    "description": "Time the event occurred",
                    "format": "date-time"
                  }
                }
              },
              "whyInvoke": {
                "name": "whyInvoke",
                "type": "string"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "union",
                "description": "",
                "oneOf": [
                  {
                    "name": "relatedParty_variant_0",
                    "type": "object",
                    "properties": {
                      "externalReference": {
                        "name": "externalReference",
                        "type": "array",
                        "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "owner": {
                              "name": "owner",
                              "type": "string",
                              "description": "Name of the external system that owns the entity."
                            },
                            "externalIdentifierType": {
                              "name": "externalIdentifierType",
                              "type": "string",
                              "description": "Type of the identification, typically would be the type of the entity within the external system"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "identification of the entity within the external system."
                            }
                          }
                        }
                      },
                      "partyCharacteristic": {
                        "name": "partyCharacteristic",
                        "type": "array",
                        "description": "List of additional characteristics that a Party can take on.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the characteristic"
                            },
                            "valueType": {
                              "name": "valueType",
                              "type": "string",
                              "description": "Data type of the value of the characteristic"
                            },
                            "characteristicRelationship": {
                              "name": "characteristicRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "The type of relationship"
                                  }
                                }
                              }
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the characteristic"
                            }
                          }
                        }
                      },
                      "taxExemptionCertificate": {
                        "name": "taxExemptionCertificate",
                        "type": "array",
                        "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Identifier of the tax exemption within list of the exemptions"
                            },
                            "taxDefinition": {
                              "name": "taxDefinition",
                              "type": "array",
                              "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the tax."
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Tax name."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                                    "properties": {
                                      "startDateTime": {
                                        "name": "startDateTime",
                                        "type": "string",
                                        "description": "Start of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      },
                                      "endDateTime": {
                                        "name": "endDateTime",
                                        "type": "string",
                                        "description": "End of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      }
                                    }
                                  },
                                  "jurisdictionName": {
                                    "name": "jurisdictionName",
                                    "type": "string",
                                    "description": "Name of the jurisdiction that levies the tax"
                                  },
                                  "jurisdictionLevel": {
                                    "name": "jurisdictionLevel",
                                    "type": "string",
                                    "description": "Level of the jurisdiction that levies the tax"
                                  },
                                  "taxType": {
                                    "name": "taxType",
                                    "type": "string",
                                    "description": "Type of the tax."
                                  }
                                }
                              }
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "certificateNumber": {
                              "name": "certificateNumber",
                              "type": "string",
                              "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                            },
                            "issuingJurisdiction": {
                              "name": "issuingJurisdiction",
                              "type": "string",
                              "description": "Name of the jurisdiction that issued the exemption"
                            },
                            "reason": {
                              "name": "reason",
                              "type": "string",
                              "description": "Reason for the tax exemption"
                            },
                            "attachment": {
                              "name": "attachment",
                              "type": "union",
                              "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "attachment_variant_0",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "name": "name",
                                      "type": "string",
                                      "description": "The name of the attachment"
                                    },
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "A narrative text describing the content of the attachment"
                                    },
                                    "url": {
                                      "name": "url",
                                      "type": "string",
                                      "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                    },
                                    "content": {
                                      "name": "content",
                                      "type": "string",
                                      "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                      "format": "base64"
                                    },
                                    "size": {
                                      "name": "size",
                                      "type": "object",
                                      "description": "An amount in a given unit",
                                      "properties": {
                                        "amount": {
                                          "name": "amount",
                                          "type": "number",
                                          "description": "Numeric value in a given unit",
                                          "format": "float"
                                        },
                                        "units": {
                                          "name": "units",
                                          "type": "string",
                                          "description": "Unit"
                                        }
                                      }
                                    },
                                    "validFor": {
                                      "name": "validFor",
                                      "type": "object",
                                      "description": "Reference to TimePeriod"
                                    },
                                    "attachmentType": {
                                      "name": "attachmentType",
                                      "type": "string",
                                      "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                    },
                                    "mimeType": {
                                      "name": "mimeType",
                                      "type": "string",
                                      "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                    }
                                  }
                                },
                                {
                                  "name": "attachment_variant_1",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "A narrative text describing the content of the attachment"
                                    },
                                    "url": {
                                      "name": "url",
                                      "type": "string",
                                      "description": "Link to the attachment media/content"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "creditRating": {
                        "name": "creditRating",
                        "type": "array",
                        "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "creditAgencyName": {
                              "name": "creditAgencyName",
                              "type": "string",
                              "description": "Name of the credit agency giving the score"
                            },
                            "creditAgencyType": {
                              "name": "creditAgencyType",
                              "type": "string",
                              "description": "Type of the credit agency giving the score"
                            },
                            "ratingReference": {
                              "name": "ratingReference",
                              "type": "string",
                              "description": "Reference corresponding to the credit rating"
                            },
                            "ratingScore": {
                              "name": "ratingScore",
                              "type": "integer",
                              "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                              "format": "int32"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "description": "List of parties and/or party roles related to this party",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "role": {
                              "name": "role",
                              "type": "string"
                            },
                            "partyOrPartyRole": {
                              "name": "partyOrPartyRole",
                              "type": "object",
                              "description": "Reference to PartyOrPartyRole"
                            }
                          }
                        }
                      },
                      "contactMedium": {
                        "name": "contactMedium",
                        "type": "array",
                        "description": "List of means for contacting the party, e.g. mobile phone, email address",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Identifier for this contact medium."
                            },
                            "preferred": {
                              "name": "preferred",
                              "type": "boolean",
                              "description": "If true, indicates that is the preferred contact medium"
                            },
                            "contactType": {
                              "name": "contactType",
                              "type": "string",
                              "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "name": "relatedParty_variant_1",
                    "type": "object",
                    "description": "A Party reference",
                    "properties": {}
                  },
                  {
                    "name": "relatedParty_variant_2",
                    "type": "object",
                    "properties": {
                      "status": {
                        "name": "status",
                        "type": "string",
                        "description": "Used to track the lifecycle status of the party role."
                      },
                      "statusReason": {
                        "name": "statusReason",
                        "type": "string",
                        "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                      },
                      "validFor": {
                        "name": "validFor",
                        "type": "object",
                        "description": "Reference to TimePeriod"
                      },
                      "engagedParty": {
                        "name": "engagedParty",
                        "type": "union",
                        "description": " Entity reference. A Party defines a Party described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Party entity and not the RelatedPartyRefOrValue class itself",
                        "oneOf": [
                          {
                            "name": "engagedParty_variant_0",
                            "type": "object",
                            "description": "Reference to Party"
                          },
                          {
                            "name": "engagedParty_variant_1",
                            "type": "object",
                            "description": "Reference to PartyRef"
                          }
                        ]
                      },
                      "account": {
                        "name": "account",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Detailed description of the account"
                            },
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Reference of the account"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the account"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the account"
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string",
                              "description": "The actual type of the target instance when needed for disambiguation."
                            }
                          }
                        }
                      },
                      "paymentMethod": {
                        "name": "paymentMethod",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                          "properties": {}
                        }
                      },
                      "contactMedium": {
                        "name": "contactMedium",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to ContactMedium"
                        }
                      },
                      "characteristic": {
                        "name": "characteristic",
                        "type": "array",
                        "description": "Describes the characteristic of a party role.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to Characteristic"
                        }
                      },
                      "creditProfile": {
                        "name": "creditProfile",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "creditProfileDate": {
                              "name": "creditProfileDate",
                              "type": "string",
                              "description": "The date the profile was established",
                              "format": "date-time"
                            },
                            "creditRiskRating": {
                              "name": "creditRiskRating",
                              "type": "integer",
                              "description": "This is an integer whose value is used to rate the risk"
                            },
                            "creditScore": {
                              "name": "creditScore",
                              "type": "integer",
                              "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        }
                      },
                      "agreement": {
                        "name": "agreement",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                          "properties": {}
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to RelatedPartyOrPartyRole"
                        }
                      },
                      "roleType": {
                        "name": "roleType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "The name of the role type. It uniquely identifies the role type within the partnership type."
                          },
                          "partnershipHref": {
                            "name": "partnershipHref",
                            "type": "string",
                            "description": "Reference url of the partnership type containing the role type"
                          },
                          "partnershipId": {
                            "name": "partnershipId",
                            "type": "string",
                            "description": "The identifier of the partnership type containing the role type"
                          },
                          "partnershipName": {
                            "name": "partnershipName",
                            "type": "string",
                            "description": "The name of the partnership type defining this role type"
                          },
                          "@referredType": {
                            "name": "@referredType",
                            "type": "string",
                            "description": "The actual type of the target instance when needed for disambiguation."
                          }
                        }
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles."
                      }
                    }
                  },
                  {
                    "name": "relatedParty_variant_3",
                    "type": "object",
                    "properties": {
                      "href": {
                        "name": "href",
                        "type": "string",
                        "description": "Reference of the product"
                      },
                      "id": {
                        "name": "id",
                        "type": "string",
                        "description": "Unique identifier of the product"
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "The name of the referred party role."
                      },
                      "partyId": {
                        "name": "partyId",
                        "type": "string",
                        "description": "The identifier of the engaged party that is linked to the PartyRole object."
                      },
                      "partyName": {
                        "name": "partyName",
                        "type": "string",
                        "description": "The name of the engaged party that is linked to the PartyRole object."
                      },
                      "@referredType": {
                        "name": "@referredType",
                        "type": "string",
                        "description": "The actual type of the target instance when needed for disambiguation."
                      }
                    }
                  }
                ]
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "closedLoopBusinessRuleSpecification": {
                "name": "closedLoopBusinessRuleSpecification",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "EntitySpecification version"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "closedLoopActivitySpecification": {
    "tableName": "ClosedLoopActivitySpecification",
    "endpoints": [
      {
        "operationId": "listClosedLoopActivitySpecification",
        "path": "/closedLoopActivitySpecification",
        "method": "get"
      },
      {
        "operationId": "createClosedLoopActivitySpecification",
        "path": "/closedLoopActivitySpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveClosedLoopActivitySpecification",
        "path": "/closedLoopActivitySpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteClosedLoopActivitySpecification",
        "path": "/closedLoopActivitySpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchClosedLoopActivitySpecification",
        "path": "/closedLoopActivitySpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "specification version"
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "targetEntitySchema": {
                "name": "targetEntitySchema",
                "type": "object",
                "description": "The reference object to the schema and type of target entity which is described by a specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target entity"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target entity"
                  }
                }
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "properties": {
                            "externalReference": {
                              "name": "externalReference",
                              "type": "array",
                              "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "owner": {
                                    "name": "owner",
                                    "type": "string",
                                    "description": "Name of the external system that owns the entity."
                                  },
                                  "externalIdentifierType": {
                                    "name": "externalIdentifierType",
                                    "type": "string",
                                    "description": "Type of the identification, typically would be the type of the entity within the external system"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "identification of the entity within the external system."
                                  }
                                }
                              }
                            },
                            "partyCharacteristic": {
                              "name": "partyCharacteristic",
                              "type": "array",
                              "description": "List of additional characteristics that a Party can take on.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  }
                                }
                              }
                            },
                            "taxExemptionCertificate": {
                              "name": "taxExemptionCertificate",
                              "type": "array",
                              "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier of the tax exemption within list of the exemptions"
                                  },
                                  "taxDefinition": {
                                    "name": "taxDefinition",
                                    "type": "array",
                                    "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the tax."
                                        },
                                        "name": {
                                          "name": "name",
                                          "type": "string",
                                          "description": "Tax name."
                                        },
                                        "validFor": {
                                          "name": "validFor",
                                          "type": "object",
                                          "description": "Reference to TimePeriod"
                                        },
                                        "jurisdictionName": {
                                          "name": "jurisdictionName",
                                          "type": "string",
                                          "description": "Name of the jurisdiction that levies the tax"
                                        },
                                        "jurisdictionLevel": {
                                          "name": "jurisdictionLevel",
                                          "type": "string",
                                          "description": "Level of the jurisdiction that levies the tax"
                                        },
                                        "taxType": {
                                          "name": "taxType",
                                          "type": "string",
                                          "description": "Type of the tax."
                                        }
                                      }
                                    }
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "certificateNumber": {
                                    "name": "certificateNumber",
                                    "type": "string",
                                    "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                                  },
                                  "issuingJurisdiction": {
                                    "name": "issuingJurisdiction",
                                    "type": "string",
                                    "description": "Name of the jurisdiction that issued the exemption"
                                  },
                                  "reason": {
                                    "name": "reason",
                                    "type": "string",
                                    "description": "Reason for the tax exemption"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "creditRating": {
                              "name": "creditRating",
                              "type": "array",
                              "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditAgencyName": {
                                    "name": "creditAgencyName",
                                    "type": "string",
                                    "description": "Name of the credit agency giving the score"
                                  },
                                  "creditAgencyType": {
                                    "name": "creditAgencyType",
                                    "type": "string",
                                    "description": "Type of the credit agency giving the score"
                                  },
                                  "ratingReference": {
                                    "name": "ratingReference",
                                    "type": "string",
                                    "description": "Reference corresponding to the credit rating"
                                  },
                                  "ratingScore": {
                                    "name": "ratingScore",
                                    "type": "integer",
                                    "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                                    "format": "int32"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "description": "List of parties and/or party roles related to this party",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "description": "List of means for contacting the party, e.g. mobile phone, email address",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier for this contact medium."
                                  },
                                  "preferred": {
                                    "name": "preferred",
                                    "type": "boolean",
                                    "description": "If true, indicates that is the preferred contact medium"
                                  },
                                  "contactType": {
                                    "name": "contactType",
                                    "type": "string",
                                    "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "properties": {
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Used to track the lifecycle status of the party role."
                            },
                            "statusReason": {
                              "name": "statusReason",
                              "type": "string",
                              "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "engagedParty": {
                              "name": "engagedParty",
                              "type": "union",
                              "description": " Entity reference. A Party defines a Party described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Party entity and not the RelatedPartyRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "engagedParty_variant_0",
                                  "type": "object",
                                  "description": "Reference to Party"
                                },
                                {
                                  "name": "engagedParty_variant_1",
                                  "type": "object",
                                  "description": "Reference to PartyRef"
                                }
                              ]
                            },
                            "account": {
                              "name": "account",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Detailed description of the account"
                                  },
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Reference of the account"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the account"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the account"
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  }
                                }
                              }
                            },
                            "paymentMethod": {
                              "name": "paymentMethod",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                "properties": {}
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ContactMedium"
                              }
                            },
                            "characteristic": {
                              "name": "characteristic",
                              "type": "array",
                              "description": "Describes the characteristic of a party role.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to Characteristic"
                              }
                            },
                            "creditProfile": {
                              "name": "creditProfile",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditProfileDate": {
                                    "name": "creditProfileDate",
                                    "type": "string",
                                    "description": "The date the profile was established",
                                    "format": "date-time"
                                  },
                                  "creditRiskRating": {
                                    "name": "creditRiskRating",
                                    "type": "integer",
                                    "description": "This is an integer whose value is used to rate the risk"
                                  },
                                  "creditScore": {
                                    "name": "creditScore",
                                    "type": "integer",
                                    "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "agreement": {
                              "name": "agreement",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                "properties": {}
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "roleType": {
                              "name": "roleType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The name of the role type. It uniquely identifies the role type within the partnership type."
                                },
                                "partnershipHref": {
                                  "name": "partnershipHref",
                                  "type": "string",
                                  "description": "Reference url of the partnership type containing the role type"
                                },
                                "partnershipId": {
                                  "name": "partnershipId",
                                  "type": "string",
                                  "description": "The identifier of the partnership type containing the role type"
                                },
                                "partnershipName": {
                                  "name": "partnershipName",
                                  "type": "string",
                                  "description": "The name of the partnership type defining this role type"
                                },
                                "@referredType": {
                                  "name": "@referredType",
                                  "type": "string",
                                  "description": "The actual type of the target instance when needed for disambiguation."
                                }
                              }
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles."
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "properties": {
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Reference of the product"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the product"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the referred party role."
                            },
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string",
                              "description": "The actual type of the target instance when needed for disambiguation."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "constraint": {
                "name": "constraint",
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "constraint version"
                    }
                  }
                }
              },
              "entitySpecRelationship": {
                "name": "entitySpecRelationship",
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications.",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "name": {
                      "name": "name",
                      "type": "string"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this entity specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "associationSpec": {
                      "name": "associationSpec",
                      "type": "object",
                      "description": "reference to an AssociationSpecification object",
                      "properties": {}
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    }
                  }
                }
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "validfor": {
                "name": "validfor",
                "type": "string",
                "format": "date-time"
              },
              "creationdate": {
                "name": "creationdate",
                "type": "string",
                "format": "date-time"
              },
              "group": {
                "name": "group",
                "type": "object",
                "properties": {
                  "name": {
                    "name": "name",
                    "type": "string"
                  },
                  "validfor": {
                    "name": "validfor",
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationdate": {
                    "name": "creationdate",
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "name": "description",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "closedLoopBusinessRuleSpecification": {
    "tableName": "ClosedLoopBusinessRuleSpecification",
    "endpoints": [
      {
        "operationId": "listClosedLoopBusinessRuleSpecification",
        "path": "/closedLoopBusinessRuleSpecification",
        "method": "get"
      },
      {
        "operationId": "createClosedLoopBusinessRuleSpecification",
        "path": "/closedLoopBusinessRuleSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveClosedLoopBusinessRuleSpecification",
        "path": "/closedLoopBusinessRuleSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteClosedLoopBusinessRuleSpecification",
        "path": "/closedLoopBusinessRuleSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchClosedLoopBusinessRuleSpecification",
        "path": "/closedLoopBusinessRuleSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "specification version"
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "targetEntitySchema": {
                "name": "targetEntitySchema",
                "type": "object",
                "description": "The reference object to the schema and type of target entity which is described by a specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target entity"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target entity"
                  }
                }
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "properties": {
                            "externalReference": {
                              "name": "externalReference",
                              "type": "array",
                              "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "owner": {
                                    "name": "owner",
                                    "type": "string",
                                    "description": "Name of the external system that owns the entity."
                                  },
                                  "externalIdentifierType": {
                                    "name": "externalIdentifierType",
                                    "type": "string",
                                    "description": "Type of the identification, typically would be the type of the entity within the external system"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "identification of the entity within the external system."
                                  }
                                }
                              }
                            },
                            "partyCharacteristic": {
                              "name": "partyCharacteristic",
                              "type": "array",
                              "description": "List of additional characteristics that a Party can take on.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  }
                                }
                              }
                            },
                            "taxExemptionCertificate": {
                              "name": "taxExemptionCertificate",
                              "type": "array",
                              "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier of the tax exemption within list of the exemptions"
                                  },
                                  "taxDefinition": {
                                    "name": "taxDefinition",
                                    "type": "array",
                                    "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the tax."
                                        },
                                        "name": {
                                          "name": "name",
                                          "type": "string",
                                          "description": "Tax name."
                                        },
                                        "validFor": {
                                          "name": "validFor",
                                          "type": "object",
                                          "description": "Reference to TimePeriod"
                                        },
                                        "jurisdictionName": {
                                          "name": "jurisdictionName",
                                          "type": "string",
                                          "description": "Name of the jurisdiction that levies the tax"
                                        },
                                        "jurisdictionLevel": {
                                          "name": "jurisdictionLevel",
                                          "type": "string",
                                          "description": "Level of the jurisdiction that levies the tax"
                                        },
                                        "taxType": {
                                          "name": "taxType",
                                          "type": "string",
                                          "description": "Type of the tax."
                                        }
                                      }
                                    }
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "certificateNumber": {
                                    "name": "certificateNumber",
                                    "type": "string",
                                    "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                                  },
                                  "issuingJurisdiction": {
                                    "name": "issuingJurisdiction",
                                    "type": "string",
                                    "description": "Name of the jurisdiction that issued the exemption"
                                  },
                                  "reason": {
                                    "name": "reason",
                                    "type": "string",
                                    "description": "Reason for the tax exemption"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "creditRating": {
                              "name": "creditRating",
                              "type": "array",
                              "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditAgencyName": {
                                    "name": "creditAgencyName",
                                    "type": "string",
                                    "description": "Name of the credit agency giving the score"
                                  },
                                  "creditAgencyType": {
                                    "name": "creditAgencyType",
                                    "type": "string",
                                    "description": "Type of the credit agency giving the score"
                                  },
                                  "ratingReference": {
                                    "name": "ratingReference",
                                    "type": "string",
                                    "description": "Reference corresponding to the credit rating"
                                  },
                                  "ratingScore": {
                                    "name": "ratingScore",
                                    "type": "integer",
                                    "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                                    "format": "int32"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "description": "List of parties and/or party roles related to this party",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "description": "List of means for contacting the party, e.g. mobile phone, email address",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier for this contact medium."
                                  },
                                  "preferred": {
                                    "name": "preferred",
                                    "type": "boolean",
                                    "description": "If true, indicates that is the preferred contact medium"
                                  },
                                  "contactType": {
                                    "name": "contactType",
                                    "type": "string",
                                    "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "properties": {
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Used to track the lifecycle status of the party role."
                            },
                            "statusReason": {
                              "name": "statusReason",
                              "type": "string",
                              "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "engagedParty": {
                              "name": "engagedParty",
                              "type": "union",
                              "description": " Entity reference. A Party defines a Party described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Party entity and not the RelatedPartyRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "engagedParty_variant_0",
                                  "type": "object",
                                  "description": "Reference to Party"
                                },
                                {
                                  "name": "engagedParty_variant_1",
                                  "type": "object",
                                  "description": "Reference to PartyRef"
                                }
                              ]
                            },
                            "account": {
                              "name": "account",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Detailed description of the account"
                                  },
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Reference of the account"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the account"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the account"
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  }
                                }
                              }
                            },
                            "paymentMethod": {
                              "name": "paymentMethod",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                "properties": {}
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ContactMedium"
                              }
                            },
                            "characteristic": {
                              "name": "characteristic",
                              "type": "array",
                              "description": "Describes the characteristic of a party role.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to Characteristic"
                              }
                            },
                            "creditProfile": {
                              "name": "creditProfile",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditProfileDate": {
                                    "name": "creditProfileDate",
                                    "type": "string",
                                    "description": "The date the profile was established",
                                    "format": "date-time"
                                  },
                                  "creditRiskRating": {
                                    "name": "creditRiskRating",
                                    "type": "integer",
                                    "description": "This is an integer whose value is used to rate the risk"
                                  },
                                  "creditScore": {
                                    "name": "creditScore",
                                    "type": "integer",
                                    "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "agreement": {
                              "name": "agreement",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                "properties": {}
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "roleType": {
                              "name": "roleType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The name of the role type. It uniquely identifies the role type within the partnership type."
                                },
                                "partnershipHref": {
                                  "name": "partnershipHref",
                                  "type": "string",
                                  "description": "Reference url of the partnership type containing the role type"
                                },
                                "partnershipId": {
                                  "name": "partnershipId",
                                  "type": "string",
                                  "description": "The identifier of the partnership type containing the role type"
                                },
                                "partnershipName": {
                                  "name": "partnershipName",
                                  "type": "string",
                                  "description": "The name of the partnership type defining this role type"
                                },
                                "@referredType": {
                                  "name": "@referredType",
                                  "type": "string",
                                  "description": "The actual type of the target instance when needed for disambiguation."
                                }
                              }
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles."
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "properties": {
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Reference of the product"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the product"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the referred party role."
                            },
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string",
                              "description": "The actual type of the target instance when needed for disambiguation."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "constraint": {
                "name": "constraint",
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "constraint version"
                    }
                  }
                }
              },
              "entitySpecRelationship": {
                "name": "entitySpecRelationship",
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications.",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "name": {
                      "name": "name",
                      "type": "string"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this entity specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "associationSpec": {
                      "name": "associationSpec",
                      "type": "object",
                      "description": "reference to an AssociationSpecification object",
                      "properties": {}
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    }
                  }
                }
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "validfor": {
                "name": "validfor",
                "type": "string",
                "format": "date-time"
              },
              "creationdate": {
                "name": "creationdate",
                "type": "string",
                "format": "date-time"
              },
              "group": {
                "name": "group",
                "type": "object",
                "properties": {
                  "name": {
                    "name": "name",
                    "type": "string"
                  },
                  "validfor": {
                    "name": "validfor",
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationdate": {
                    "name": "creationdate",
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "name": "description",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "closedLoopWorkflowActivitySpecification": {
    "tableName": "ClosedLoopWorkflowActivitySpecification",
    "endpoints": [
      {
        "operationId": "listClosedLoopWorkflowActivitySpecification",
        "path": "/closedLoopWorkflowActivitySpecification",
        "method": "get"
      },
      {
        "operationId": "createClosedLoopWorkflowActivitySpecification",
        "path": "/closedLoopWorkflowActivitySpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveClosedLoopWorkflowActivitySpecification",
        "path": "/closedLoopWorkflowActivitySpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteClosedLoopWorkflowActivitySpecification",
        "path": "/closedLoopWorkflowActivitySpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchClosedLoopWorkflowActivitySpecification",
        "path": "/closedLoopWorkflowActivitySpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "specification version"
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "targetEntitySchema": {
                "name": "targetEntitySchema",
                "type": "object",
                "description": "The reference object to the schema and type of target entity which is described by a specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target entity"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target entity"
                  }
                }
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "properties": {
                            "externalReference": {
                              "name": "externalReference",
                              "type": "array",
                              "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "owner": {
                                    "name": "owner",
                                    "type": "string",
                                    "description": "Name of the external system that owns the entity."
                                  },
                                  "externalIdentifierType": {
                                    "name": "externalIdentifierType",
                                    "type": "string",
                                    "description": "Type of the identification, typically would be the type of the entity within the external system"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "identification of the entity within the external system."
                                  }
                                }
                              }
                            },
                            "partyCharacteristic": {
                              "name": "partyCharacteristic",
                              "type": "array",
                              "description": "List of additional characteristics that a Party can take on.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  }
                                }
                              }
                            },
                            "taxExemptionCertificate": {
                              "name": "taxExemptionCertificate",
                              "type": "array",
                              "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier of the tax exemption within list of the exemptions"
                                  },
                                  "taxDefinition": {
                                    "name": "taxDefinition",
                                    "type": "array",
                                    "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the tax."
                                        },
                                        "name": {
                                          "name": "name",
                                          "type": "string",
                                          "description": "Tax name."
                                        },
                                        "validFor": {
                                          "name": "validFor",
                                          "type": "object",
                                          "description": "Reference to TimePeriod"
                                        },
                                        "jurisdictionName": {
                                          "name": "jurisdictionName",
                                          "type": "string",
                                          "description": "Name of the jurisdiction that levies the tax"
                                        },
                                        "jurisdictionLevel": {
                                          "name": "jurisdictionLevel",
                                          "type": "string",
                                          "description": "Level of the jurisdiction that levies the tax"
                                        },
                                        "taxType": {
                                          "name": "taxType",
                                          "type": "string",
                                          "description": "Type of the tax."
                                        }
                                      }
                                    }
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "certificateNumber": {
                                    "name": "certificateNumber",
                                    "type": "string",
                                    "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                                  },
                                  "issuingJurisdiction": {
                                    "name": "issuingJurisdiction",
                                    "type": "string",
                                    "description": "Name of the jurisdiction that issued the exemption"
                                  },
                                  "reason": {
                                    "name": "reason",
                                    "type": "string",
                                    "description": "Reason for the tax exemption"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "creditRating": {
                              "name": "creditRating",
                              "type": "array",
                              "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditAgencyName": {
                                    "name": "creditAgencyName",
                                    "type": "string",
                                    "description": "Name of the credit agency giving the score"
                                  },
                                  "creditAgencyType": {
                                    "name": "creditAgencyType",
                                    "type": "string",
                                    "description": "Type of the credit agency giving the score"
                                  },
                                  "ratingReference": {
                                    "name": "ratingReference",
                                    "type": "string",
                                    "description": "Reference corresponding to the credit rating"
                                  },
                                  "ratingScore": {
                                    "name": "ratingScore",
                                    "type": "integer",
                                    "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                                    "format": "int32"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "description": "List of parties and/or party roles related to this party",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "description": "List of means for contacting the party, e.g. mobile phone, email address",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier for this contact medium."
                                  },
                                  "preferred": {
                                    "name": "preferred",
                                    "type": "boolean",
                                    "description": "If true, indicates that is the preferred contact medium"
                                  },
                                  "contactType": {
                                    "name": "contactType",
                                    "type": "string",
                                    "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "properties": {
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Used to track the lifecycle status of the party role."
                            },
                            "statusReason": {
                              "name": "statusReason",
                              "type": "string",
                              "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "engagedParty": {
                              "name": "engagedParty",
                              "type": "union",
                              "description": " Entity reference. A Party defines a Party described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Party entity and not the RelatedPartyRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "engagedParty_variant_0",
                                  "type": "object",
                                  "description": "Reference to Party"
                                },
                                {
                                  "name": "engagedParty_variant_1",
                                  "type": "object",
                                  "description": "Reference to PartyRef"
                                }
                              ]
                            },
                            "account": {
                              "name": "account",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Detailed description of the account"
                                  },
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Reference of the account"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the account"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the account"
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  }
                                }
                              }
                            },
                            "paymentMethod": {
                              "name": "paymentMethod",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                "properties": {}
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ContactMedium"
                              }
                            },
                            "characteristic": {
                              "name": "characteristic",
                              "type": "array",
                              "description": "Describes the characteristic of a party role.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to Characteristic"
                              }
                            },
                            "creditProfile": {
                              "name": "creditProfile",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditProfileDate": {
                                    "name": "creditProfileDate",
                                    "type": "string",
                                    "description": "The date the profile was established",
                                    "format": "date-time"
                                  },
                                  "creditRiskRating": {
                                    "name": "creditRiskRating",
                                    "type": "integer",
                                    "description": "This is an integer whose value is used to rate the risk"
                                  },
                                  "creditScore": {
                                    "name": "creditScore",
                                    "type": "integer",
                                    "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "agreement": {
                              "name": "agreement",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                "properties": {}
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "roleType": {
                              "name": "roleType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The name of the role type. It uniquely identifies the role type within the partnership type."
                                },
                                "partnershipHref": {
                                  "name": "partnershipHref",
                                  "type": "string",
                                  "description": "Reference url of the partnership type containing the role type"
                                },
                                "partnershipId": {
                                  "name": "partnershipId",
                                  "type": "string",
                                  "description": "The identifier of the partnership type containing the role type"
                                },
                                "partnershipName": {
                                  "name": "partnershipName",
                                  "type": "string",
                                  "description": "The name of the partnership type defining this role type"
                                },
                                "@referredType": {
                                  "name": "@referredType",
                                  "type": "string",
                                  "description": "The actual type of the target instance when needed for disambiguation."
                                }
                              }
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles."
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "properties": {
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Reference of the product"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the product"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the referred party role."
                            },
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string",
                              "description": "The actual type of the target instance when needed for disambiguation."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "constraint": {
                "name": "constraint",
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "constraint version"
                    }
                  }
                }
              },
              "entitySpecRelationship": {
                "name": "entitySpecRelationship",
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications.",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "name": {
                      "name": "name",
                      "type": "string"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this entity specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "associationSpec": {
                      "name": "associationSpec",
                      "type": "object",
                      "description": "reference to an AssociationSpecification object",
                      "properties": {}
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    }
                  }
                }
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "validfor": {
                "name": "validfor",
                "type": "string",
                "format": "date-time"
              },
              "creationdate": {
                "name": "creationdate",
                "type": "string",
                "format": "date-time"
              },
              "group": {
                "name": "group",
                "type": "object",
                "properties": {
                  "name": {
                    "name": "name",
                    "type": "string"
                  },
                  "validfor": {
                    "name": "validfor",
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationdate": {
                    "name": "creationdate",
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "name": "description",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "closedLoopWorkflowSpecification": {
    "tableName": "ClosedLoopWorkflowSpecification",
    "endpoints": [
      {
        "operationId": "listClosedLoopWorkflowSpecification",
        "path": "/closedLoopWorkflowSpecification",
        "method": "get"
      },
      {
        "operationId": "createClosedLoopWorkflowSpecification",
        "path": "/closedLoopWorkflowSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveClosedLoopWorkflowSpecification",
        "path": "/closedLoopWorkflowSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteClosedLoopWorkflowSpecification",
        "path": "/closedLoopWorkflowSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchClosedLoopWorkflowSpecification",
        "path": "/closedLoopWorkflowSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "specification version"
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "targetEntitySchema": {
                "name": "targetEntitySchema",
                "type": "object",
                "description": "The reference object to the schema and type of target entity which is described by a specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target entity"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target entity"
                  }
                }
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "properties": {
                            "externalReference": {
                              "name": "externalReference",
                              "type": "array",
                              "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "owner": {
                                    "name": "owner",
                                    "type": "string",
                                    "description": "Name of the external system that owns the entity."
                                  },
                                  "externalIdentifierType": {
                                    "name": "externalIdentifierType",
                                    "type": "string",
                                    "description": "Type of the identification, typically would be the type of the entity within the external system"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "identification of the entity within the external system."
                                  }
                                }
                              }
                            },
                            "partyCharacteristic": {
                              "name": "partyCharacteristic",
                              "type": "array",
                              "description": "List of additional characteristics that a Party can take on.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  }
                                }
                              }
                            },
                            "taxExemptionCertificate": {
                              "name": "taxExemptionCertificate",
                              "type": "array",
                              "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier of the tax exemption within list of the exemptions"
                                  },
                                  "taxDefinition": {
                                    "name": "taxDefinition",
                                    "type": "array",
                                    "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the tax."
                                        },
                                        "name": {
                                          "name": "name",
                                          "type": "string",
                                          "description": "Tax name."
                                        },
                                        "validFor": {
                                          "name": "validFor",
                                          "type": "object",
                                          "description": "Reference to TimePeriod"
                                        },
                                        "jurisdictionName": {
                                          "name": "jurisdictionName",
                                          "type": "string",
                                          "description": "Name of the jurisdiction that levies the tax"
                                        },
                                        "jurisdictionLevel": {
                                          "name": "jurisdictionLevel",
                                          "type": "string",
                                          "description": "Level of the jurisdiction that levies the tax"
                                        },
                                        "taxType": {
                                          "name": "taxType",
                                          "type": "string",
                                          "description": "Type of the tax."
                                        }
                                      }
                                    }
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "certificateNumber": {
                                    "name": "certificateNumber",
                                    "type": "string",
                                    "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                                  },
                                  "issuingJurisdiction": {
                                    "name": "issuingJurisdiction",
                                    "type": "string",
                                    "description": "Name of the jurisdiction that issued the exemption"
                                  },
                                  "reason": {
                                    "name": "reason",
                                    "type": "string",
                                    "description": "Reason for the tax exemption"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "creditRating": {
                              "name": "creditRating",
                              "type": "array",
                              "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditAgencyName": {
                                    "name": "creditAgencyName",
                                    "type": "string",
                                    "description": "Name of the credit agency giving the score"
                                  },
                                  "creditAgencyType": {
                                    "name": "creditAgencyType",
                                    "type": "string",
                                    "description": "Type of the credit agency giving the score"
                                  },
                                  "ratingReference": {
                                    "name": "ratingReference",
                                    "type": "string",
                                    "description": "Reference corresponding to the credit rating"
                                  },
                                  "ratingScore": {
                                    "name": "ratingScore",
                                    "type": "integer",
                                    "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                                    "format": "int32"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "description": "List of parties and/or party roles related to this party",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "description": "List of means for contacting the party, e.g. mobile phone, email address",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier for this contact medium."
                                  },
                                  "preferred": {
                                    "name": "preferred",
                                    "type": "boolean",
                                    "description": "If true, indicates that is the preferred contact medium"
                                  },
                                  "contactType": {
                                    "name": "contactType",
                                    "type": "string",
                                    "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "properties": {
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Used to track the lifecycle status of the party role."
                            },
                            "statusReason": {
                              "name": "statusReason",
                              "type": "string",
                              "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "engagedParty": {
                              "name": "engagedParty",
                              "type": "union",
                              "description": " Entity reference. A Party defines a Party described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Party entity and not the RelatedPartyRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "engagedParty_variant_0",
                                  "type": "object",
                                  "description": "Reference to Party"
                                },
                                {
                                  "name": "engagedParty_variant_1",
                                  "type": "object",
                                  "description": "Reference to PartyRef"
                                }
                              ]
                            },
                            "account": {
                              "name": "account",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Detailed description of the account"
                                  },
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Reference of the account"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the account"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the account"
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  }
                                }
                              }
                            },
                            "paymentMethod": {
                              "name": "paymentMethod",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                "properties": {}
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ContactMedium"
                              }
                            },
                            "characteristic": {
                              "name": "characteristic",
                              "type": "array",
                              "description": "Describes the characteristic of a party role.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to Characteristic"
                              }
                            },
                            "creditProfile": {
                              "name": "creditProfile",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditProfileDate": {
                                    "name": "creditProfileDate",
                                    "type": "string",
                                    "description": "The date the profile was established",
                                    "format": "date-time"
                                  },
                                  "creditRiskRating": {
                                    "name": "creditRiskRating",
                                    "type": "integer",
                                    "description": "This is an integer whose value is used to rate the risk"
                                  },
                                  "creditScore": {
                                    "name": "creditScore",
                                    "type": "integer",
                                    "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "agreement": {
                              "name": "agreement",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                "properties": {}
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "roleType": {
                              "name": "roleType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The name of the role type. It uniquely identifies the role type within the partnership type."
                                },
                                "partnershipHref": {
                                  "name": "partnershipHref",
                                  "type": "string",
                                  "description": "Reference url of the partnership type containing the role type"
                                },
                                "partnershipId": {
                                  "name": "partnershipId",
                                  "type": "string",
                                  "description": "The identifier of the partnership type containing the role type"
                                },
                                "partnershipName": {
                                  "name": "partnershipName",
                                  "type": "string",
                                  "description": "The name of the partnership type defining this role type"
                                },
                                "@referredType": {
                                  "name": "@referredType",
                                  "type": "string",
                                  "description": "The actual type of the target instance when needed for disambiguation."
                                }
                              }
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles."
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "properties": {
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Reference of the product"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the product"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the referred party role."
                            },
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string",
                              "description": "The actual type of the target instance when needed for disambiguation."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "constraint": {
                "name": "constraint",
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "constraint version"
                    }
                  }
                }
              },
              "entitySpecRelationship": {
                "name": "entitySpecRelationship",
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications.",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "name": {
                      "name": "name",
                      "type": "string"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this entity specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "associationSpec": {
                      "name": "associationSpec",
                      "type": "object",
                      "description": "reference to an AssociationSpecification object",
                      "properties": {}
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    }
                  }
                }
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "validfor": {
                "name": "validfor",
                "type": "string",
                "format": "date-time"
              },
              "creationdate": {
                "name": "creationdate",
                "type": "string",
                "format": "date-time"
              },
              "group": {
                "name": "group",
                "type": "object",
                "properties": {
                  "name": {
                    "name": "name",
                    "type": "string"
                  },
                  "validfor": {
                    "name": "validfor",
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationdate": {
                    "name": "creationdate",
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "name": "description",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "partyRevSharingModel": {
    "tableName": "PartyRevSharingModel",
    "endpoints": [
      {
        "operationId": "listPartyRevSharingModel",
        "path": "/partyRevSharingModel",
        "method": "get"
      },
      {
        "operationId": "createPartyRevSharingModel",
        "path": "/partyRevSharingModel",
        "method": "post"
      },
      {
        "operationId": "retrievePartyRevSharingModel",
        "path": "/partyRevSharingModel/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartyRevSharingModel",
        "path": "/partyRevSharingModel/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPartyRevSharingModel",
        "path": "/partyRevSharingModel/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "The name of party revenue sharing model"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "The description of PartyRevSharingModel"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "The PartyRevSharingModel associated party or partyRole",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "partyRevSharingModelItem": {
                "name": "partyRevSharingModelItem",
                "type": "array",
                "description": "The PartyRevSharingModel includes revenue share item related to specified party role",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "The name of party revenue sharing model"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "The description of PartyRevSharingModelItem"
                    },
                    "relatedParty": {
                      "name": "relatedParty",
                      "type": "object",
                      "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                    },
                    "partyAccount": {
                      "name": "partyAccount",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "Detailed description of the party account"
                        },
                        "status": {
                          "name": "status",
                          "type": "string",
                          "description": "The condition of the account, such as due, paid, in arrears."
                        }
                      }
                    },
                    "sharingModelItemInvolvement": {
                      "name": "sharingModelItemInvolvement",
                      "type": "array",
                      "description": "The PartyRevSharingModelItem involvements revenue share item related to products, ProductOffings or productOffingPrices",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "The name of party revenue sharing model involvement"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "The description of party revenue sharing model involvement"
                          },
                          "productOffering": {
                            "name": "productOffering",
                            "type": "array",
                            "description": "The PartyRevSharingModelItemInvolvement associated product offerings",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "version": {
                                  "name": "version",
                                  "type": "string",
                                  "description": "Version of the product offering"
                                }
                              }
                            }
                          },
                          "offeringPrice": {
                            "name": "offeringPrice",
                            "type": "array",
                            "description": "The PartyRevSharingModelItemInvolvement associated offering price(s)",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The name of party revenue sharing model involvement price"
                                },
                                "description": {
                                  "name": "description",
                                  "type": "string",
                                  "description": "The description of party revenue sharing model involvement price"
                                },
                                "productOfferingPrice": {
                                  "name": "productOfferingPrice",
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "name": "version",
                                      "type": "string",
                                      "description": "Version of the product offering price"
                                    }
                                  }
                                },
                                "partyRevSharingAlgorithm": {
                                  "name": "partyRevSharingAlgorithm",
                                  "type": "array",
                                  "description": "The PartyRevSharingModelInvolPrice associated algorithm(s)",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "description": "A PartyRevSharingAlgorithmRef reference",
                                    "properties": {}
                                  }
                                }
                              }
                            }
                          },
                          "agreementItem": {
                            "name": "agreementItem",
                            "type": "array",
                            "description": "The PartyRevSharingModelItemInvolvement associated agreement items",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "agreementName": {
                                  "name": "agreementName",
                                  "type": "string",
                                  "description": "Name of the related entity."
                                },
                                "agreementHref": {
                                  "name": "agreementHref",
                                  "type": "string",
                                  "description": "Reference of the related entity."
                                },
                                "@referredType": {
                                  "name": "@referredType",
                                  "type": "string",
                                  "description": "The actual type of the target instance when needed for disambiguation."
                                },
                                "agreementId": {
                                  "name": "agreementId",
                                  "type": "string",
                                  "description": "Unique identifier of a related entity."
                                },
                                "agreementItemId": {
                                  "name": "agreementItemId",
                                  "type": "string",
                                  "description": "Id of an item of a Agreement"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "agreement": {
                      "name": "agreement",
                      "type": "array",
                      "description": "The PartyRevSharingModelItem associated agreements",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "productSpecification": {
                "name": "productSpecification",
                "type": "array",
                "description": "The PartyRevSharingModel associated product specifications",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the product specification"
                    },
                    "targetProductSchema": {
                      "name": "targetProductSchema",
                      "type": "object",
                      "description": "The reference object to the schema and type of target product which is described by product specification",
                      "properties": {
                        "@type": {
                          "name": "@type",
                          "type": "string",
                          "description": "Class type of the target product"
                        },
                        "@schemaLocation": {
                          "name": "@schemaLocation",
                          "type": "string",
                          "description": "This field provides a link to the schema describing the target product",
                          "format": "uri"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "partyRevSharingReport": {
    "tableName": "PartyRevSharingReport",
    "endpoints": [
      {
        "operationId": "listPartyRevSharingReport",
        "path": "/partyRevSharingReport",
        "method": "get"
      },
      {
        "operationId": "createPartyRevSharingReport",
        "path": "/partyRevSharingReport",
        "method": "post"
      },
      {
        "operationId": "retrievePartyRevSharingReport",
        "path": "/partyRevSharingReport/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartyRevSharingReport",
        "path": "/partyRevSharingReport/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPartyRevSharingReport",
        "path": "/partyRevSharingReport/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "partyRevSharingModel": {
                "name": "partyRevSharingModel",
                "type": "object",
                "description": "A PartyRevSharingModelRef reference",
                "properties": {}
              },
              "cdrTransaction": {
                "name": "cdrTransaction",
                "type": "object",
                "description": "A CdrTransactionRef reference",
                "properties": {}
              },
              "partyRevSharingReportItem": {
                "name": "partyRevSharingReportItem",
                "type": "array",
                "description": "The PartyRevSharingReportItem list revenue share details related to the specified partner",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "partyRevSharingModelItem": {
                      "name": "partyRevSharingModelItem",
                      "type": "object",
                      "description": "Reference of a party revenue sharing model item.",
                      "properties": {
                        "revenueSharingModelName": {
                          "name": "revenueSharingModelName",
                          "type": "string",
                          "description": "Name of the related revenue sharing model."
                        },
                        "revenueSharingModelHref": {
                          "name": "revenueSharingModelHref",
                          "type": "string",
                          "description": "Reference of the related entity."
                        },
                        "@referredType": {
                          "name": "@referredType",
                          "type": "string",
                          "description": "The actual type of the target instance when needed for disambiguation."
                        },
                        "revenueSharingModelId": {
                          "name": "revenueSharingModelId",
                          "type": "string",
                          "description": "Unique identifier of a related entity."
                        },
                        "itemId": {
                          "name": "itemId",
                          "type": "string",
                          "description": "Id of an item of a revenue sharing model"
                        }
                      }
                    },
                    "relatedParty": {
                      "name": "relatedParty",
                      "type": "object",
                      "properties": {
                        "role": {
                          "name": "role",
                          "type": "string",
                          "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                        },
                        "partyOrPartyRole": {
                          "name": "partyOrPartyRole",
                          "type": "union",
                          "description": "",
                          "oneOf": [
                            {
                              "name": "partyOrPartyRole_variant_0",
                              "type": "object",
                              "description": "A Party reference",
                              "properties": {}
                            },
                            {
                              "name": "partyOrPartyRole_variant_1",
                              "type": "object",
                              "properties": {
                                "partyId": {
                                  "name": "partyId",
                                  "type": "string",
                                  "description": "The identifier of the engaged party that is linked to the PartyRole object."
                                },
                                "partyName": {
                                  "name": "partyName",
                                  "type": "string",
                                  "description": "The name of the engaged party that is linked to the PartyRole object."
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    "partyAccount": {
                      "name": "partyAccount",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "Detailed description of the party account"
                        },
                        "status": {
                          "name": "status",
                          "type": "string",
                          "description": "The condition of the account, such as due, paid, in arrears."
                        }
                      }
                    },
                    "cdrTransactionItem": {
                      "name": "cdrTransactionItem",
                      "type": "object",
                      "description": "Reference of Cdr transaction item.",
                      "properties": {
                        "transactionHref": {
                          "name": "transactionHref",
                          "type": "string",
                          "description": "Reference of the related entity."
                        },
                        "@referredType": {
                          "name": "@referredType",
                          "type": "string",
                          "description": "The actual type of the target instance when needed for disambiguation."
                        },
                        "transactionId": {
                          "name": "transactionId",
                          "type": "string",
                          "description": "Unique identifier of a related entity."
                        },
                        "transactionItemId": {
                          "name": "transactionItemId",
                          "type": "string",
                          "description": "Id of an item of a Cdr transaction"
                        }
                      }
                    },
                    "billPeriod": {
                      "name": "billPeriod",
                      "type": "object",
                      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                      "properties": {
                        "startDateTime": {
                          "name": "startDateTime",
                          "type": "string",
                          "description": "Start of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        },
                        "endDateTime": {
                          "name": "endDateTime",
                          "type": "string",
                          "description": "End of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        }
                      }
                    },
                    "sharingReportItemIDetail": {
                      "name": "sharingReportItemIDetail",
                      "type": "array",
                      "description": "The PartyRevSharingReportItemDetail list revenue share details related to the specified partner",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "partyRevSharingModelInvolPrice": {
                            "name": "partyRevSharingModelInvolPrice",
                            "type": "object",
                            "properties": {
                              "revenueSharingModelId": {
                                "name": "revenueSharingModelId",
                                "type": "string",
                                "description": "Unique identifier of a related revenue sharing model."
                              },
                              "revenueSharingModelItemId": {
                                "name": "revenueSharingModelItemId",
                                "type": "string",
                                "description": "Unique identifier of a related revenue sharing model item."
                              },
                              "involPriceId": {
                                "name": "involPriceId",
                                "type": "string",
                                "description": "Id of a price of a revenue sharing model item"
                              }
                            }
                          },
                          "product": {
                            "name": "product",
                            "type": "array",
                            "description": "The partner product of revenue sharing",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "description": "A Product reference",
                              "properties": {}
                            }
                          },
                          "productOffering": {
                            "name": "productOffering",
                            "type": "object",
                            "properties": {
                              "version": {
                                "name": "version",
                                "type": "string",
                                "description": "Version of the product offering"
                              }
                            }
                          },
                          "productOfferingPrice": {
                            "name": "productOfferingPrice",
                            "type": "object",
                            "properties": {
                              "version": {
                                "name": "version",
                                "type": "string",
                                "description": "Version of the product offering price"
                              }
                            }
                          },
                          "partyRevSharingAlgorithm": {
                            "name": "partyRevSharingAlgorithm",
                            "type": "array",
                            "description": "The PartyRevSharingModelInvolPrice associated algorithm(s)",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "description": "A PartyRevSharingAlgorithmRef reference",
                              "properties": {}
                            }
                          },
                          "money": {
                            "name": "money",
                            "type": "object",
                            "description": "A base / value business entity used to represent money",
                            "properties": {
                              "unit": {
                                "name": "unit",
                                "type": "string",
                                "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                              },
                              "value": {
                                "name": "value",
                                "type": "number",
                                "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                                "format": "float"
                              }
                            }
                          },
                          "status": {
                            "name": "status",
                            "type": "string",
                            "description": "The status of party revenue Share report item detail"
                          },
                          "createDate": {
                            "name": "createDate",
                            "type": "string",
                            "description": "Date and time when the detail was created",
                            "format": "date-time"
                          },
                          "lastUpdate": {
                            "name": "lastUpdate",
                            "type": "string",
                            "description": "Date and time when the detail was last updated",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "money": {
                      "name": "money",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "bill": {
                      "name": "bill",
                      "type": "object",
                      "description": "Bill reference.",
                      "properties": {}
                    },
                    "payment": {
                      "name": "payment",
                      "type": "object",
                      "description": "If an immediate payment has been done at the product order submission, the payment information are captured and stored (as a reference) in the order.",
                      "properties": {}
                    },
                    "status": {
                      "name": "status",
                      "type": "string",
                      "description": "The status of party revenue Share report item detail"
                    },
                    "createDate": {
                      "name": "createDate",
                      "type": "string",
                      "description": "Date and time when the detail was created",
                      "format": "date-time"
                    },
                    "lastUpdate": {
                      "name": "lastUpdate",
                      "type": "string",
                      "description": "Date and time when the detail was last updated",
                      "format": "date-time"
                    }
                  }
                }
              },
              "money": {
                "name": "money",
                "type": "object",
                "description": "Reference to Money"
              },
              "createDate": {
                "name": "createDate",
                "type": "string",
                "description": "Date and time when the detail was created",
                "format": "date-time"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time when the detail was last updated",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "partyRevSharingAlgorithm": {
    "tableName": "PartyRevSharingAlgorithm",
    "endpoints": [
      {
        "operationId": "listPartyRevSharingAlgorithm",
        "path": "/partyRevSharingAlgorithm",
        "method": "get"
      },
      {
        "operationId": "createPartyRevSharingAlgorithm",
        "path": "/partyRevSharingAlgorithm",
        "method": "post"
      },
      {
        "operationId": "retrievePartyRevSharingAlgorithm",
        "path": "/partyRevSharingAlgorithm/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartyRevSharingAlgorithm",
        "path": "/partyRevSharingAlgorithm/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPartyRevSharingAlgorithm",
        "path": "/partyRevSharingAlgorithm/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "The name of party revenue sharing algorithm"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "The description of party revenue sharing algorithm"
              },
              "policy": {
                "name": "policy",
                "type": "array",
                "description": "The policy type algorithm to calculate revenue share",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "unique identifier"
                    },
                    "href": {
                      "name": "href",
                      "type": "string",
                      "description": "Hyperlink reference"
                    },
                    "version": {
                      "name": "version",
                      "type": "string"
                    },
                    "@type": {
                      "name": "@type",
                      "type": "string",
                      "description": "When sub-classing, this defines the sub-class Extensible name"
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string",
                      "description": "When sub-classing, this defines the super-class"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string",
                      "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                    }
                  }
                }
              },
              "conditionVariable": {
                "name": "conditionVariable",
                "type": "array",
                "description": "The policy condition variables of the policy to calculate revenue share",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "value": {
                      "name": "value",
                      "type": "string",
                      "description": "The value of variable"
                    },
                    "policyCondition": {
                      "name": "policyCondition",
                      "type": "object",
                      "properties": {
                        "@type": {
                          "name": "@type",
                          "type": "string"
                        }
                      }
                    },
                    "policyConditionVariable": {
                      "name": "policyConditionVariable",
                      "type": "object",
                      "properties": {
                        "@type": {
                          "name": "@type",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "actionVariable": {
                "name": "actionVariable",
                "type": "array",
                "description": "The policy action variables of the policy to calculate revenue share",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "value": {
                      "name": "value",
                      "type": "string",
                      "description": "The value of variable"
                    },
                    "policyAction": {
                      "name": "policyAction",
                      "type": "object",
                      "properties": {
                        "@type": {
                          "name": "@type",
                          "type": "string"
                        }
                      }
                    },
                    "policyActionVariable": {
                      "name": "policyActionVariable",
                      "type": "object",
                      "description": "Reference to PolicyVariableRef"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "cdrTransaction": {
    "tableName": "CdrTransaction",
    "endpoints": [
      {
        "operationId": "listCdrTransaction",
        "path": "/cdrTransaction",
        "method": "get"
      },
      {
        "operationId": "createCdrTransaction",
        "path": "/cdrTransaction",
        "method": "post"
      },
      {
        "operationId": "retrieveCdrTransaction",
        "path": "/cdrTransaction/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteCdrTransaction",
        "path": "/cdrTransaction/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchCdrTransaction",
        "path": "/cdrTransaction/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "The associated party or partyRole",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Possible values for the state of the Cdr transaction",
                "enum": [
                  "charged",
                  "billed",
                  "paid",
                  "completed"
                ]
              },
              "requestedInitialState": {
                "name": "requestedInitialState",
                "type": "string",
                "description": "Possible values for the requested initial state of the transaction from client- by default created is considered",
                "enum": [
                  "charged"
                ]
              },
              "cancellationDate": {
                "name": "cancellationDate",
                "type": "string",
                "description": "Date when the transaction is cancelled. This is used when transaction is cancelled. ",
                "format": "date-time"
              },
              "cancellationReason": {
                "name": "cancellationReason",
                "type": "string",
                "description": "Reason why the transaction is cancelled. This is used when transaction is cancelled. "
              },
              "channel": {
                "name": "channel",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "channel": {
                      "name": "channel",
                      "type": "object",
                      "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
                      "properties": {}
                    }
                  }
                }
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the transaction"
              },
              "note": {
                "name": "note",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "transactionItem": {
                "name": "transactionItem",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "action": {
                      "name": "action",
                      "type": "string",
                      "description": "action to be performed on the entity managed by the item",
                      "enum": [
                        "add",
                        "modify",
                        "delete",
                        "noChange"
                      ]
                    },
                    "cdr": {
                      "name": "cdr",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "An occurrence of employing a product for its intended purpose with all rating details",
                        "properties": {
                          "cdrDate": {
                            "name": "cdrDate",
                            "type": "string",
                            "description": "Date of cdr",
                            "format": "date-time"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "Description of cdr"
                          },
                          "status": {
                            "name": "status",
                            "type": "string",
                            "description": "Possible values for the status of the Cdr",
                            "enum": [
                              "settlement",
                              "charging",
                              "charged"
                            ]
                          },
                          "cdrType": {
                            "name": "cdrType",
                            "type": "string",
                            "description": "Type of cdr"
                          },
                          "cdrCharacteristic": {
                            "name": "cdrCharacteristic",
                            "type": "array",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "description": "Provides the value of a given characteristic",
                              "properties": {}
                            }
                          },
                          "cdrDirectionType": {
                            "name": "cdrDirectionType",
                            "type": "string",
                            "description": "Possible values for the Direction of the Cdr",
                            "enum": [
                              "charge",
                              "refund"
                            ]
                          },
                          "relatedParty": {
                            "name": "relatedParty",
                            "type": "object",
                            "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                          },
                          "ratedCdr": {
                            "name": "ratedCdr",
                            "type": "array",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "description": "An occurrence of employing a cdr for its intended purpose with all rating details",
                              "properties": {
                                "isBilled": {
                                  "name": "isBilled",
                                  "type": "boolean",
                                  "description": "Boolean indicating if usage have been billed or not"
                                },
                                "offerTariffType": {
                                  "name": "offerTariffType",
                                  "type": "string",
                                  "description": "Type of tariff applied"
                                },
                                "ratingAmountType": {
                                  "name": "ratingAmountType",
                                  "type": "string",
                                  "description": "Type of amount"
                                },
                                "ratingDate": {
                                  "name": "ratingDate",
                                  "type": "string",
                                  "description": "Date of usage rating",
                                  "format": "date-time"
                                },
                                "isTaxExempt": {
                                  "name": "isTaxExempt",
                                  "type": "boolean",
                                  "description": "Indicates if the rated amount is exempt of tax"
                                },
                                "productRef": {
                                  "name": "productRef",
                                  "type": "object",
                                  "description": "A Product reference",
                                  "properties": {}
                                },
                                "taxExcludedRatingAmount": {
                                  "name": "taxExcludedRatingAmount",
                                  "type": "object",
                                  "description": "A base / value business entity used to represent money",
                                  "properties": {
                                    "unit": {
                                      "name": "unit",
                                      "type": "string",
                                      "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                                    },
                                    "value": {
                                      "name": "value",
                                      "type": "number",
                                      "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                                      "format": "float"
                                    }
                                  }
                                },
                                "taxIncludedRatingAmount": {
                                  "name": "taxIncludedRatingAmount",
                                  "type": "object",
                                  "description": "Reference to Money"
                                },
                                "taxRate": {
                                  "name": "taxRate",
                                  "type": "number",
                                  "description": "Tax rate",
                                  "format": "float"
                                }
                              }
                            }
                          },
                          "isBilled": {
                            "name": "isBilled",
                            "type": "boolean",
                            "description": "Boolean indicating if usage have been billed or not"
                          },
                          "offerTariffType": {
                            "name": "offerTariffType",
                            "type": "string",
                            "description": "Type of tariff applied"
                          },
                          "ratingAmountType": {
                            "name": "ratingAmountType",
                            "type": "string",
                            "description": "Type of amount"
                          },
                          "amount": {
                            "name": "amount",
                            "type": "object",
                            "description": "Reference to Money"
                          },
                          "ratingDate": {
                            "name": "ratingDate",
                            "type": "string",
                            "description": "Date of usage rating",
                            "format": "date-time"
                          },
                          "isTaxExempt": {
                            "name": "isTaxExempt",
                            "type": "boolean",
                            "description": "Indicates if the rated amount is exempt of tax"
                          },
                          "productRef": {
                            "name": "productRef",
                            "type": "object",
                            "description": "Reference to ProductRef"
                          },
                          "taxExcludedRatingAmount": {
                            "name": "taxExcludedRatingAmount",
                            "type": "object",
                            "description": "Reference to Money"
                          },
                          "taxIncludedRatingAmount": {
                            "name": "taxIncludedRatingAmount",
                            "type": "object",
                            "description": "Reference to Money"
                          },
                          "taxRate": {
                            "name": "taxRate",
                            "type": "number",
                            "description": "Tax rate",
                            "format": "float"
                          }
                        }
                      }
                    },
                    "relatedParty": {
                      "name": "relatedParty",
                      "type": "object",
                      "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                    },
                    "bill": {
                      "name": "bill",
                      "type": "array",
                      "description": "The bills related to this report item",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Bill reference.",
                        "properties": {}
                      }
                    },
                    "payment": {
                      "name": "payment",
                      "type": "array",
                      "description": "The payments related to this report item",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "If an immediate payment has been done at the product order submission, the payment information are captured and stored (as a reference) in the order.",
                        "properties": {}
                      }
                    },
                    "state": {
                      "name": "state",
                      "type": "string",
                      "description": "Possible values for the state of the party revenue sharing transaction",
                      "enum": [
                        "charged",
                        "billed",
                        "paid",
                        "completed"
                      ]
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the transaction item (generally it is a sequence number 01, 02, 03, ...)"
                    }
                  }
                }
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date and time when the ProductOrder was created",
                "format": "date-time"
              },
              "completionDate": {
                "name": "completionDate",
                "type": "string",
                "description": "Date when the ProductOrder was completed",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "dunningScenario": {
    "tableName": "DunningScenario",
    "endpoints": [
      {
        "operationId": "listDunningScenario",
        "path": "/dunningScenario",
        "method": "get"
      },
      {
        "operationId": "createDunningScenario",
        "path": "/dunningScenario",
        "method": "post"
      },
      {
        "operationId": "retrieveDunningScenario",
        "path": "/dunningScenario/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteDunningScenario",
        "path": "/dunningScenario/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchDunningScenario",
        "path": "/dunningScenario/{id}",
        "method": "patch"
      }
    ]
  },
  "dunningRule": {
    "tableName": "DunningRule",
    "endpoints": [
      {
        "operationId": "listDunningRule",
        "path": "/dunningRule",
        "method": "get"
      },
      {
        "operationId": "createDunningRule",
        "path": "/dunningRule",
        "method": "post"
      },
      {
        "operationId": "retrieveDunningRule",
        "path": "/dunningRule/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteDunningRule",
        "path": "/dunningRule/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchDunningRule",
        "path": "/dunningRule/{id}",
        "method": "patch"
      }
    ]
  },
  "dunningCase": {
    "tableName": "DunningCase",
    "endpoints": [
      {
        "operationId": "listDunningCase",
        "path": "/dunningCase",
        "method": "get"
      },
      {
        "operationId": "createDunningCase",
        "path": "/dunningCase",
        "method": "post"
      },
      {
        "operationId": "retrieveDunningCase",
        "path": "/dunningCase/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteDunningCase",
        "path": "/dunningCase/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchDunningCase",
        "path": "/dunningCase/{id}",
        "method": "patch"
      }
    ]
  },
  "serviceUsage": {
    "tableName": "ServiceUsage",
    "endpoints": [
      {
        "operationId": "listServiceUsage",
        "path": "/serviceUsage",
        "method": "get"
      },
      {
        "operationId": "createServiceUsage",
        "path": "/serviceUsage",
        "method": "post"
      },
      {
        "operationId": "retrieveServiceUsage",
        "path": "/serviceUsage/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteServiceUsage",
        "path": "/serviceUsage/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchServiceUsage",
        "path": "/serviceUsage/{id}",
        "method": "patch"
      }
    ]
  },
  "metadataCatalog": {
    "tableName": "MetadataCatalog",
    "endpoints": [
      {
        "operationId": "listMetadataCatalog",
        "path": "/metadataCatalog",
        "method": "get"
      },
      {
        "operationId": "createMetadataCatalog",
        "path": "/metadataCatalog",
        "method": "post"
      },
      {
        "operationId": "retrieveMetadataCatalog",
        "path": "/metadataCatalog/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteMetadataCatalog",
        "path": "/metadataCatalog/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchMetadataCatalog",
        "path": "/metadataCatalog/{id}",
        "method": "patch"
      }
    ]
  },
  "metadataCategory": {
    "tableName": "MetadataCategory",
    "endpoints": [
      {
        "operationId": "listMetadataCategory",
        "path": "/metadataCategory",
        "method": "get"
      },
      {
        "operationId": "createMetadataCategory",
        "path": "/metadataCategory",
        "method": "post"
      },
      {
        "operationId": "retrieveMetadataCategory",
        "path": "/metadataCategory/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteMetadataCategory",
        "path": "/metadataCategory/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchMetadataCategory",
        "path": "/metadataCategory/{id}",
        "method": "patch"
      }
    ]
  },
  "metadataCatalogItem": {
    "tableName": "MetadataCatalogItem",
    "endpoints": [
      {
        "operationId": "listMetadataCatalogItem",
        "path": "/metadataCatalogItem",
        "method": "get"
      },
      {
        "operationId": "createMetadataCatalogItem",
        "path": "/metadataCatalogItem",
        "method": "post"
      },
      {
        "operationId": "retrieveMetadataCatalogItem",
        "path": "/metadataCatalogItem/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteMetadataCatalogItem",
        "path": "/metadataCatalogItem/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchMetadataCatalogItem",
        "path": "/metadataCatalogItem/{id}",
        "method": "patch"
      }
    ]
  },
  "metadataSpecification": {
    "tableName": "MetadataSpecification",
    "endpoints": [
      {
        "operationId": "listMetadataSpecification",
        "path": "/metadataSpecification",
        "method": "get"
      },
      {
        "operationId": "createMetadataSpecification",
        "path": "/metadataSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveMetadataSpecification",
        "path": "/metadataSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteMetadataSpecification",
        "path": "/metadataSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchMetadataSpecification",
        "path": "/metadataSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "incident": {
    "tableName": "Incident",
    "endpoints": [
      {
        "operationId": "listIncident",
        "path": "/incident",
        "method": "get"
      },
      {
        "operationId": "createIncident",
        "path": "/incident",
        "method": "post"
      },
      {
        "operationId": "retrieveIncident",
        "path": "/incident/{id}",
        "method": "get"
      }
    ]
  },
  "diagnoseIncident": {
    "tableName": "DiagnoseIncident",
    "endpoints": [
      {
        "operationId": "listDiagnoseIncident",
        "path": "/diagnoseIncident",
        "method": "get"
      },
      {
        "operationId": "createDiagnoseIncident",
        "path": "/diagnoseIncident",
        "method": "post"
      },
      {
        "operationId": "retrieveDiagnoseIncident",
        "path": "/diagnoseIncident/{id}",
        "method": "get"
      }
    ]
  },
  "resolveIncident": {
    "tableName": "ResolveIncident",
    "endpoints": [
      {
        "operationId": "listResolveIncident",
        "path": "/resolveIncident",
        "method": "get"
      },
      {
        "operationId": "createResolveIncident",
        "path": "/resolveIncident",
        "method": "post"
      },
      {
        "operationId": "retrieveResolveIncident",
        "path": "/resolveIncident/{id}",
        "method": "get"
      }
    ]
  },
  "managedPolicy": {
    "tableName": "ManagedPolicy",
    "endpoints": [
      {
        "operationId": "listManagedPolicy",
        "path": "/managedPolicy",
        "method": "get"
      },
      {
        "operationId": "createManagedPolicy",
        "path": "/managedPolicy",
        "method": "post"
      },
      {
        "operationId": "retrieveManagedPolicy",
        "path": "/managedPolicy/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteManagedPolicy",
        "path": "/managedPolicy/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchManagedPolicy",
        "path": "/managedPolicy/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the Policy Entity"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Version of the Policy Entity"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the Policy Entity"
              },
              "lifecycleState": {
                "name": "lifecycleState",
                "type": "string",
                "description": "Lifecycle state of the Policy Entity",
                "enum": [
                  "inDesign",
                  "designed",
                  "active",
                  "retired",
                  "rejected"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "Comments related to Policy Entity",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "managedPolicyCondition": {
    "tableName": "ManagedPolicyCondition",
    "endpoints": [
      {
        "operationId": "listManagedPolicyCondition",
        "path": "/managedPolicyCondition",
        "method": "get"
      },
      {
        "operationId": "createManagedPolicyCondition",
        "path": "/managedPolicyCondition",
        "method": "post"
      },
      {
        "operationId": "retrieveManagedPolicyCondition",
        "path": "/managedPolicyCondition/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteManagedPolicyCondition",
        "path": "/managedPolicyCondition/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchManagedPolicyCondition",
        "path": "/managedPolicyCondition/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the Policy Entity"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Version of the Policy Entity"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the Policy Entity"
              },
              "lifecycleState": {
                "name": "lifecycleState",
                "type": "string",
                "description": "Lifecycle state of the Policy Entity",
                "enum": [
                  "inDesign",
                  "designed",
                  "active",
                  "retired",
                  "rejected"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "Comments related to Policy Entity",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "managedPolicyEvent": {
    "tableName": "ManagedPolicyEvent",
    "endpoints": [
      {
        "operationId": "listManagedPolicyEvent",
        "path": "/managedPolicyEvent",
        "method": "get"
      },
      {
        "operationId": "createManagedPolicyEvent",
        "path": "/managedPolicyEvent",
        "method": "post"
      },
      {
        "operationId": "retrieveManagedPolicyEvent",
        "path": "/managedPolicyEvent/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteManagedPolicyEvent",
        "path": "/managedPolicyEvent/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchManagedPolicyEvent",
        "path": "/managedPolicyEvent/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the Policy Entity"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Version of the Policy Entity"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the Policy Entity"
              },
              "lifecycleState": {
                "name": "lifecycleState",
                "type": "string",
                "description": "Lifecycle state of the Policy Entity",
                "enum": [
                  "inDesign",
                  "designed",
                  "active",
                  "retired",
                  "rejected"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "Comments related to Policy Entity",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "managedPolicyExpression": {
    "tableName": "ManagedPolicyExpression",
    "endpoints": [
      {
        "operationId": "listManagedPolicyExpression",
        "path": "/managedPolicyExpression",
        "method": "get"
      },
      {
        "operationId": "createManagedPolicyExpression",
        "path": "/managedPolicyExpression",
        "method": "post"
      },
      {
        "operationId": "retrieveManagedPolicyExpression",
        "path": "/managedPolicyExpression/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteManagedPolicyExpression",
        "path": "/managedPolicyExpression/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchManagedPolicyExpression",
        "path": "/managedPolicyExpression/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the Policy Entity"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Version of the Policy Entity"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the Policy Entity"
              },
              "lifecycleState": {
                "name": "lifecycleState",
                "type": "string",
                "description": "Lifecycle state of the Policy Entity",
                "enum": [
                  "inDesign",
                  "designed",
                  "active",
                  "retired",
                  "rejected"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "Comments related to Policy Entity",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "expression": {
                "name": "expression",
                "type": "string",
                "description": "Expression language command"
              },
              "expressionLanguage": {
                "name": "expressionLanguage",
                "type": "string",
                "description": "Defines expression language used to build expression"
              }
            }
          }
        }
      }
    }
  },
  "managedPolicyOperator": {
    "tableName": "ManagedPolicyOperator",
    "endpoints": [
      {
        "operationId": "listManagedPolicyOperator",
        "path": "/managedPolicyOperator",
        "method": "get"
      },
      {
        "operationId": "createManagedPolicyOperator",
        "path": "/managedPolicyOperator",
        "method": "post"
      },
      {
        "operationId": "retrieveManagedPolicyOperator",
        "path": "/managedPolicyOperator/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteManagedPolicyOperator",
        "path": "/managedPolicyOperator/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchManagedPolicyOperator",
        "path": "/managedPolicyOperator/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the Policy Entity"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Version of the Policy Entity"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the Policy Entity"
              },
              "lifecycleState": {
                "name": "lifecycleState",
                "type": "string",
                "description": "Lifecycle state of the Policy Entity",
                "enum": [
                  "inDesign",
                  "designed",
                  "active",
                  "retired",
                  "rejected"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "Comments related to Policy Entity",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "variable": {
                "name": "variable",
                "type": "union",
                "description": "Container for PolicyVariable Reference or unmanaged PolicyVariable object",
                "oneOf": [
                  {
                    "name": "variable_variant_0",
                    "type": "object",
                    "properties": {
                      "id": {
                        "name": "id",
                        "type": "string",
                        "description": "Identifier of the referred entity."
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "Name of the referred entity."
                      },
                      "@referredType": {
                        "name": "@referredType",
                        "type": "string",
                        "description": "The actual type of the target instance when needed for disambiguation."
                      },
                      "@type": {
                        "name": "@type",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "name": "variable_variant_1",
                    "type": "union",
                    "description": "A PolicyVariable is an entity for modeling different types of variables that can be used to form a PolicyCondition statement. It can be static or dynamic.",
                    "oneOf": [
                      {
                        "name": "variable_variant_1_variant_0",
                        "type": "object",
                        "description": "A PolicyVariableDynamic is a variable that is resolved from event, environment or subject",
                        "properties": {
                          "@type": {
                            "name": "@type",
                            "type": "string"
                          },
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "integer",
                              "boolean",
                              "object",
                              "array"
                            ]
                          },
                          "format": {
                            "name": "format",
                            "type": "string"
                          },
                          "resolver": {
                            "name": "resolver",
                            "type": "array",
                            "description": "Specification of a varaible resolver",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "description": "A PolicyVariableResolver is a definition that describes from where is DynamicVariable fetched",
                              "properties": {
                                "@type": {
                                  "name": "@type",
                                  "type": "string"
                                },
                                "source": {
                                  "name": "source",
                                  "type": "string",
                                  "enum": [
                                    "event",
                                    "environment",
                                    "subject",
                                    "result"
                                  ]
                                },
                                "path": {
                                  "name": "path",
                                  "type": "string",
                                  "description": "JSONPath of a variable"
                                },
                                "priority": {
                                  "name": "priority",
                                  "type": "integer",
                                  "description": "Sequence value when PolicyVariableResolver has to be executed in a specific order. Higher value means greater priority. Priority is not absolute, but relative in hierarchy."
                                },
                                "constraint": {
                                  "name": "constraint",
                                  "type": "union",
                                  "description": "Container for PolicyConstraint Reference or unmanaged PolicyConstraint object",
                                  "oneOf": [
                                    {
                                      "name": "constraint_variant_0",
                                      "type": "object",
                                      "properties": {
                                        "@type": {
                                          "name": "@type",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "name": "constraint_variant_1",
                                      "type": "union",
                                      "description": "Any kind of condition that needs to be confirmed in order to proceed with next step",
                                      "oneOf": [
                                        {
                                          "name": "constraint_variant_1_variant_0",
                                          "type": "object",
                                          "description": "Constraint based on provided list of PolicyEvent references. If PolicyEvent type is found in the list then constraint is validated truthfully",
                                          "properties": {
                                            "@type": {
                                              "name": "@type",
                                              "type": "string"
                                            },
                                            "policyEventType": {
                                              "name": "policyEventType",
                                              "type": "array",
                                              "description": "List of PolicyEvent types",
                                              "items": {
                                                "name": "items",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "name": "constraint_variant_1_variant_1",
                                          "type": "union",
                                          "description": "A PolicyCondition clause is an aggregation of individual PolicyConditions, and is treated as an atomic object that is aggregated by a PolicyRule. It is represented as a Boolean expression, and defines the necessary state and/or prerequisites that define whether the actions aggregated by that same PolicyRule should be performed. If PolicyCondition is successfully resolved then it must hold value TRUE or FALSE. Non successfull resolution does not contain any boolean value",
                                          "oneOf": [
                                            {
                                              "name": "constraint_variant_1_variant_1_variant_0",
                                              "type": "object",
                                              "description": "PolicyCondition that executes only one statement",
                                              "properties": {
                                                "@type": {
                                                  "name": "@type",
                                                  "type": "string"
                                                },
                                                "isResultNegated": {
                                                  "name": "isResultNegated",
                                                  "type": "boolean"
                                                },
                                                "statement": {
                                                  "name": "statement",
                                                  "type": "union",
                                                  "description": "PolicyStatement is a definition of a: \n * query statement that resolves to boolean value or \n * command statement that is changing a value",
                                                  "oneOf": [
                                                    {
                                                      "name": "statement_variant_0",
                                                      "type": "union",
                                                      "description": "Container for PolicyOperator Reference or unmanaged PolicyOperator object",
                                                      "oneOf": [
                                                        {
                                                          "name": "statement_variant_0_variant_0",
                                                          "type": "object",
                                                          "properties": {
                                                            "@type": {
                                                              "name": "@type",
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "name": "statement_variant_0_variant_1",
                                                          "type": "object",
                                                          "description": "Reference to PolicyOperator"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "name": "statement_variant_1",
                                                      "type": "union",
                                                      "description": "Container for PolicyExpression Reference or unmanaged PolicyExpression object",
                                                      "oneOf": [
                                                        {
                                                          "name": "statement_variant_1_variant_0",
                                                          "type": "object",
                                                          "properties": {
                                                            "@type": {
                                                              "name": "@type",
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "name": "statement_variant_1_variant_1",
                                                          "type": "object",
                                                          "description": "PolicyExpression is a constraint based on text expression and parsed by an Expression Language (SpEL, JS, Groovy, FEEL, ...)",
                                                          "properties": {
                                                            "@type": {
                                                              "name": "@type",
                                                              "type": "string"
                                                            },
                                                            "expression": {
                                                              "name": "expression",
                                                              "type": "string",
                                                              "description": "Expression language command"
                                                            },
                                                            "expressionLanguage": {
                                                              "name": "expressionLanguage",
                                                              "type": "string",
                                                              "description": "Defines expression language used to build expression"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "name": "constraint_variant_1_variant_1_variant_1",
                                              "type": "object",
                                              "description": "PolicyCondition that executes one or many PolicyConditions, applying condition combination logic",
                                              "properties": {
                                                "@type": {
                                                  "name": "@type",
                                                  "type": "string"
                                                },
                                                "condition": {
                                                  "name": "condition",
                                                  "type": "array",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "union",
                                                    "description": "Container for PolicyCondition Reference or unmanaged PolicyCondition object",
                                                    "oneOf": [
                                                      {
                                                        "name": "items_variant_0",
                                                        "type": "object",
                                                        "properties": {
                                                          "@type": {
                                                            "name": "@type",
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": "items_variant_1",
                                                        "type": "object",
                                                        "description": "Reference to PolicyCondition"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "conditionCombinationLogic": {
                                                  "name": "conditionCombinationLogic",
                                                  "type": "string",
                                                  "description": "Following combination logic is applied: \n * anyOf - if ANY condition resolves to TRUE, end result is TRUE \n * allOf - if ALL conditions resolves to TRUE, end result is TRUE \n * oneOf - if exactly ONE condition resolves to TRUE, end result is TRUE \n * none - if NONE condition resolves to TRUE, end result is TRUE",
                                                  "enum": [
                                                    "anyOf",
                                                    "allOf",
                                                    "oneOf",
                                                    "none"
                                                  ]
                                                },
                                                "isResultNegated": {
                                                  "name": "isResultNegated",
                                                  "type": "boolean"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "name": "variable_variant_1_variant_1",
                        "type": "object",
                        "description": "A PolicyVariableStatic is a variable that is ",
                        "properties": {
                          "@type": {
                            "name": "@type",
                            "type": "string"
                          },
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "integer",
                              "boolean",
                              "object",
                              "array"
                            ]
                          },
                          "format": {
                            "name": "format",
                            "type": "string"
                          },
                          "value": {
                            "name": "value",
                            "type": "object"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "managedPolicyVariable": {
    "tableName": "ManagedPolicyVariable",
    "endpoints": [
      {
        "operationId": "listManagedPolicyVariable",
        "path": "/managedPolicyVariable",
        "method": "get"
      },
      {
        "operationId": "createManagedPolicyVariable",
        "path": "/managedPolicyVariable",
        "method": "post"
      },
      {
        "operationId": "retrieveManagedPolicyVariable",
        "path": "/managedPolicyVariable/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteManagedPolicyVariable",
        "path": "/managedPolicyVariable/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchManagedPolicyVariable",
        "path": "/managedPolicyVariable/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the Policy Entity"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Version of the Policy Entity"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the Policy Entity"
              },
              "lifecycleState": {
                "name": "lifecycleState",
                "type": "string",
                "description": "Lifecycle state of the Policy Entity",
                "enum": [
                  "inDesign",
                  "designed",
                  "active",
                  "retired",
                  "rejected"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "Comments related to Policy Entity",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "managedPolicyAction": {
    "tableName": "ManagedPolicyAction",
    "endpoints": [
      {
        "operationId": "listManagedPolicyAction",
        "path": "/managedPolicyAction",
        "method": "get"
      },
      {
        "operationId": "createManagedPolicyAction",
        "path": "/managedPolicyAction",
        "method": "post"
      },
      {
        "operationId": "retrieveManagedPolicyAction",
        "path": "/managedPolicyAction/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteManagedPolicyAction",
        "path": "/managedPolicyAction/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchManagedPolicyAction",
        "path": "/managedPolicyAction/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the Policy Entity"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Version of the Policy Entity"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the Policy Entity"
              },
              "lifecycleState": {
                "name": "lifecycleState",
                "type": "string",
                "description": "Lifecycle state of the Policy Entity",
                "enum": [
                  "inDesign",
                  "designed",
                  "active",
                  "retired",
                  "rejected"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "Comments related to Policy Entity",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "managedPolicyConstraint": {
    "tableName": "ManagedPolicyConstraint",
    "endpoints": [
      {
        "operationId": "listManagedPolicyConstraint",
        "path": "/managedPolicyConstraint",
        "method": "get"
      },
      {
        "operationId": "createManagedPolicyConstraint",
        "path": "/managedPolicyConstraint",
        "method": "post"
      },
      {
        "operationId": "retrieveManagedPolicyConstraint",
        "path": "/managedPolicyConstraint/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteManagedPolicyConstraint",
        "path": "/managedPolicyConstraint/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchManagedPolicyConstraint",
        "path": "/managedPolicyConstraint/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the Policy Entity"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Version of the Policy Entity"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the Policy Entity"
              },
              "lifecycleState": {
                "name": "lifecycleState",
                "type": "string",
                "description": "Lifecycle state of the Policy Entity",
                "enum": [
                  "inDesign",
                  "designed",
                  "active",
                  "retired",
                  "rejected"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "Comments related to Policy Entity",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "policyDomain": {
    "tableName": "PolicyDomain",
    "endpoints": [
      {
        "operationId": "listPolicyDomain",
        "path": "/policyDomain",
        "method": "get"
      },
      {
        "operationId": "createPolicyDomain",
        "path": "/policyDomain",
        "method": "post"
      },
      {
        "operationId": "retrievePolicyDomain",
        "path": "/policyDomain/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePolicyDomain",
        "path": "/policyDomain/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPolicyDomain",
        "path": "/policyDomain/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the Policy Entity"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Version of the Policy Entity"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the Policy Entity"
              },
              "lifecycleState": {
                "name": "lifecycleState",
                "type": "string",
                "description": "Lifecycle state of the Policy Entity",
                "enum": [
                  "inDesign",
                  "designed",
                  "active",
                  "retired",
                  "rejected"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "Comments related to Policy Entity",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "scopedManagedEntity": {
                "name": "scopedManagedEntity",
                "type": "array",
                "description": "List of entities to which this PolicyDomain applies",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference schema .",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the referred entity."
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the referred entity."
                    },
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string",
                      "description": "The actual type of the target instance when needed for disambiguation."
                    }
                  }
                }
              },
              "subDomainRef": {
                "name": "subDomainRef",
                "type": "array",
                "description": "List of child PolicyDomains. PolicyDomain can have many child Policy Domains, but one child PolicyDomain can only have one parent PolicyDomain",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to Reference"
                }
              }
            }
          }
        }
      }
    }
  },
  "policyCatalog": {
    "tableName": "PolicyCatalog",
    "endpoints": [
      {
        "operationId": "listPolicyCatalog",
        "path": "/policyCatalog",
        "method": "get"
      },
      {
        "operationId": "createPolicyCatalog",
        "path": "/policyCatalog",
        "method": "post"
      },
      {
        "operationId": "retrievePolicyCatalog",
        "path": "/policyCatalog/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePolicyCatalog",
        "path": "/policyCatalog/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPolicyCatalog",
        "path": "/policyCatalog/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the Policy Entity"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Version of the Policy Entity"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the Policy Entity"
              },
              "lifecycleState": {
                "name": "lifecycleState",
                "type": "string",
                "description": "Lifecycle state of the Policy Entity",
                "enum": [
                  "inDesign",
                  "designed",
                  "active",
                  "retired",
                  "rejected"
                ]
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "Comments related to Policy Entity",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "policyDomainFilter": {
                "name": "policyDomainFilter",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference schema .",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the referred entity."
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the referred entity."
                    },
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string",
                      "description": "The actual type of the target instance when needed for disambiguation."
                    }
                  }
                }
              },
              "policy": {
                "name": "policy",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Managed Policy",
                  "properties": {}
                }
              },
              "policyEvent": {
                "name": "policyEvent",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Managed PolicyEvent",
                  "properties": {}
                }
              },
              "policyCondition": {
                "name": "policyCondition",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Managed PolicyCondition",
                  "properties": {}
                }
              },
              "policyExpression": {
                "name": "policyExpression",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Managed PolicyExpression",
                  "properties": {
                    "@type": {
                      "name": "@type",
                      "type": "string"
                    },
                    "expression": {
                      "name": "expression",
                      "type": "string",
                      "description": "Expression language command"
                    },
                    "expressionLanguage": {
                      "name": "expressionLanguage",
                      "type": "string",
                      "description": "Defines expression language used to build expression"
                    }
                  }
                }
              },
              "policyOperator": {
                "name": "policyOperator",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Managed PolicyOperator",
                  "properties": {}
                }
              },
              "policyVariable": {
                "name": "policyVariable",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Managed PolicyVariable",
                  "properties": {}
                }
              },
              "policyAction": {
                "name": "policyAction",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Managed PolicyAction",
                  "properties": {}
                }
              },
              "policyConstraint": {
                "name": "policyConstraint",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Managed PolicyConstraint",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    }
  },
  "digitalIdentity": {
    "tableName": "DigitalIdentity",
    "endpoints": [
      {
        "operationId": "listDigitalIdentity",
        "path": "/digitalIdentity",
        "method": "get"
      },
      {
        "operationId": "createDigitalIdentity",
        "path": "/digitalIdentity",
        "method": "post"
      },
      {
        "operationId": "retrieveDigitalIdentity",
        "path": "/digitalIdentity/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteDigitalIdentity",
        "path": "/digitalIdentity/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchDigitalIdentity",
        "path": "/digitalIdentity/{id}",
        "method": "patch"
      }
    ]
  },
  "customer360": {
    "tableName": "Customer360",
    "endpoints": [
      {
        "operationId": "listCustomer360",
        "path": "/customer360",
        "method": "get"
      },
      {
        "operationId": "retrieveCustomer360",
        "path": "/customer360/{id}",
        "method": "get"
      }
    ]
  },
  "resourceReservation": {
    "tableName": "ResourceReservation",
    "endpoints": [
      {
        "operationId": "listResourceReservation",
        "path": "/resourceReservation",
        "method": "get"
      },
      {
        "operationId": "createResourceReservation",
        "path": "/resourceReservation",
        "method": "post"
      },
      {
        "operationId": "retrieveResourceReservation",
        "path": "/resourceReservation/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteResourceReservation",
        "path": "/resourceReservation/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResourceReservation",
        "path": "/resourceReservation/{id}",
        "method": "patch"
      }
    ]
  },
  "cancelResourceReservation": {
    "tableName": "CancelResourceReservation",
    "endpoints": [
      {
        "operationId": "listCancelResourceReservation",
        "path": "/cancelResourceReservation",
        "method": "get"
      },
      {
        "operationId": "createCancelResourceReservation",
        "path": "/cancelResourceReservation",
        "method": "post"
      },
      {
        "operationId": "retrieveCancelResourceReservation",
        "path": "/cancelResourceReservation/{id}",
        "method": "get"
      }
    ]
  },
  "warranty": {
    "tableName": "Warranty",
    "endpoints": [
      {
        "operationId": "listWarranty",
        "path": "/warranty",
        "method": "get"
      },
      {
        "operationId": "createWarranty",
        "path": "/warranty",
        "method": "post"
      },
      {
        "operationId": "retrieveWarranty",
        "path": "/warranty/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteWarranty",
        "path": "/warranty/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchWarranty",
        "path": "/warranty/{id}",
        "method": "patch"
      }
    ]
  },
  "warrantySpecification": {
    "tableName": "WarrantySpecification",
    "endpoints": [
      {
        "operationId": "listWarrantySpecification",
        "path": "/warrantySpecification",
        "method": "get"
      },
      {
        "operationId": "createWarrantySpecification",
        "path": "/warrantySpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveWarrantySpecification",
        "path": "/warrantySpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteWarrantySpecification",
        "path": "/warrantySpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchWarrantySpecification",
        "path": "/warrantySpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "checkWorkQualification": {
    "tableName": "CheckWorkQualification",
    "endpoints": [
      {
        "operationId": "listCheckWorkQualification",
        "path": "/checkWorkQualification",
        "method": "get"
      },
      {
        "operationId": "createCheckWorkQualification",
        "path": "/checkWorkQualification",
        "method": "post"
      },
      {
        "operationId": "retrieveCheckWorkQualification",
        "path": "/checkWorkQualification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteCheckWorkQualification",
        "path": "/checkWorkQualification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchCheckWorkQualification",
        "path": "/checkWorkQualification/{id}",
        "method": "patch"
      }
    ]
  },
  "queryWorkQualification": {
    "tableName": "QueryWorkQualification",
    "endpoints": [
      {
        "operationId": "listQueryWorkQualification",
        "path": "/queryWorkQualification",
        "method": "get"
      },
      {
        "operationId": "createQueryWorkQualification",
        "path": "/queryWorkQualification",
        "method": "post"
      },
      {
        "operationId": "retrieveQueryWorkQualification",
        "path": "/queryWorkQualification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteQueryWorkQualification",
        "path": "/queryWorkQualification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchQueryWorkQualification",
        "path": "/queryWorkQualification/{id}",
        "method": "patch"
      }
    ]
  },
  "work": {
    "tableName": "Work",
    "endpoints": [
      {
        "operationId": "listWork",
        "path": "/work",
        "method": "get"
      },
      {
        "operationId": "createWork",
        "path": "/work",
        "method": "post"
      },
      {
        "operationId": "retrieveWork",
        "path": "/work/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteWork",
        "path": "/work/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchWork",
        "path": "/work/{id}",
        "method": "patch"
      }
    ]
  },
  "workSpecification": {
    "tableName": "WorkSpecification",
    "endpoints": [
      {
        "operationId": "listWorkSpecification",
        "path": "/workSpecification",
        "method": "get"
      },
      {
        "operationId": "createWorkSpecification",
        "path": "/workSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveWorkSpecification",
        "path": "/workSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteWorkSpecification",
        "path": "/workSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchWorkSpecification",
        "path": "/workSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "shipment": {
    "tableName": "Shipment",
    "endpoints": [
      {
        "operationId": "listShipment",
        "path": "/shipment",
        "method": "get"
      },
      {
        "operationId": "createShipment",
        "path": "/shipment",
        "method": "post"
      },
      {
        "operationId": "retrieveShipment",
        "path": "/shipment/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteShipment",
        "path": "/shipment/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchShipment",
        "path": "/shipment/{id}",
        "method": "patch"
      }
    ]
  },
  "shipmentSpecification": {
    "tableName": "ShipmentSpecification",
    "endpoints": [
      {
        "operationId": "listShipmentSpecification",
        "path": "/shipmentSpecification",
        "method": "get"
      },
      {
        "operationId": "createShipmentSpecification",
        "path": "/shipmentSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveShipmentSpecification",
        "path": "/shipmentSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteShipmentSpecification",
        "path": "/shipmentSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchShipmentSpecification",
        "path": "/shipmentSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "generalTestArtifact": {
    "tableName": "GeneralTestArtifact",
    "endpoints": [
      {
        "operationId": "listGeneralTestArtifact",
        "path": "/generalTestArtifact",
        "method": "get"
      },
      {
        "operationId": "createGeneralTestArtifact",
        "path": "/generalTestArtifact",
        "method": "post"
      },
      {
        "operationId": "retrieveGeneralTestArtifact",
        "path": "/generalTestArtifact/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteGeneralTestArtifact",
        "path": "/generalTestArtifact/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchGeneralTestArtifact",
        "path": "/generalTestArtifact/{id}",
        "method": "patch"
      }
    ]
  },
  "testScenario": {
    "tableName": "TestScenario",
    "endpoints": [
      {
        "operationId": "listTestScenario",
        "path": "/testScenario",
        "method": "get"
      },
      {
        "operationId": "createTestScenario",
        "path": "/testScenario",
        "method": "post"
      },
      {
        "operationId": "retrieveTestScenario",
        "path": "/testScenario/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTestScenario",
        "path": "/testScenario/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTestScenario",
        "path": "/testScenario/{id}",
        "method": "patch"
      }
    ]
  },
  "testEnvironmentAllocationExecution": {
    "tableName": "TestEnvironmentAllocationExecution",
    "endpoints": [
      {
        "operationId": "listTestEnvironmentAllocationExecution",
        "path": "/testEnvironmentAllocationExecution",
        "method": "get"
      },
      {
        "operationId": "createTestEnvironmentAllocationExecution",
        "path": "/testEnvironmentAllocationExecution",
        "method": "post"
      },
      {
        "operationId": "retrieveTestEnvironmentAllocationExecution",
        "path": "/testEnvironmentAllocationExecution/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTestEnvironmentAllocationExecution",
        "path": "/testEnvironmentAllocationExecution/{id}",
        "method": "delete"
      }
    ]
  },
  "testEnvironmentProvisioningExecution": {
    "tableName": "TestEnvironmentProvisioningExecution",
    "endpoints": [
      {
        "operationId": "listTestEnvironmentProvisioningExecution",
        "path": "/testEnvironmentProvisioningExecution",
        "method": "get"
      },
      {
        "operationId": "createTestEnvironmentProvisioningExecution",
        "path": "/testEnvironmentProvisioningExecution",
        "method": "post"
      },
      {
        "operationId": "retrieveTestEnvironmentProvisioningExecution",
        "path": "/testEnvironmentProvisioningExecution/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTestEnvironmentProvisioningExecution",
        "path": "/testEnvironmentProvisioningExecution/{id}",
        "method": "delete"
      }
    ]
  },
  "testCaseExecution": {
    "tableName": "TestCaseExecution",
    "endpoints": [
      {
        "operationId": "listTestCaseExecution",
        "path": "/testCaseExecution",
        "method": "get"
      },
      {
        "operationId": "createTestCaseExecution",
        "path": "/testCaseExecution",
        "method": "post"
      },
      {
        "operationId": "retrieveTestCaseExecution",
        "path": "/testCaseExecution/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTestCaseExecution",
        "path": "/testCaseExecution/{id}",
        "method": "delete"
      }
    ]
  },
  "testSuiteExecution": {
    "tableName": "TestSuiteExecution",
    "endpoints": [
      {
        "operationId": "listTestSuiteExecution",
        "path": "/testSuiteExecution",
        "method": "get"
      },
      {
        "operationId": "createTestSuiteExecution",
        "path": "/testSuiteExecution",
        "method": "post"
      },
      {
        "operationId": "retrieveTestSuiteExecution",
        "path": "/testSuiteExecution/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTestSuiteExecution",
        "path": "/testSuiteExecution/{id}",
        "method": "delete"
      }
    ]
  },
  "nonFunctionalTestExecution": {
    "tableName": "NonFunctionalTestExecution",
    "endpoints": [
      {
        "operationId": "listNonFunctionalTestExecution",
        "path": "/nonFunctionalTestExecution",
        "method": "get"
      },
      {
        "operationId": "createNonFunctionalTestExecution",
        "path": "/nonFunctionalTestExecution",
        "method": "post"
      },
      {
        "operationId": "retrieveNonFunctionalTestExecution",
        "path": "/nonFunctionalTestExecution/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteNonFunctionalTestExecution",
        "path": "/nonFunctionalTestExecution/{id}",
        "method": "delete"
      }
    ]
  },
  "testCaseResult": {
    "tableName": "TestCaseResult",
    "endpoints": [
      {
        "operationId": "listTestCaseResult",
        "path": "/testCaseResult",
        "method": "get"
      },
      {
        "operationId": "createTestCaseResult",
        "path": "/testCaseResult",
        "method": "post"
      },
      {
        "operationId": "retrieveTestCaseResult",
        "path": "/testCaseResult/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTestCaseResult",
        "path": "/testCaseResult/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTestCaseResult",
        "path": "/testCaseResult/{id}",
        "method": "patch"
      }
    ]
  },
  "testSuiteResult": {
    "tableName": "TestSuiteResult",
    "endpoints": [
      {
        "operationId": "listTestSuiteResult",
        "path": "/testSuiteResult",
        "method": "get"
      },
      {
        "operationId": "createTestSuiteResult",
        "path": "/testSuiteResult",
        "method": "post"
      },
      {
        "operationId": "retrieveTestSuiteResult",
        "path": "/testSuiteResult/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTestSuiteResult",
        "path": "/testSuiteResult/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTestSuiteResult",
        "path": "/testSuiteResult/{id}",
        "method": "patch"
      }
    ]
  },
  "nonFunctionalTestResult": {
    "tableName": "NonFunctionalTestResult",
    "endpoints": [
      {
        "operationId": "listNonFunctionalTestResult",
        "path": "/nonFunctionalTestResult",
        "method": "get"
      },
      {
        "operationId": "createNonFunctionalTestResult",
        "path": "/nonFunctionalTestResult",
        "method": "post"
      },
      {
        "operationId": "retrieveNonFunctionalTestResult",
        "path": "/nonFunctionalTestResult/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteNonFunctionalTestResult",
        "path": "/nonFunctionalTestResult/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchNonFunctionalTestResult",
        "path": "/nonFunctionalTestResult/{id}",
        "method": "patch"
      }
    ]
  },
  "testDataInstance": {
    "tableName": "TestDataInstance",
    "endpoints": [
      {
        "operationId": "listTestDataInstance",
        "path": "/testDataInstance",
        "method": "get"
      },
      {
        "operationId": "createTestDataInstance",
        "path": "/testDataInstance",
        "method": "post"
      },
      {
        "operationId": "retrieveTestDataInstance",
        "path": "/testDataInstance/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTestDataInstance",
        "path": "/testDataInstance/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTestDataInstance",
        "path": "/testDataInstance/{id}",
        "method": "patch"
      }
    ]
  },
  "testDataSchema": {
    "tableName": "TestDataSchema",
    "endpoints": [
      {
        "operationId": "listTestDataSchema",
        "path": "/testDataSchema",
        "method": "get"
      },
      {
        "operationId": "createTestDataSchema",
        "path": "/testDataSchema",
        "method": "post"
      },
      {
        "operationId": "retrieveTestDataSchema",
        "path": "/testDataSchema/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTestDataSchema",
        "path": "/testDataSchema/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTestDataSchema",
        "path": "/testDataSchema/{id}",
        "method": "patch"
      }
    ]
  },
  "abstractEnvironment": {
    "tableName": "AbstractEnvironment",
    "endpoints": [
      {
        "operationId": "listAbstractEnvironment",
        "path": "/abstractEnvironment",
        "method": "get"
      },
      {
        "operationId": "createAbstractEnvironment",
        "path": "/abstractEnvironment",
        "method": "post"
      },
      {
        "operationId": "retrieveAbstractEnvironment",
        "path": "/abstractEnvironment/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteAbstractEnvironment",
        "path": "/abstractEnvironment/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchAbstractEnvironment",
        "path": "/abstractEnvironment/{id}",
        "method": "patch"
      }
    ]
  },
  "concreteEnvironmentMetaModel": {
    "tableName": "ConcreteEnvironmentMetaModel",
    "endpoints": [
      {
        "operationId": "listConcreteEnvironmentMetaModel",
        "path": "/concreteEnvironmentMetaModel",
        "method": "get"
      },
      {
        "operationId": "createConcreteEnvironmentMetaModel",
        "path": "/concreteEnvironmentMetaModel",
        "method": "post"
      },
      {
        "operationId": "retrieveConcreteEnvironmentMetaModel",
        "path": "/concreteEnvironmentMetaModel/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteConcreteEnvironmentMetaModel",
        "path": "/concreteEnvironmentMetaModel/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchConcreteEnvironmentMetaModel",
        "path": "/concreteEnvironmentMetaModel/{id}",
        "method": "patch"
      }
    ]
  },
  "testResourceAPI": {
    "tableName": "TestResourceAPI",
    "endpoints": [
      {
        "operationId": "listTestResourceAPI",
        "path": "/testResourceAPI",
        "method": "get"
      },
      {
        "operationId": "createTestResourceAPI",
        "path": "/testResourceAPI",
        "method": "post"
      },
      {
        "operationId": "retrieveTestResourceAPI",
        "path": "/testResourceAPI/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTestResourceAPI",
        "path": "/testResourceAPI/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTestResourceAPI",
        "path": "/testResourceAPI/{id}",
        "method": "patch"
      }
    ]
  },
  "provisioningArtifact": {
    "tableName": "ProvisioningArtifact",
    "endpoints": [
      {
        "operationId": "listProvisioningArtifact",
        "path": "/provisioningArtifact",
        "method": "get"
      },
      {
        "operationId": "createProvisioningArtifact",
        "path": "/provisioningArtifact",
        "method": "post"
      },
      {
        "operationId": "retrieveProvisioningArtifact",
        "path": "/provisioningArtifact/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProvisioningArtifact",
        "path": "/provisioningArtifact/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchProvisioningArtifact",
        "path": "/provisioningArtifact/{id}",
        "method": "patch"
      }
    ]
  },
  "testCase": {
    "tableName": "TestCase",
    "endpoints": [
      {
        "operationId": "listTestCase",
        "path": "/testCase",
        "method": "get"
      },
      {
        "operationId": "createTestCase",
        "path": "/testCase",
        "method": "post"
      },
      {
        "operationId": "retrieveTestCase",
        "path": "/testCase/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTestCase",
        "path": "/testCase/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTestCase",
        "path": "/testCase/{id}",
        "method": "patch"
      }
    ]
  },
  "testSuite": {
    "tableName": "TestSuite",
    "endpoints": [
      {
        "operationId": "listTestSuite",
        "path": "/testSuite",
        "method": "get"
      },
      {
        "operationId": "createTestSuite",
        "path": "/testSuite",
        "method": "post"
      },
      {
        "operationId": "retrieveTestSuite",
        "path": "/testSuite/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTestSuite",
        "path": "/testSuite/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTestSuite",
        "path": "/testSuite/{id}",
        "method": "patch"
      }
    ]
  },
  "nonFunctionalTestModel": {
    "tableName": "NonFunctionalTestModel",
    "endpoints": [
      {
        "operationId": "listNonFunctionalTestModel",
        "path": "/nonFunctionalTestModel",
        "method": "get"
      },
      {
        "operationId": "createNonFunctionalTestModel",
        "path": "/nonFunctionalTestModel",
        "method": "post"
      },
      {
        "operationId": "retrieveNonFunctionalTestModel",
        "path": "/nonFunctionalTestModel/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteNonFunctionalTestModel",
        "path": "/nonFunctionalTestModel/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchNonFunctionalTestModel",
        "path": "/nonFunctionalTestModel/{id}",
        "method": "patch"
      }
    ]
  },
  "entity": {
    "tableName": "Entity",
    "endpoints": [
      {
        "operationId": "listEntity",
        "path": "/entity",
        "method": "get"
      },
      {
        "operationId": "createEntity",
        "path": "/entity",
        "method": "post"
      },
      {
        "operationId": "retrieveEntity",
        "path": "/entity/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteEntity",
        "path": "/entity/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchEntity",
        "path": "/entity/{id}",
        "method": "patch"
      }
    ]
  },
  "association": {
    "tableName": "Association",
    "endpoints": [
      {
        "operationId": "listAssociation",
        "path": "/association",
        "method": "get"
      },
      {
        "operationId": "createAssociation",
        "path": "/association",
        "method": "post"
      },
      {
        "operationId": "retrieveAssociation",
        "path": "/association/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteAssociation",
        "path": "/association/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchAssociation",
        "path": "/association/{id}",
        "method": "patch"
      }
    ]
  },
  "resource": {
    "tableName": "Resource",
    "endpoints": [
      {
        "operationId": "listResource",
        "path": "/resource",
        "method": "get"
      },
      {
        "operationId": "createResource",
        "path": "/resource",
        "method": "post"
      },
      {
        "operationId": "retrieveResource",
        "path": "/resource/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteResource",
        "path": "/resource/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResource",
        "path": "/resource/{id}",
        "method": "patch"
      }
    ]
  },
  "processFlowSpecification": {
    "tableName": "ProcessFlowSpecification",
    "endpoints": [
      {
        "operationId": "listProcessFlowSpecification",
        "path": "/processFlowSpecification",
        "method": "get"
      },
      {
        "operationId": "createProcessFlowSpecification",
        "path": "/processFlowSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveProcessFlowSpecification",
        "path": "/processFlowSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProcessFlowSpecification",
        "path": "/processFlowSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchProcessFlowSpecification",
        "path": "/processFlowSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "taskFlowSpecification": {
    "tableName": "TaskFlowSpecification",
    "endpoints": [
      {
        "operationId": "listTaskFlowSpecification",
        "path": "/taskFlowSpecification",
        "method": "get"
      },
      {
        "operationId": "createTaskFlowSpecification",
        "path": "/taskFlowSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveTaskFlowSpecification",
        "path": "/taskFlowSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTaskFlowSpecification",
        "path": "/taskFlowSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTaskFlowSpecification",
        "path": "/taskFlowSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "processFlow": {
    "tableName": "ProcessFlow",
    "endpoints": [
      {
        "operationId": "listProcessFlow",
        "path": "/processFlow",
        "method": "get"
      },
      {
        "operationId": "createProcessFlow",
        "path": "/processFlow",
        "method": "post"
      },
      {
        "operationId": "retrieveProcessFlow",
        "path": "/processFlow/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProcessFlow",
        "path": "/processFlow/{id}",
        "method": "delete"
      }
    ]
  },
  "taskFlow": {
    "tableName": "TaskFlow",
    "endpoints": [
      {
        "operationId": "listTaskFlow",
        "path": "/processFlow/{processFlowId}/taskFlow",
        "method": "get"
      },
      {
        "operationId": "createTaskFlow",
        "path": "/processFlow/{processFlowId}/taskFlow",
        "method": "post"
      },
      {
        "operationId": "retrieveTaskFlow",
        "path": "/processFlow/{processFlowId}/taskFlow/{id}",
        "method": "get"
      },
      {
        "operationId": "patchTaskFlow",
        "path": "/processFlow/{processFlowId}/taskFlow/{id}",
        "method": "patch"
      }
    ]
  },
  "shippingOrder": {
    "tableName": "ShippingOrder",
    "endpoints": [
      {
        "operationId": "listShippingOrder",
        "path": "/shippingOrder",
        "method": "get"
      },
      {
        "operationId": "createShippingOrder",
        "path": "/shippingOrder",
        "method": "post"
      },
      {
        "operationId": "retrieveShippingOrder",
        "path": "/shippingOrder/{id}",
        "method": "get"
      },
      {
        "operationId": "updateShippingOrder",
        "path": "/shippingOrder/{id}",
        "method": "put"
      },
      {
        "operationId": "patchShippingOrder",
        "path": "/shippingOrder/{id}",
        "method": "patch"
      }
    ]
  },
  "salesLead": {
    "tableName": "SalesLead",
    "endpoints": [
      {
        "operationId": "listSalesLead",
        "path": "/salesLead",
        "method": "get"
      },
      {
        "operationId": "createSalesLead",
        "path": "/salesLead",
        "method": "post"
      },
      {
        "operationId": "retrieveSalesLead",
        "path": "/salesLead/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteSalesLead",
        "path": "/salesLead/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchSalesLead",
        "path": "/salesLead/{id}",
        "method": "patch"
      }
    ]
  },
  "cancelWorkOrder": {
    "tableName": "CancelWorkOrder",
    "endpoints": [
      {
        "operationId": "listCancelWorkOrder",
        "path": "/cancelWorkOrder",
        "method": "get"
      },
      {
        "operationId": "createCancelWorkOrder",
        "path": "/cancelWorkOrder",
        "method": "post"
      },
      {
        "operationId": "retrieveCancelWorkOrder",
        "path": "/cancelWorkOrder/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "requestedCancellationDate": {
                "name": "requestedCancellationDate",
                "type": "string",
                "description": "Date when the submitter wants the order to be cancelled",
                "format": "date-time"
              },
              "effectiveCancellationDate": {
                "name": "effectiveCancellationDate",
                "type": "string",
                "description": "Date when the order is cancelled.",
                "format": "date-time"
              },
              "cancellationReason": {
                "name": "cancellationReason",
                "type": "string",
                "description": "Reason why the order is cancelled."
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Possible values for the state of a task",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "inProgress",
                  "cancelled",
                  "done",
                  "terminatedWithError"
                ]
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "workOrder": {
                "name": "workOrder",
                "type": "object",
                "description": "WorkOrder reference",
                "properties": {}
              }
            }
          }
        }
      }
    }
  },
  "workOrder": {
    "tableName": "WorkOrder",
    "endpoints": [
      {
        "operationId": "listWorkOrder",
        "path": "/workOrder",
        "method": "get"
      },
      {
        "operationId": "createWorkOrder",
        "path": "/workOrder",
        "method": "post"
      },
      {
        "operationId": "retrieveWorkOrder",
        "path": "/workOrder/{id}",
        "method": "get"
      },
      {
        "operationId": "patchWorkOrder",
        "path": "/workOrder/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "agreement": {
                "name": "agreement",
                "type": "array",
                "description": "A reference to an agreement defined in the context of the work order",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                  "properties": {}
                }
              },
              "appointment": {
                "name": "appointment",
                "type": "object",
                "properties": {
                  "description": {
                    "name": "description",
                    "type": "string",
                    "description": "An explanatory text regarding the appointment made with a party"
                  }
                }
              },
              "billingAccount": {
                "name": "billingAccount",
                "type": "object",
                "properties": {
                  "ratingType": {
                    "name": "ratingType",
                    "type": "string",
                    "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                  }
                }
              },
              "cancellationDate": {
                "name": "cancellationDate",
                "type": "string",
                "description": "Date when the order is cancelled. This is used when order is cancelled. ",
                "format": "date-time"
              },
              "cancellationReason": {
                "name": "cancellationReason",
                "type": "string",
                "description": "Reason why the order is cancelled. This is used when order is cancelled. "
              },
              "category": {
                "name": "category",
                "type": "string",
                "description": "Used to categorize the order from a business perspective that can be useful for the OM system (e.g. \"enterprise\", \"residential\", ...)"
              },
              "channel": {
                "name": "channel",
                "type": "array",
                "description": "Channel used, e.g. web, store, call ecenter.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "channel": {
                      "name": "channel",
                      "type": "object",
                      "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
                      "properties": {}
                    }
                  }
                }
              },
              "completionDate": {
                "name": "completionDate",
                "type": "string",
                "description": "Date when the order was completed",
                "format": "date-time"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "A free-text description of the order"
              },
              "expectedCompletionDate": {
                "name": "expectedCompletionDate",
                "type": "string",
                "description": "Expected completion date amended by the provider",
                "format": "date-time"
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "description": "A list of external identifiers associated with this resource",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "object",
                "properties": {
                  "id": {
                    "name": "id",
                    "type": "string",
                    "description": "Identifier of the note within its containing entity"
                  },
                  "author": {
                    "name": "author",
                    "type": "string",
                    "description": "Author of the note"
                  },
                  "date": {
                    "name": "date",
                    "type": "string",
                    "description": "Date of the note",
                    "format": "date-time"
                  },
                  "text": {
                    "name": "text",
                    "type": "string",
                    "description": "Text of the note"
                  }
                }
              },
              "notificationContact": {
                "name": "notificationContact",
                "type": "string",
                "description": "Contact attached to the order to send back information regarding this order"
              },
              "relatedProductOrder": {
                "name": "relatedProductOrder",
                "type": "array",
                "description": "Product Order Reference",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A reference to an existing Product Order.",
                  "properties": {}
                }
              },
              "orderDate": {
                "name": "orderDate",
                "type": "string",
                "description": "Date when the order was created",
                "format": "date-time"
              },
              "orderTotalPrice": {
                "name": "orderTotalPrice",
                "type": "array",
                "description": "Order total price",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains in detail the semantics of this order item price."
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A short descriptive name such as \"Subscription price\"."
                    },
                    "productOfferingPrice": {
                      "name": "productOfferingPrice",
                      "type": "object",
                      "properties": {
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "Version of the product offering price"
                        }
                      }
                    },
                    "recurringChargePeriod": {
                      "name": "recurringChargePeriod",
                      "type": "string",
                      "description": "Could be month, week..."
                    },
                    "unitOfMeasure": {
                      "name": "unitOfMeasure",
                      "type": "string",
                      "description": "Could be minutes, GB..."
                    },
                    "billingAccount": {
                      "name": "billingAccount",
                      "type": "object",
                      "description": "Reference to BillingAccountRef"
                    },
                    "priceAlteration": {
                      "name": "priceAlteration",
                      "type": "array",
                      "description": "a strucuture used to describe a price alteration",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "applicationDuration": {
                            "name": "applicationDuration",
                            "type": "integer",
                            "description": "Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge)"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "A narrative that explains in detail the semantics of this order item price alteration"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the order item price alteration"
                          },
                          "productOfferingPrice": {
                            "name": "productOfferingPrice",
                            "type": "object",
                            "description": "Reference to ProductOfferingPriceRef"
                          },
                          "priceType": {
                            "name": "priceType",
                            "type": "string",
                            "description": "A category that describes the price such as recurring, one time and usage."
                          },
                          "priority": {
                            "name": "priority",
                            "type": "integer",
                            "description": "Priority level for applying this alteration among all the defined alterations on the order item price"
                          },
                          "recurringChargePeriod": {
                            "name": "recurringChargePeriod",
                            "type": "string",
                            "description": "Could be month, week..."
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "Could be minutes, GB..."
                          },
                          "price": {
                            "name": "price",
                            "type": "object",
                            "properties": {
                              "dutyFreeAmount": {
                                "name": "dutyFreeAmount",
                                "type": "object",
                                "description": "A base / value business entity used to represent money",
                                "properties": {
                                  "unit": {
                                    "name": "unit",
                                    "type": "string",
                                    "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "number",
                                    "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                                    "format": "float"
                                  }
                                }
                              },
                              "percentage": {
                                "name": "percentage",
                                "type": "number",
                                "description": "Percentage to apply for ProdOfferPriceAlteration",
                                "format": "float"
                              },
                              "taxIncludedAmount": {
                                "name": "taxIncludedAmount",
                                "type": "object",
                                "description": "Reference to Money"
                              },
                              "taxRate": {
                                "name": "taxRate",
                                "type": "number",
                                "description": "Tax rate",
                                "format": "float"
                              }
                            }
                          }
                        }
                      }
                    },
                    "price": {
                      "name": "price",
                      "type": "object",
                      "description": "Reference to Price"
                    },
                    "priceType": {
                      "name": "priceType",
                      "type": "string",
                      "description": "indicate if the price is for recurrent or no-recurrent charge"
                    }
                  }
                }
              },
              "payment": {
                "name": "payment",
                "type": "array",
                "description": "Payment reference",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "If an immediate payment has been done at the product order submission, the payment information are captured and stored (as a reference) in the order.",
                  "properties": {}
                }
              },
              "place": {
                "name": "place",
                "type": "union",
                "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place entity and not the PlaceRefOrValue class itself",
                "oneOf": [
                  {
                    "name": "place_variant_0",
                    "type": "object",
                    "properties": {
                      "id": {
                        "name": "id",
                        "type": "string",
                        "description": "Unique identifier of the geographic location"
                      },
                      "href": {
                        "name": "href",
                        "type": "string",
                        "description": "An URI used to access to the geographic location resource"
                      },
                      "@type": {
                        "name": "@type",
                        "type": "string",
                        "description": "The name of the GeoJSON structure used in the geometry attribute",
                        "enum": [
                          "GeoJsonPoint",
                          "GeoJsonMultiPoint",
                          "GeoJsonLineString",
                          "GeoJsonMultiLineString",
                          "GeoJsonPolygon"
                        ]
                      },
                      "bbox": {
                        "name": "bbox",
                        "type": "array",
                        "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                        "items": {
                          "name": "items",
                          "type": "number"
                        }
                      }
                    }
                  },
                  {
                    "name": "place_variant_1",
                    "type": "object",
                    "properties": {
                      "code": {
                        "name": "code",
                        "type": "string",
                        "description": "A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]"
                      },
                      "creationDate": {
                        "name": "creationDate",
                        "type": "string",
                        "description": "Date and time when the GeographicSite was created",
                        "format": "date-time"
                      },
                      "description": {
                        "name": "description",
                        "type": "string",
                        "description": "Text describing additional information regarding the site"
                      },
                      "status": {
                        "name": "status",
                        "type": "string",
                        "description": "The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former"
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "role": {
                              "name": "role",
                              "type": "string",
                              "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                            },
                            "partyOrPartyRole": {
                              "name": "partyOrPartyRole",
                              "type": "union",
                              "description": "",
                              "oneOf": [
                                {
                                  "name": "partyOrPartyRole_variant_0",
                                  "type": "object",
                                  "description": "A Party reference",
                                  "properties": {}
                                },
                                {
                                  "name": "partyOrPartyRole_variant_1",
                                  "type": "object",
                                  "properties": {
                                    "partyId": {
                                      "name": "partyId",
                                      "type": "string",
                                      "description": "The identifier of the engaged party that is linked to the PartyRole object."
                                    },
                                    "partyName": {
                                      "name": "partyName",
                                      "type": "string",
                                      "description": "The name of the engaged party that is linked to the PartyRole object."
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "externalIdentifier": {
                        "name": "externalIdentifier",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to ExternalIdentifier"
                        }
                      },
                      "calendar": {
                        "name": "calendar",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "day": {
                              "name": "day",
                              "type": "string",
                              "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, ...)"
                            },
                            "timeZone": {
                              "name": "timeZone",
                              "type": "string",
                              "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)"
                            },
                            "hourPeriod": {
                              "name": "hourPeriod",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "endHour": {
                                    "name": "endHour",
                                    "type": "string",
                                    "description": "The time when the status ends applying"
                                  },
                                  "startHour": {
                                    "name": "startHour",
                                    "type": "string",
                                    "description": "The time when the status starts applying"
                                  }
                                }
                              }
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Indication of the availability of the caledar period (e.g.: available, booked, etc.)"
                            }
                          }
                        }
                      },
                      "place": {
                        "name": "place",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to PlaceRefOrValue"
                        }
                      },
                      "siteRelationship": {
                        "name": "siteRelationship",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Reference of the related geographic site"
                            },
                            "role": {
                              "name": "role",
                              "type": "string",
                              "description": "Role of the related site in the relationship"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                              "properties": {
                                "startDateTime": {
                                  "name": "startDateTime",
                                  "type": "string",
                                  "description": "Start of the time period, using IETC-RFC-3339 format",
                                  "format": "date-time"
                                },
                                "endDateTime": {
                                  "name": "endDateTime",
                                  "type": "string",
                                  "description": "End of the time period, using IETC-RFC-3339 format",
                                  "format": "date-time"
                                }
                              }
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the related site entity within the server"
                            },
                            "relationshipType": {
                              "name": "relationshipType",
                              "type": "string",
                              "description": "Type of relationship"
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "name": "place_variant_2",
                    "type": "object",
                    "properties": {
                      "city": {
                        "name": "city",
                        "type": "string",
                        "description": "City that the address is in"
                      },
                      "country": {
                        "name": "country",
                        "type": "string",
                        "description": "Country that the address is in"
                      },
                      "locality": {
                        "name": "locality",
                        "type": "string",
                        "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                      },
                      "postcode": {
                        "name": "postcode",
                        "type": "string",
                        "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                      },
                      "stateOrProvince": {
                        "name": "stateOrProvince",
                        "type": "string",
                        "description": "the State or Province that the address is in"
                      },
                      "streetName": {
                        "name": "streetName",
                        "type": "string",
                        "description": "Name of the street or other street type"
                      },
                      "streetNr": {
                        "name": "streetNr",
                        "type": "string",
                        "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                      },
                      "streetNrLast": {
                        "name": "streetNrLast",
                        "type": "string",
                        "description": "Last number in a range of street numbers allocated to a property"
                      },
                      "streetNrLastSuffix": {
                        "name": "streetNrLastSuffix",
                        "type": "string",
                        "description": "Last street number suffix for a ranged address"
                      },
                      "streetNrSuffix": {
                        "name": "streetNrSuffix",
                        "type": "string",
                        "description": "the first street number suffix"
                      },
                      "streetSuffix": {
                        "name": "streetSuffix",
                        "type": "string",
                        "description": "A modifier denoting a relative direction"
                      },
                      "streetType": {
                        "name": "streetType",
                        "type": "string",
                        "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                      },
                      "countryCode": {
                        "name": "countryCode",
                        "type": "array",
                        "description": "Country codes are short alphabetic or numeric geographical codes (geocodes) developed to represent countries and dependent areas, for use in data processing and communications. Several different systems have been developed to do this. The term country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes, the E.164 country calling codes.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "format": {
                              "name": "format",
                              "type": "string",
                              "description": "Standard/Regulatory definition identifier. e.g., ISO 3166-1"
                            },
                            "value": {
                              "name": "value",
                              "type": "string",
                              "description": "The value of the resource in the corresponding standard.e.g., a country code value"
                            }
                          }
                        }
                      },
                      "externalIdentifier": {
                        "name": "externalIdentifier",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to ExternalIdentifier"
                        }
                      },
                      "geographicLocation": {
                        "name": "geographicLocation",
                        "type": "union",
                        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicLocation entity and not the GeographicLocationRefOrValue class itself",
                        "oneOf": [
                          {
                            "name": "geographicLocation_variant_0",
                            "type": "object",
                            "description": "Reference to GeographicLocation"
                          },
                          {
                            "name": "geographicLocation_variant_1",
                            "type": "object",
                            "properties": {}
                          }
                        ]
                      },
                      "geographicSubAddress": {
                        "name": "geographicSubAddress",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "buildingName": {
                              "name": "buildingName",
                              "type": "string",
                              "description": "allows for buildings that have well-known names"
                            },
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "Link to the subAddress"
                            },
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique Identifier of the subAddress"
                            },
                            "levelNumber": {
                              "name": "levelNumber",
                              "type": "string",
                              "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                            },
                            "levelType": {
                              "name": "levelType",
                              "type": "string",
                              "description": "describes level types within a building"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the subAddress to identify it with a meaningful identification"
                            },
                            "privateStreetName": {
                              "name": "privateStreetName",
                              "type": "string",
                              "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                            },
                            "privateStreetNumber": {
                              "name": "privateStreetNumber",
                              "type": "string",
                              "description": "private streets numbers internal to a private street"
                            },
                            "subUnit": {
                              "name": "subUnit",
                              "type": "array",
                              "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "subUnitNumber": {
                                    "name": "subUnitNumber",
                                    "type": "string",
                                    "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                                  },
                                  "subUnitType": {
                                    "name": "subUnitType",
                                    "type": "string",
                                    "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                                  }
                                }
                              }
                            },
                            "subAddressType": {
                              "name": "subAddressType",
                              "type": "string",
                              "description": "Type of subAddress : it can be a subunit or a private street"
                            }
                          }
                        }
                      },
                      "geographicAddressType": {
                        "name": "geographicAddressType",
                        "type": "string",
                        "description": "Classification of the address, e.g., residential, industrial "
                      }
                    }
                  },
                  {
                    "name": "place_variant_3",
                    "type": "object",
                    "description": "Place reference.",
                    "properties": {}
                  }
                ]
              },
              "priority": {
                "name": "priority",
                "type": "string",
                "description": "A way that can be used by consumers to prioritize orders in OM system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)"
              },
              "quote": {
                "name": "quote",
                "type": "array",
                "description": "Work Order Quote Reference",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Quote reference. It's a Quote that has been executed previously.",
                  "properties": {}
                }
              },
              "relatedEntity": {
                "name": "relatedEntity",
                "type": "array",
                "description": "Related entity to the work order",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "entity": {
                      "name": "entity",
                      "type": "object",
                      "description": "Reference to EntityRef"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "The parties involved in the work order",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "Reference to PartyRef"
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "description": "Reference to PartyRoleRef"
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "properties": {
                            "gender": {
                              "name": "gender",
                              "type": "string",
                              "description": "Gender"
                            },
                            "placeOfBirth": {
                              "name": "placeOfBirth",
                              "type": "string",
                              "description": "Reference to the place where the individual was born"
                            },
                            "countryOfBirth": {
                              "name": "countryOfBirth",
                              "type": "string",
                              "description": "Country where the individual was born"
                            },
                            "nationality": {
                              "name": "nationality",
                              "type": "string",
                              "description": "Nationality"
                            },
                            "maritalStatus": {
                              "name": "maritalStatus",
                              "type": "string",
                              "description": "Marital status (married, divorced, widow ...)"
                            },
                            "birthDate": {
                              "name": "birthDate",
                              "type": "string",
                              "description": "Birth date",
                              "format": "date-time"
                            },
                            "deathDate": {
                              "name": "deathDate",
                              "type": "string",
                              "description": "Date of death",
                              "format": "date-time"
                            },
                            "title": {
                              "name": "title",
                              "type": "string",
                              "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                            },
                            "aristocraticTitle": {
                              "name": "aristocraticTitle",
                              "type": "string",
                              "description": "e.g. Baron, Graf, Earl"
                            },
                            "generation": {
                              "name": "generation",
                              "type": "string",
                              "description": "e.g.. Sr, Jr, III (the third)"
                            },
                            "preferredGivenName": {
                              "name": "preferredGivenName",
                              "type": "string",
                              "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                            },
                            "familyNamePrefix": {
                              "name": "familyNamePrefix",
                              "type": "string",
                              "description": "Family name prefix"
                            },
                            "legalName": {
                              "name": "legalName",
                              "type": "string",
                              "description": "Legal name or birth name (name one has for official purposes)"
                            },
                            "middleName": {
                              "name": "middleName",
                              "type": "string",
                              "description": "Middles name or initial"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                            },
                            "formattedName": {
                              "name": "formattedName",
                              "type": "string",
                              "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                            },
                            "location": {
                              "name": "location",
                              "type": "string",
                              "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Valid values for the lifecycle state of the individual",
                              "enum": [
                                "initialized",
                                "validated",
                                "deceased"
                              ]
                            },
                            "otherName": {
                              "name": "otherName",
                              "type": "array",
                              "description": "List of other names by which this individual is known",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                "properties": {
                                  "title": {
                                    "name": "title",
                                    "type": "string",
                                    "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                  },
                                  "aristocraticTitle": {
                                    "name": "aristocraticTitle",
                                    "type": "string",
                                    "description": "e.g. Baron, Graf, Earl, etc."
                                  },
                                  "generation": {
                                    "name": "generation",
                                    "type": "string",
                                    "description": "e.g. Sr, Jr, etc."
                                  },
                                  "givenName": {
                                    "name": "givenName",
                                    "type": "string",
                                    "description": "First name"
                                  },
                                  "preferredGivenName": {
                                    "name": "preferredGivenName",
                                    "type": "string",
                                    "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                  },
                                  "familyNamePrefix": {
                                    "name": "familyNamePrefix",
                                    "type": "string",
                                    "description": "Family name prefix"
                                  },
                                  "familyName": {
                                    "name": "familyName",
                                    "type": "string",
                                    "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                  },
                                  "legalName": {
                                    "name": "legalName",
                                    "type": "string",
                                    "description": "Legal name or birth name (name one has for official purposes)"
                                  },
                                  "middleName": {
                                    "name": "middleName",
                                    "type": "string",
                                    "description": "Middle name or initial"
                                  },
                                  "fullName": {
                                    "name": "fullName",
                                    "type": "string",
                                    "description": "Full name flatten (first, middle, and last names)"
                                  },
                                  "formattedName": {
                                    "name": "formattedName",
                                    "type": "string",
                                    "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "individualIdentification": {
                              "name": "individualIdentification",
                              "type": "array",
                              "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "identificationId": {
                                    "name": "identificationId",
                                    "type": "string",
                                    "description": "Identifier"
                                  },
                                  "issuingAuthority": {
                                    "name": "issuingAuthority",
                                    "type": "string",
                                    "description": "Authority which has issued the identifier, such as: social security, town hall"
                                  },
                                  "issuingDate": {
                                    "name": "issuingDate",
                                    "type": "string",
                                    "description": "Date at which the identifier was issued",
                                    "format": "date-time"
                                  },
                                  "identificationType": {
                                    "name": "identificationType",
                                    "type": "string",
                                    "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "union",
                                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                    "oneOf": [
                                      {
                                        "name": "attachment_variant_0",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "The name of the attachment"
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A narrative text describing the content of the attachment"
                                          },
                                          "url": {
                                            "name": "url",
                                            "type": "string",
                                            "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                          },
                                          "content": {
                                            "name": "content",
                                            "type": "string",
                                            "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                            "format": "base64"
                                          },
                                          "size": {
                                            "name": "size",
                                            "type": "object",
                                            "description": "An amount in a given unit",
                                            "properties": {
                                              "amount": {
                                                "name": "amount",
                                                "type": "number",
                                                "description": "Numeric value in a given unit",
                                                "format": "float"
                                              },
                                              "units": {
                                                "name": "units",
                                                "type": "string",
                                                "description": "Unit"
                                              }
                                            }
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "attachmentType": {
                                            "name": "attachmentType",
                                            "type": "string",
                                            "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                          },
                                          "mimeType": {
                                            "name": "mimeType",
                                            "type": "string",
                                            "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                          }
                                        }
                                      },
                                      {
                                        "name": "attachment_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A narrative text describing the content of the attachment"
                                          },
                                          "url": {
                                            "name": "url",
                                            "type": "string",
                                            "description": "Link to the attachment media/content"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "disability": {
                              "name": "disability",
                              "type": "array",
                              "description": "List of disabilities suffered by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Lack or inadequate strength or ability.",
                                "properties": {
                                  "disabilityCode": {
                                    "name": "disabilityCode",
                                    "type": "string",
                                    "description": "Code of the disability"
                                  },
                                  "disabilityName": {
                                    "name": "disabilityName",
                                    "type": "string",
                                    "description": "Name of the disability"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "languageAbility": {
                              "name": "languageAbility",
                              "type": "array",
                              "description": "List of national languages known by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Ability of an individual to understand or converse in a language.",
                                "properties": {
                                  "languageCode": {
                                    "name": "languageCode",
                                    "type": "string",
                                    "description": "Language code (RFC 5646)"
                                  },
                                  "languageName": {
                                    "name": "languageName",
                                    "type": "string",
                                    "description": "Language name"
                                  },
                                  "isFavouriteLanguage": {
                                    "name": "isFavouriteLanguage",
                                    "type": "boolean",
                                    "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                  },
                                  "writingProficiency": {
                                    "name": "writingProficiency",
                                    "type": "string",
                                    "description": "Writing proficiency evaluated for this language"
                                  },
                                  "readingProficiency": {
                                    "name": "readingProficiency",
                                    "type": "string",
                                    "description": "Reading proficiency evaluated for this language"
                                  },
                                  "speakingProficiency": {
                                    "name": "speakingProficiency",
                                    "type": "string",
                                    "description": "Speaking proficiency evaluated for this language"
                                  },
                                  "listeningProficiency": {
                                    "name": "listeningProficiency",
                                    "type": "string",
                                    "description": "Listening proficiency evaluated for this language"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "skill": {
                              "name": "skill",
                              "type": "array",
                              "description": "List of skills exhibited by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                "properties": {
                                  "skillCode": {
                                    "name": "skillCode",
                                    "type": "string",
                                    "description": "Code of the skill"
                                  },
                                  "skillName": {
                                    "name": "skillName",
                                    "type": "string",
                                    "description": "Name of the skill, such as Java language"
                                  },
                                  "evaluatedLevel": {
                                    "name": "evaluatedLevel",
                                    "type": "string",
                                    "description": "Level of expertise in a skill evaluated for an individual"
                                  },
                                  "comment": {
                                    "name": "comment",
                                    "type": "string",
                                    "description": "A free text comment linked to the evaluation done"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "familyName": {
                              "name": "familyName",
                              "type": "string",
                              "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                            },
                            "givenName": {
                              "name": "givenName",
                              "type": "string",
                              "description": "First name of the individual"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "properties": {
                            "isLegalEntity": {
                              "name": "isLegalEntity",
                              "type": "boolean",
                              "description": "If value is true, the organization is a legal entity known by a national referential."
                            },
                            "isHeadOffice": {
                              "name": "isHeadOffice",
                              "type": "boolean",
                              "description": "If value is true, the organization is the head office"
                            },
                            "organizationType": {
                              "name": "organizationType",
                              "type": "string",
                              "description": "Type of Organization (company, department...)"
                            },
                            "existsDuring": {
                              "name": "existsDuring",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Organization name (department name for example)"
                            },
                            "nameType": {
                              "name": "nameType",
                              "type": "string",
                              "description": "Type of the name : Co, Inc, Ltd, etc."
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Valid values for the lifecycle state of the organization",
                              "enum": [
                                "initialized",
                                "validated",
                                "closed"
                              ]
                            },
                            "otherName": {
                              "name": "otherName",
                              "type": "array",
                              "description": "List of additional names by which the organization is known",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "tradingName": {
                                    "name": "tradingName",
                                    "type": "string",
                                    "description": "The name that the organization trades under"
                                  },
                                  "nameType": {
                                    "name": "nameType",
                                    "type": "string",
                                    "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Organization name (department name for example)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "organizationIdentification": {
                              "name": "organizationIdentification",
                              "type": "array",
                              "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "identificationId": {
                                    "name": "identificationId",
                                    "type": "string",
                                    "description": "Identifier"
                                  },
                                  "issuingAuthority": {
                                    "name": "issuingAuthority",
                                    "type": "string",
                                    "description": "Authority which has issued the identifier (chamber of commerce...)"
                                  },
                                  "issuingDate": {
                                    "name": "issuingDate",
                                    "type": "string",
                                    "description": "Date at which the identifier was issued",
                                    "format": "date-time"
                                  },
                                  "identificationType": {
                                    "name": "identificationType",
                                    "type": "string",
                                    "description": "Type of identification information used to identify the company in a country or internationally"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "organizationChildRelationship": {
                              "name": "organizationChildRelationship",
                              "type": "array",
                              "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                  },
                                  "organization": {
                                    "name": "organization",
                                    "type": "object",
                                    "properties": {}
                                  }
                                }
                              }
                            },
                            "organizationParentRelationship": {
                              "name": "organizationParentRelationship",
                              "type": "object",
                              "properties": {
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                },
                                "organization": {
                                  "name": "organization",
                                  "type": "object",
                                  "description": "Reference to OrganizationRef"
                                }
                              }
                            },
                            "tradingName": {
                              "name": "tradingName",
                              "type": "string",
                              "description": "Name that the organization (unit) trades under"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_4",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A description of the PartyRole."
                            },
                            "role": {
                              "name": "role",
                              "type": "string",
                              "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
                            },
                            "engagedParty": {
                              "name": "engagedParty",
                              "type": "object",
                              "description": "Reference to PartyRef"
                            },
                            "partyRoleSpecification": {
                              "name": "partyRoleSpecification",
                              "type": "object",
                              "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                              "properties": {}
                            },
                            "characteristic": {
                              "name": "characteristic",
                              "type": "array",
                              "description": "Describes the characteristic of a party role.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "account": {
                              "name": "account",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Account reference. A account may be a party account or a financial account.",
                                "properties": {}
                              }
                            },
                            "agreement": {
                              "name": "agreement",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to AgreementRef"
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier for this contact medium."
                                  },
                                  "preferred": {
                                    "name": "preferred",
                                    "type": "boolean",
                                    "description": "If true, indicates that is the preferred contact medium"
                                  },
                                  "contactType": {
                                    "name": "contactType",
                                    "type": "string",
                                    "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "paymentMethod": {
                              "name": "paymentMethod",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                "properties": {}
                              }
                            },
                            "creditProfile": {
                              "name": "creditProfile",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditProfileDate": {
                                    "name": "creditProfileDate",
                                    "type": "string",
                                    "description": "The date the profile was established",
                                    "format": "date-time"
                                  },
                                  "creditRiskRating": {
                                    "name": "creditRiskRating",
                                    "type": "integer",
                                    "description": "This is an integer whose value is used to rate the risk"
                                  },
                                  "creditScore": {
                                    "name": "creditScore",
                                    "type": "integer",
                                    "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Used to track the lifecycle status of the party role."
                            },
                            "statusReason": {
                              "name": "statusReason",
                              "type": "string",
                              "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_5",
                          "type": "object",
                          "description": "When business partner is the Supplier ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_6",
                          "type": "object",
                          "description": "When business partner is the BusinessPartner ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_7",
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_8",
                          "type": "object",
                          "properties": {}
                        }
                      ]
                    }
                  }
                }
              },
              "requestedCompletionDate": {
                "name": "requestedCompletionDate",
                "type": "string",
                "description": "Requested completion date from the requestors perspective",
                "format": "date-time"
              },
              "requestedStartDate": {
                "name": "requestedStartDate",
                "type": "string",
                "description": "Order fulfillment start date wished by the requestor. This is used when, for any reason, requestor cannot allow provider to begin to operationally begin the fulfillment before a date.",
                "format": "date-time"
              },
              "startDate": {
                "name": "startDate",
                "type": "string",
                "description": "Date when the order started",
                "format": "date-time"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Possible values for the state of the order",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "pending",
                  "held",
                  "inProgress",
                  "cancelled",
                  "completed",
                  "failed",
                  "partial",
                  "assessingCancellation",
                  "pendingCancellation"
                ]
              },
              "stateChangeDate": {
                "name": "stateChangeDate",
                "type": "string",
                "description": "Last change date of the order state.",
                "format": "date-time"
              },
              "workOrderItem": {
                "name": "workOrderItem",
                "type": "array",
                "description": "Work order item",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "action": {
                      "name": "action",
                      "type": "string",
                      "description": "action to be performed on the product",
                      "enum": [
                        "add",
                        "modify",
                        "delete",
                        "noChange"
                      ]
                    },
                    "appointment": {
                      "name": "appointment",
                      "type": "object",
                      "description": "Reference to AppointmentRef"
                    },
                    "billingAccount": {
                      "name": "billingAccount",
                      "type": "object",
                      "description": "Reference to BillingAccountRef"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "Description of the Order Item"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the line item (generally it is a sequence number 01, 02, 03, ...)"
                    },
                    "itemPrice": {
                      "name": "itemPrice",
                      "type": "array",
                      "description": "Price per item",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to OrderPrice"
                      }
                    },
                    "itemTotalPrice": {
                      "name": "itemTotalPrice",
                      "type": "array",
                      "description": "Item total price",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to OrderPrice"
                      }
                    },
                    "note": {
                      "name": "note",
                      "type": "object",
                      "description": "Reference to Note"
                    },
                    "productOrderItem": {
                      "name": "productOrderItem",
                      "type": "array",
                      "description": "Product Order Item",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "ProductOrderHref": {
                            "name": "ProductOrderHref",
                            "type": "string",
                            "description": "Reference of the related ProductOrder."
                          },
                          "@referredType": {
                            "name": "@referredType",
                            "type": "string",
                            "description": "The actual type of the target instance when needed for disambiguation."
                          },
                          "productOrderId": {
                            "name": "productOrderId",
                            "type": "string",
                            "description": "Unique identifier of a refered product order."
                          },
                          "productOrderItemId": {
                            "name": "productOrderItemId",
                            "type": "string",
                            "description": "Identifier of a product order item. "
                          }
                        }
                      }
                    },
                    "product": {
                      "name": "product",
                      "type": "object",
                      "description": "A Product reference",
                      "properties": {}
                    },
                    "payment": {
                      "name": "payment",
                      "type": "array",
                      "description": "Payment reference",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to PaymentRef"
                      }
                    },
                    "relatedEntity": {
                      "name": "relatedEntity",
                      "type": "array",
                      "description": "Related entity",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to RelatedEntity"
                      }
                    },
                    "state": {
                      "name": "state",
                      "type": "string",
                      "description": "Possible values for the state of the order",
                      "enum": [
                        "acknowledged",
                        "rejected",
                        "pending",
                        "held",
                        "inProgress",
                        "cancelled",
                        "completed",
                        "failed",
                        "partial",
                        "assessingCancellation",
                        "pendingCancellation"
                      ]
                    },
                    "work": {
                      "name": "work",
                      "type": "object",
                      "description": "A Unit of Work defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation &amp; @referredType are related to the work entity and not the related WorkRefOrValue class itself",
                      "properties": {}
                    },
                    "workOrderItem": {
                      "name": "workOrderItem",
                      "type": "array",
                      "description": "Work Order item",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to WorkOrderItem"
                      }
                    },
                    "workOrderItemRelationship": {
                      "name": "workOrderItemRelationship",
                      "type": "array",
                      "description": "Work Order Item Relationship",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Id of the related Order item (must be in the same Order)"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Relationship type as relies on, bundles, etc..."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "workOrderRelationship": {
                "name": "workOrderRelationship",
                "type": "array",
                "description": "Work order relationship",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "id": {
                      "name": "id",
                      "type": "string"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "The type of order relationship"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "productOfferingRiskAssessment": {
    "tableName": "ProductOfferingRiskAssessment",
    "endpoints": [
      {
        "operationId": "listProductOfferingRiskAssessment",
        "path": "/productOfferingRiskAssessment",
        "method": "get"
      },
      {
        "operationId": "createProductOfferingRiskAssessment",
        "path": "/productOfferingRiskAssessment",
        "method": "post"
      },
      {
        "operationId": "retrieveProductOfferingRiskAssessment",
        "path": "/productOfferingRiskAssessment/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProductOfferingRiskAssessment",
        "path": "/productOfferingRiskAssessment/{id}",
        "method": "delete"
      }
    ]
  },
  "partyRoleRiskAssessment": {
    "tableName": "PartyRoleRiskAssessment",
    "endpoints": [
      {
        "operationId": "listPartyRoleRiskAssessment",
        "path": "/partyRoleRiskAssessment",
        "method": "get"
      },
      {
        "operationId": "createPartyRoleRiskAssessment",
        "path": "/partyRoleRiskAssessment",
        "method": "post"
      },
      {
        "operationId": "retrievePartyRoleRiskAssessment",
        "path": "/partyRoleRiskAssessment/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartyRoleRiskAssessment",
        "path": "/partyRoleRiskAssessment/{id}",
        "method": "delete"
      }
    ]
  },
  "partyRoleProductOfferingRiskAssessment": {
    "tableName": "PartyRoleProductOfferingRiskAssessment",
    "endpoints": [
      {
        "operationId": "listPartyRoleProductOfferingRiskAssessment",
        "path": "/partyRoleProductOfferingRiskAssessment",
        "method": "get"
      },
      {
        "operationId": "createPartyRoleProductOfferingRiskAssessment",
        "path": "/partyRoleProductOfferingRiskAssessment",
        "method": "post"
      },
      {
        "operationId": "retrievePartyRoleProductOfferingRiskAssessment",
        "path": "/partyRoleProductOfferingRiskAssessment/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartyRoleProductOfferingRiskAssessment",
        "path": "/partyRoleProductOfferingRiskAssessment/{id}",
        "method": "delete"
      }
    ]
  },
  "shoppingCartRiskAssessment": {
    "tableName": "ShoppingCartRiskAssessment",
    "endpoints": [
      {
        "operationId": "listShoppingCartRiskAssessment",
        "path": "/shoppingCartRiskAssessment",
        "method": "get"
      },
      {
        "operationId": "createShoppingCartRiskAssessment",
        "path": "/shoppingCartRiskAssessment",
        "method": "post"
      },
      {
        "operationId": "retrieveShoppingCartRiskAssessment",
        "path": "/shoppingCartRiskAssessment/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteShoppingCartRiskAssessment",
        "path": "/shoppingCartRiskAssessment/{id}",
        "method": "delete"
      }
    ]
  },
  "productOrderRiskAssessment": {
    "tableName": "ProductOrderRiskAssessment",
    "endpoints": [
      {
        "operationId": "listProductOrderRiskAssessment",
        "path": "/productOrderRiskAssessment",
        "method": "get"
      },
      {
        "operationId": "createProductOrderRiskAssessment",
        "path": "/productOrderRiskAssessment",
        "method": "post"
      },
      {
        "operationId": "retrieveProductOrderRiskAssessment",
        "path": "/productOrderRiskAssessment/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProductOrderRiskAssessment",
        "path": "/productOrderRiskAssessment/{id}",
        "method": "delete"
      }
    ]
  },
  "userinfo": {
    "tableName": "Userinfo",
    "endpoints": [
      {
        "operationId": "listUserinfo",
        "path": "/userinfo",
        "method": "get"
      },
      {
        "operationId": "retrieveUserinfo",
        "path": "/userinfo/{id}",
        "method": "get"
      }
    ]
  },
  "productStock": {
    "tableName": "ProductStock",
    "endpoints": [
      {
        "operationId": "listProductStock",
        "path": "/productStock",
        "method": "get"
      },
      {
        "operationId": "createProductStock",
        "path": "/productStock",
        "method": "post"
      },
      {
        "operationId": "retrieveProductStock",
        "path": "/productStock/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProductStock",
        "path": "/productStock/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchProductStock",
        "path": "/productStock/{id}",
        "method": "patch"
      }
    ]
  },
  "adjustProductStock": {
    "tableName": "AdjustProductStock",
    "endpoints": [
      {
        "operationId": "listAdjustProductStock",
        "path": "/adjustProductStock",
        "method": "get"
      },
      {
        "operationId": "createAdjustProductStock",
        "path": "/adjustProductStock",
        "method": "post"
      },
      {
        "operationId": "retrieveAdjustProductStock",
        "path": "/adjustProductStock/{id}",
        "method": "get"
      }
    ]
  },
  "checkProductStock": {
    "tableName": "CheckProductStock",
    "endpoints": [
      {
        "operationId": "listCheckProductStock",
        "path": "/checkProductStock",
        "method": "get"
      },
      {
        "operationId": "createCheckProductStock",
        "path": "/checkProductStock",
        "method": "post"
      },
      {
        "operationId": "retrieveCheckProductStock",
        "path": "/checkProductStock/{id}",
        "method": "get"
      }
    ]
  },
  "reserveProductStock": {
    "tableName": "ReserveProductStock",
    "endpoints": [
      {
        "operationId": "listReserveProductStock",
        "path": "/reserveProductStock",
        "method": "get"
      },
      {
        "operationId": "createReserveProductStock",
        "path": "/reserveProductStock",
        "method": "post"
      },
      {
        "operationId": "retrieveReserveProductStock",
        "path": "/reserveProductStock/{id}",
        "method": "get"
      }
    ]
  },
  "queryProductStock": {
    "tableName": "QueryProductStock",
    "endpoints": [
      {
        "operationId": "listQueryProductStock",
        "path": "/queryProductStock",
        "method": "get"
      },
      {
        "operationId": "createQueryProductStock",
        "path": "/queryProductStock",
        "method": "post"
      },
      {
        "operationId": "retrieveQueryProductStock",
        "path": "/queryProductStock/{id}",
        "method": "get"
      }
    ]
  },
  "graph": {
    "tableName": "Graph",
    "endpoints": [
      {
        "operationId": "listGraph",
        "path": "/graph",
        "method": "get"
      },
      {
        "operationId": "createGraph",
        "path": "/graph",
        "method": "post"
      },
      {
        "operationId": "retrieveGraph",
        "path": "/graph/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteGraph",
        "path": "/graph/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchGraph",
        "path": "/graph/{id}",
        "method": "patch"
      }
    ]
  },
  "vertex": {
    "tableName": "Vertex",
    "endpoints": [
      {
        "operationId": "listVertex",
        "path": "/graph/{graphId}/vertex",
        "method": "get"
      },
      {
        "operationId": "createVertex",
        "path": "/graph/{graphId}/vertex",
        "method": "post"
      },
      {
        "operationId": "retrieveVertex",
        "path": "/graph/{graphId}/vertex/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteVertex",
        "path": "/graph/{graphId}/vertex/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchVertex",
        "path": "/graph/{graphId}/vertex/{id}",
        "method": "patch"
      }
    ]
  },
  "edge": {
    "tableName": "Edge",
    "endpoints": [
      {
        "operationId": "listEdge",
        "path": "/graph/{graphId}/edge",
        "method": "get"
      },
      {
        "operationId": "createEdge",
        "path": "/graph/{graphId}/edge",
        "method": "post"
      },
      {
        "operationId": "retrieveEdge",
        "path": "/graph/{graphId}/edge/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteEdge",
        "path": "/graph/{graphId}/edge/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchEdge",
        "path": "/graph/{graphId}/edge/{id}",
        "method": "patch"
      }
    ]
  },
  "vertexSpecification": {
    "tableName": "VertexSpecification",
    "endpoints": [
      {
        "operationId": "listVertexSpecification",
        "path": "/vertexSpecification",
        "method": "get"
      },
      {
        "operationId": "createVertexSpecification",
        "path": "/vertexSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveVertexSpecification",
        "path": "/vertexSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteVertexSpecification",
        "path": "/vertexSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchVertexSpecification",
        "path": "/vertexSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "edgeSpecification": {
    "tableName": "EdgeSpecification",
    "endpoints": [
      {
        "operationId": "listEdgeSpecification",
        "path": "/edgeSpecification",
        "method": "get"
      },
      {
        "operationId": "createEdgeSpecification",
        "path": "/edgeSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveEdgeSpecification",
        "path": "/edgeSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteEdgeSpecification",
        "path": "/edgeSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchEdgeSpecification",
        "path": "/edgeSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "topologyDiscoveryJob": {
    "tableName": "TopologyDiscoveryJob",
    "endpoints": [
      {
        "operationId": "listTopologyDiscoveryJob",
        "path": "/topologyDiscoveryJob",
        "method": "get"
      },
      {
        "operationId": "createTopologyDiscoveryJob",
        "path": "/topologyDiscoveryJob",
        "method": "post"
      },
      {
        "operationId": "retrieveTopologyDiscoveryJob",
        "path": "/topologyDiscoveryJob/{id}",
        "method": "get"
      },
      {
        "operationId": "patchTopologyDiscoveryJob",
        "path": "/topologyDiscoveryJob/{id}",
        "method": "patch"
      }
    ]
  },
  "mergeTopologyGraphJob": {
    "tableName": "MergeTopologyGraphJob",
    "endpoints": [
      {
        "operationId": "listMergeTopologyGraphJob",
        "path": "/mergeTopologyGraphJob",
        "method": "get"
      },
      {
        "operationId": "createMergeTopologyGraphJob",
        "path": "/mergeTopologyGraphJob",
        "method": "post"
      },
      {
        "operationId": "retrieveMergeTopologyGraphJob",
        "path": "/mergeTopologyGraphJob/{id}",
        "method": "get"
      },
      {
        "operationId": "patchMergeTopologyGraphJob",
        "path": "/mergeTopologyGraphJob/{id}",
        "method": "patch"
      }
    ]
  },
  "topologyQueryJob": {
    "tableName": "TopologyQueryJob",
    "endpoints": [
      {
        "operationId": "listTopologyQueryJob",
        "path": "/topologyQueryJob",
        "method": "get"
      },
      {
        "operationId": "createTopologyQueryJob",
        "path": "/topologyQueryJob",
        "method": "post"
      },
      {
        "operationId": "retrieveTopologyQueryJob",
        "path": "/topologyQueryJob/{id}",
        "method": "get"
      },
      {
        "operationId": "patchTopologyQueryJob",
        "path": "/topologyQueryJob/{id}",
        "method": "patch"
      }
    ]
  },
  "reservation": {
    "tableName": "Reservation",
    "endpoints": [
      {
        "operationId": "listReservation",
        "path": "/reservation",
        "method": "get"
      },
      {
        "operationId": "createReservation",
        "path": "/reservation",
        "method": "post"
      },
      {
        "operationId": "retrieveReservation",
        "path": "/reservation/{id}",
        "method": "get"
      },
      {
        "operationId": "patchReservation",
        "path": "/reservation/{id}",
        "method": "patch"
      }
    ]
  },
  "resourcePool": {
    "tableName": "ResourcePool",
    "endpoints": [
      {
        "operationId": "createResourcePool",
        "path": "/resourcePool",
        "method": "post"
      },
      {
        "operationId": "deleteResourcePool",
        "path": "/resourcePool/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResourcePool",
        "path": "/resourcePool/{id}",
        "method": "patch"
      }
    ]
  },
  "availabilityCheck": {
    "tableName": "AvailabilityCheck",
    "endpoints": [
      {
        "operationId": "createAvailabilityCheck",
        "path": "/availabilityCheck",
        "method": "post"
      }
    ]
  },
  "push": {
    "tableName": "Push",
    "endpoints": [
      {
        "operationId": "createPush",
        "path": "/push",
        "method": "post"
      }
    ]
  },
  "extract": {
    "tableName": "Extract",
    "endpoints": [
      {
        "operationId": "createExtract",
        "path": "/extract",
        "method": "post"
      }
    ]
  },
  "trackings": {
    "tableName": "Trackings",
    "endpoints": [
      {
        "operationId": "retrieveTrackings",
        "path": "/shipmentTracking",
        "method": "get"
      },
      {
        "operationId": "createTracking",
        "path": "/shipmentTracking",
        "method": "post"
      },
      {
        "operationId": "retrieveTracking",
        "path": "/shipmentTracking/{trackingId}",
        "method": "get"
      },
      {
        "operationId": "deleteTracking",
        "path": "/shipmentTracking/{trackingId}",
        "method": "delete"
      },
      {
        "operationId": "modifyTracking",
        "path": "/shipmentTracking/{trackingId}",
        "method": "patch"
      },
      {
        "operationId": "createTrackingCheckpoint",
        "path": "/shipmentTracking/{trackingId}/checkpoint",
        "method": "post"
      }
    ]
  },
  "partyInteraction": {
    "tableName": "PartyInteraction",
    "endpoints": [
      {
        "operationId": "listPartyInteraction",
        "path": "/partyInteraction",
        "method": "get"
      },
      {
        "operationId": "createPartyInteraction",
        "path": "/partyInteraction",
        "method": "post"
      },
      {
        "operationId": "retrievePartyInteraction",
        "path": "/partyInteraction/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartyInteraction",
        "path": "/partyInteraction/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPartyInteraction",
        "path": "/partyInteraction/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "relatedChannel": {
                "name": "relatedChannel",
                "type": "array",
                "description": "Where the interaction took place (e.g. web, mobile app, store, kiosk, etc.)",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "channel": {
                      "name": "channel",
                      "type": "object",
                      "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
                      "properties": {}
                    }
                  }
                }
              },
              "direction": {
                "name": "direction",
                "type": "string",
                "description": "Specifies who started the interaction. It might be the party or the enterprise exposing this API. Possible values are “inbound” and “outbound”"
              },
              "reason": {
                "name": "reason",
                "type": "string",
                "description": "Reason why the interaction happened"
              },
              "interactionDate": {
                "name": "interactionDate",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the interaction"
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Status of the interaction (opened, inProgress, completed)"
              },
              "statusChangeDate": {
                "name": "statusChangeDate",
                "type": "string",
                "description": "Last time the status changed",
                "format": "date-time"
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date when the interaction was created in the system",
                "format": "date-time"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date when the interaction last updated in the system",
                "format": "date-time"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "properties": {
                            "gender": {
                              "name": "gender",
                              "type": "string",
                              "description": "Gender"
                            },
                            "placeOfBirth": {
                              "name": "placeOfBirth",
                              "type": "string",
                              "description": "Reference to the place where the individual was born"
                            },
                            "countryOfBirth": {
                              "name": "countryOfBirth",
                              "type": "string",
                              "description": "Country where the individual was born"
                            },
                            "nationality": {
                              "name": "nationality",
                              "type": "string",
                              "description": "Nationality"
                            },
                            "maritalStatus": {
                              "name": "maritalStatus",
                              "type": "string",
                              "description": "Marital status (married, divorced, widow ...)"
                            },
                            "birthDate": {
                              "name": "birthDate",
                              "type": "string",
                              "description": "Birth date",
                              "format": "date-time"
                            },
                            "deathDate": {
                              "name": "deathDate",
                              "type": "string",
                              "description": "Date of death",
                              "format": "date-time"
                            },
                            "title": {
                              "name": "title",
                              "type": "string",
                              "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                            },
                            "aristocraticTitle": {
                              "name": "aristocraticTitle",
                              "type": "string",
                              "description": "e.g. Baron, Graf, Earl"
                            },
                            "generation": {
                              "name": "generation",
                              "type": "string",
                              "description": "e.g.. Sr, Jr, III (the third)"
                            },
                            "preferredGivenName": {
                              "name": "preferredGivenName",
                              "type": "string",
                              "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                            },
                            "familyNamePrefix": {
                              "name": "familyNamePrefix",
                              "type": "string",
                              "description": "Family name prefix"
                            },
                            "legalName": {
                              "name": "legalName",
                              "type": "string",
                              "description": "Legal name or birth name (name one has for official purposes)"
                            },
                            "middleName": {
                              "name": "middleName",
                              "type": "string",
                              "description": "Middles name or initial"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                            },
                            "formattedName": {
                              "name": "formattedName",
                              "type": "string",
                              "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                            },
                            "location": {
                              "name": "location",
                              "type": "string",
                              "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Valid values for the lifecycle state of the individual",
                              "enum": [
                                "initialized",
                                "validated",
                                "deceased"
                              ]
                            },
                            "otherName": {
                              "name": "otherName",
                              "type": "array",
                              "description": "List of other names by which this individual is known",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                "properties": {
                                  "title": {
                                    "name": "title",
                                    "type": "string",
                                    "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                  },
                                  "aristocraticTitle": {
                                    "name": "aristocraticTitle",
                                    "type": "string",
                                    "description": "e.g. Baron, Graf, Earl, etc."
                                  },
                                  "generation": {
                                    "name": "generation",
                                    "type": "string",
                                    "description": "e.g. Sr, Jr, etc."
                                  },
                                  "givenName": {
                                    "name": "givenName",
                                    "type": "string",
                                    "description": "First name"
                                  },
                                  "preferredGivenName": {
                                    "name": "preferredGivenName",
                                    "type": "string",
                                    "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                  },
                                  "familyNamePrefix": {
                                    "name": "familyNamePrefix",
                                    "type": "string",
                                    "description": "Family name prefix"
                                  },
                                  "familyName": {
                                    "name": "familyName",
                                    "type": "string",
                                    "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                  },
                                  "legalName": {
                                    "name": "legalName",
                                    "type": "string",
                                    "description": "Legal name or birth name (name one has for official purposes)"
                                  },
                                  "middleName": {
                                    "name": "middleName",
                                    "type": "string",
                                    "description": "Middle name or initial"
                                  },
                                  "fullName": {
                                    "name": "fullName",
                                    "type": "string",
                                    "description": "Full name flatten (first, middle, and last names)"
                                  },
                                  "formattedName": {
                                    "name": "formattedName",
                                    "type": "string",
                                    "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "individualIdentification": {
                              "name": "individualIdentification",
                              "type": "array",
                              "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "identificationId": {
                                    "name": "identificationId",
                                    "type": "string",
                                    "description": "Identifier"
                                  },
                                  "issuingAuthority": {
                                    "name": "issuingAuthority",
                                    "type": "string",
                                    "description": "Authority which has issued the identifier, such as: social security, town hall"
                                  },
                                  "issuingDate": {
                                    "name": "issuingDate",
                                    "type": "string",
                                    "description": "Date at which the identifier was issued",
                                    "format": "date-time"
                                  },
                                  "identificationType": {
                                    "name": "identificationType",
                                    "type": "string",
                                    "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "union",
                                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                    "oneOf": [
                                      {
                                        "name": "attachment_variant_0",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "The name of the attachment"
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A narrative text describing the content of the attachment"
                                          },
                                          "url": {
                                            "name": "url",
                                            "type": "string",
                                            "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                          },
                                          "content": {
                                            "name": "content",
                                            "type": "string",
                                            "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                            "format": "base64"
                                          },
                                          "size": {
                                            "name": "size",
                                            "type": "object",
                                            "description": "An amount in a given unit",
                                            "properties": {
                                              "amount": {
                                                "name": "amount",
                                                "type": "number",
                                                "description": "Numeric value in a given unit",
                                                "format": "float"
                                              },
                                              "units": {
                                                "name": "units",
                                                "type": "string",
                                                "description": "Unit"
                                              }
                                            }
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "attachmentType": {
                                            "name": "attachmentType",
                                            "type": "string",
                                            "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                          },
                                          "mimeType": {
                                            "name": "mimeType",
                                            "type": "string",
                                            "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                          }
                                        }
                                      },
                                      {
                                        "name": "attachment_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A narrative text describing the content of the attachment"
                                          },
                                          "url": {
                                            "name": "url",
                                            "type": "string",
                                            "description": "Link to the attachment media/content"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "disability": {
                              "name": "disability",
                              "type": "array",
                              "description": "List of disabilities suffered by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Lack or inadequate strength or ability.",
                                "properties": {
                                  "disabilityCode": {
                                    "name": "disabilityCode",
                                    "type": "string",
                                    "description": "Code of the disability"
                                  },
                                  "disabilityName": {
                                    "name": "disabilityName",
                                    "type": "string",
                                    "description": "Name of the disability"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "languageAbility": {
                              "name": "languageAbility",
                              "type": "array",
                              "description": "List of national languages known by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Ability of an individual to understand or converse in a language.",
                                "properties": {
                                  "languageCode": {
                                    "name": "languageCode",
                                    "type": "string",
                                    "description": "Language code (RFC 5646)"
                                  },
                                  "languageName": {
                                    "name": "languageName",
                                    "type": "string",
                                    "description": "Language name"
                                  },
                                  "isFavouriteLanguage": {
                                    "name": "isFavouriteLanguage",
                                    "type": "boolean",
                                    "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                  },
                                  "writingProficiency": {
                                    "name": "writingProficiency",
                                    "type": "string",
                                    "description": "Writing proficiency evaluated for this language"
                                  },
                                  "readingProficiency": {
                                    "name": "readingProficiency",
                                    "type": "string",
                                    "description": "Reading proficiency evaluated for this language"
                                  },
                                  "speakingProficiency": {
                                    "name": "speakingProficiency",
                                    "type": "string",
                                    "description": "Speaking proficiency evaluated for this language"
                                  },
                                  "listeningProficiency": {
                                    "name": "listeningProficiency",
                                    "type": "string",
                                    "description": "Listening proficiency evaluated for this language"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "skill": {
                              "name": "skill",
                              "type": "array",
                              "description": "List of skills exhibited by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                "properties": {
                                  "skillCode": {
                                    "name": "skillCode",
                                    "type": "string",
                                    "description": "Code of the skill"
                                  },
                                  "skillName": {
                                    "name": "skillName",
                                    "type": "string",
                                    "description": "Name of the skill, such as Java language"
                                  },
                                  "evaluatedLevel": {
                                    "name": "evaluatedLevel",
                                    "type": "string",
                                    "description": "Level of expertise in a skill evaluated for an individual"
                                  },
                                  "comment": {
                                    "name": "comment",
                                    "type": "string",
                                    "description": "A free text comment linked to the evaluation done"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "familyName": {
                              "name": "familyName",
                              "type": "string",
                              "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                            },
                            "givenName": {
                              "name": "givenName",
                              "type": "string",
                              "description": "First name of the individual"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "properties": {
                            "isLegalEntity": {
                              "name": "isLegalEntity",
                              "type": "boolean",
                              "description": "If value is true, the organization is a legal entity known by a national referential."
                            },
                            "isHeadOffice": {
                              "name": "isHeadOffice",
                              "type": "boolean",
                              "description": "If value is true, the organization is the head office"
                            },
                            "organizationType": {
                              "name": "organizationType",
                              "type": "string",
                              "description": "Type of Organization (company, department...)"
                            },
                            "existsDuring": {
                              "name": "existsDuring",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Organization name (department name for example)"
                            },
                            "nameType": {
                              "name": "nameType",
                              "type": "string",
                              "description": "Type of the name : Co, Inc, Ltd, etc."
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Valid values for the lifecycle state of the organization",
                              "enum": [
                                "initialized",
                                "validated",
                                "closed"
                              ]
                            },
                            "otherName": {
                              "name": "otherName",
                              "type": "array",
                              "description": "List of additional names by which the organization is known",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "tradingName": {
                                    "name": "tradingName",
                                    "type": "string",
                                    "description": "The name that the organization trades under"
                                  },
                                  "nameType": {
                                    "name": "nameType",
                                    "type": "string",
                                    "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Organization name (department name for example)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "organizationIdentification": {
                              "name": "organizationIdentification",
                              "type": "array",
                              "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "identificationId": {
                                    "name": "identificationId",
                                    "type": "string",
                                    "description": "Identifier"
                                  },
                                  "issuingAuthority": {
                                    "name": "issuingAuthority",
                                    "type": "string",
                                    "description": "Authority which has issued the identifier (chamber of commerce...)"
                                  },
                                  "issuingDate": {
                                    "name": "issuingDate",
                                    "type": "string",
                                    "description": "Date at which the identifier was issued",
                                    "format": "date-time"
                                  },
                                  "identificationType": {
                                    "name": "identificationType",
                                    "type": "string",
                                    "description": "Type of identification information used to identify the company in a country or internationally"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "organizationChildRelationship": {
                              "name": "organizationChildRelationship",
                              "type": "array",
                              "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                  },
                                  "organization": {
                                    "name": "organization",
                                    "type": "object",
                                    "properties": {}
                                  }
                                }
                              }
                            },
                            "organizationParentRelationship": {
                              "name": "organizationParentRelationship",
                              "type": "object",
                              "properties": {
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                },
                                "organization": {
                                  "name": "organization",
                                  "type": "object",
                                  "description": "Reference to OrganizationRef"
                                }
                              }
                            },
                            "tradingName": {
                              "name": "tradingName",
                              "type": "string",
                              "description": "Name that the organization (unit) trades under"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_4",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A description of the PartyRole."
                            },
                            "role": {
                              "name": "role",
                              "type": "string",
                              "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
                            },
                            "engagedParty": {
                              "name": "engagedParty",
                              "type": "object",
                              "description": "Reference to PartyRef"
                            },
                            "partyRoleSpecification": {
                              "name": "partyRoleSpecification",
                              "type": "object",
                              "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                              "properties": {}
                            },
                            "characteristic": {
                              "name": "characteristic",
                              "type": "array",
                              "description": "Describes the characteristic of a party role.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "account": {
                              "name": "account",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Account reference. A account may be a party account or a financial account.",
                                "properties": {}
                              }
                            },
                            "agreement": {
                              "name": "agreement",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                "properties": {}
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier for this contact medium."
                                  },
                                  "preferred": {
                                    "name": "preferred",
                                    "type": "boolean",
                                    "description": "If true, indicates that is the preferred contact medium"
                                  },
                                  "contactType": {
                                    "name": "contactType",
                                    "type": "string",
                                    "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "paymentMethod": {
                              "name": "paymentMethod",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                "properties": {}
                              }
                            },
                            "creditProfile": {
                              "name": "creditProfile",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditProfileDate": {
                                    "name": "creditProfileDate",
                                    "type": "string",
                                    "description": "The date the profile was established",
                                    "format": "date-time"
                                  },
                                  "creditRiskRating": {
                                    "name": "creditRiskRating",
                                    "type": "integer",
                                    "description": "This is an integer whose value is used to rate the risk"
                                  },
                                  "creditScore": {
                                    "name": "creditScore",
                                    "type": "integer",
                                    "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Used to track the lifecycle status of the party role."
                            },
                            "statusReason": {
                              "name": "statusReason",
                              "type": "string",
                              "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_5",
                          "type": "object",
                          "description": "When business partner is the Supplier ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_6",
                          "type": "object",
                          "description": "When business partner is the BusinessPartner ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_7",
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_8",
                          "type": "object",
                          "properties": {}
                        }
                      ]
                    }
                  }
                }
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to AttachmentRefOrValue"
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "interactionItem": {
                "name": "interactionItem",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the interaction item"
                    },
                    "itemDate": {
                      "name": "itemDate",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "reason": {
                      "name": "reason",
                      "type": "string",
                      "description": "Reason why this item is referred"
                    },
                    "resolution": {
                      "name": "resolution",
                      "type": "string",
                      "description": "Resolution of the interaction item"
                    },
                    "creationDate": {
                      "name": "creationDate",
                      "type": "string",
                      "description": "Date when the interaction item was created in the system",
                      "format": "date-time"
                    },
                    "lastUpdate": {
                      "name": "lastUpdate",
                      "type": "string",
                      "description": "Date when the interaction item was last updateed in the system",
                      "format": "date-time"
                    },
                    "item": {
                      "name": "item",
                      "type": "object",
                      "properties": {
                        "role": {
                          "name": "role",
                          "type": "string"
                        },
                        "entity": {
                          "name": "entity",
                          "type": "union",
                          "description": "",
                          "oneOf": [
                            {
                              "name": "entity_variant_0",
                              "type": "object",
                              "description": "Reference to Entity"
                            },
                            {
                              "name": "entity_variant_1",
                              "type": "object",
                              "description": "Reference to EntityRef"
                            }
                          ]
                        }
                      }
                    },
                    "relatedChannel": {
                      "name": "relatedChannel",
                      "type": "array",
                      "description": "Where the interaction item took place (e.g.: web, mobile app, store, kiosk, etc.)",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to RelatedChannel"
                      }
                    },
                    "relatedParty": {
                      "name": "relatedParty",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "role": {
                            "name": "role",
                            "type": "string",
                            "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                          },
                          "partyOrPartyRole": {
                            "name": "partyOrPartyRole",
                            "type": "union",
                            "description": "",
                            "oneOf": [
                              {
                                "name": "partyOrPartyRole_variant_0",
                                "type": "object",
                                "description": "Reference to PartyRef"
                              },
                              {
                                "name": "partyOrPartyRole_variant_1",
                                "type": "object",
                                "description": "Reference to PartyRoleRef"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "attachment": {
                      "name": "attachment",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to AttachmentRefOrValue"
                      }
                    },
                    "note": {
                      "name": "note",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to Note"
                      }
                    },
                    "interactionItemRelationship": {
                      "name": "interactionItemRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the referenced to interaction item (must be in the same PartyInteraction"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of the interaction item relationship"
                          }
                        }
                      }
                    },
                    "interactionItemType": {
                      "name": "interactionItemType",
                      "type": "string",
                      "description": "Classification and sub-classification. E.g. Case (type) (subtype/s) Ticket, Incident"
                    }
                  }
                }
              },
              "interactionRelationship": {
                "name": "interactionRelationship",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Id of the related party interaction "
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Relationship type such as parent, handover, etc..."
                    }
                  }
                }
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "communicationMessage": {
    "tableName": "CommunicationMessage",
    "endpoints": [
      {
        "operationId": "listCommunicationMessage",
        "path": "/communicationMessage",
        "method": "get"
      },
      {
        "operationId": "createCommunicationMessage",
        "path": "/communicationMessage",
        "method": "post"
      },
      {
        "operationId": "retrieveCommunicationMessage",
        "path": "/communicationMessage/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteCommunicationMessage",
        "path": "/communicationMessage/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchCommunicationMessage",
        "path": "/communicationMessage/{id}",
        "method": "patch"
      }
    ]
  },
  "queryProductRecommendation": {
    "tableName": "QueryProductRecommendation",
    "endpoints": [
      {
        "operationId": "listQueryProductRecommendation",
        "path": "/queryProductRecommendation",
        "method": "get"
      },
      {
        "operationId": "createQueryProductRecommendation",
        "path": "/queryProductRecommendation",
        "method": "post"
      },
      {
        "operationId": "retrieveQueryProductRecommendation",
        "path": "/queryProductRecommendation/{id}",
        "method": "get"
      }
    ]
  },
  "checkProductOfferingQualification": {
    "tableName": "CheckProductOfferingQualification",
    "endpoints": [
      {
        "operationId": "listCheckProductOfferingQualification",
        "path": "/checkProductOfferingQualification",
        "method": "get"
      },
      {
        "operationId": "createCheckProductOfferingQualification",
        "path": "/checkProductOfferingQualification",
        "method": "post"
      },
      {
        "operationId": "retrieveCheckProductOfferingQualification",
        "path": "/checkProductOfferingQualification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteCheckProductOfferingQualification",
        "path": "/checkProductOfferingQualification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchCheckProductOfferingQualification",
        "path": "/checkProductOfferingQualification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "channel": {
                "name": "channel",
                "type": "object",
                "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
                "properties": {}
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the CheckProductOfferingQualification"
              },
              "effectiveQualificationDate": {
                "name": "effectiveQualificationDate",
                "type": "string",
                "description": "Effective date to CheckProductOfferingQualification completion",
                "format": "date-time"
              },
              "expectedQualificationCompletionDate": {
                "name": "expectedQualificationCompletionDate",
                "type": "string",
                "description": "Expected Date from server side to provide an answer for the check qualification request",
                "format": "date-time"
              },
              "expirationDate": {
                "name": "expirationDate",
                "type": "string",
                "description": "Date the qualification response expires",
                "format": "date-time"
              },
              "instantSyncQualification": {
                "name": "instantSyncQualification",
                "type": "boolean",
                "description": "A previous indicator which when the value is \"true\" means that requester expects to get qualifcation result immedi3ately in the response. If the indicator is true (or by default now without it) then the response code of 200 indicates the operation is successful otherwise a task is created with a response 201. For asynchronous, this attribute is now replaced by the header request \"Expect: 202-Accepted\""
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "Free form text associated with the qualification request",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "checkProductOfferingQualificationItem": {
                "name": "checkProductOfferingQualificationItem",
                "type": "array",
                "description": "Qualification item for a product or a category",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "expectedActivationDate": {
                      "name": "expectedActivationDate",
                      "type": "string",
                      "description": "Date when the requester look for productOfferingQualification activation",
                      "format": "date-time"
                    },
                    "eligibilityResultReason": {
                      "name": "eligibilityResultReason",
                      "type": "array",
                      "description": "Reason for understanding the eligibility result, whatever the result is (availability or unavailability).",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "label": {
                            "name": "label",
                            "type": "string",
                            "description": "human readable result reason label"
                          },
                          "code": {
                            "name": "code",
                            "type": "string",
                            "description": "Result reason code."
                          }
                        }
                      }
                    },
                    "qualificationItemRelationship": {
                      "name": "qualificationItemRelationship",
                      "type": "array",
                      "description": "Collecton of qualification item relationships",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Id of the related POQ item (must be in the same POQ)"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Relationship type as relies on, bundles, etc..."
                          }
                        }
                      }
                    },
                    "CheckProductOfferingQualificationItem": {
                      "name": "CheckProductOfferingQualificationItem",
                      "type": "array",
                      "description": "A structure to embed check qualification item within check qualification item",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to CheckProductOfferingQualificationItem"
                      }
                    },
                    "note": {
                      "name": "note",
                      "type": "array",
                      "description": "Collection of free form text associated with the qualification request ",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to Note"
                      }
                    },
                    "product": {
                      "name": "product",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product entity and not the ProductRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "product_variant_0",
                          "type": "object",
                          "properties": {
                            "agreementItem": {
                              "name": "agreementItem",
                              "type": "array",
                              "description": "Collection of agreements",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "agreementName": {
                                    "name": "agreementName",
                                    "type": "string",
                                    "description": "Name of the related entity."
                                  },
                                  "agreementHref": {
                                    "name": "agreementHref",
                                    "type": "string",
                                    "description": "Reference of the related entity."
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  },
                                  "agreementId": {
                                    "name": "agreementId",
                                    "type": "string",
                                    "description": "Unique identifier of a related entity."
                                  },
                                  "agreementItemId": {
                                    "name": "agreementItemId",
                                    "type": "string",
                                    "description": "Id of an item of a Agreement"
                                  }
                                }
                              }
                            },
                            "billingAccount": {
                              "name": "billingAccount",
                              "type": "object",
                              "properties": {
                                "ratingType": {
                                  "name": "ratingType",
                                  "type": "string",
                                  "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                                }
                              }
                            },
                            "creationDate": {
                              "name": "creationDate",
                              "type": "string",
                              "description": "Date and time when the product was created",
                              "format": "date-time"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Is the description of the product. It could be copied from the description of the Product Offering."
                            },
                            "isBundle": {
                              "name": "isBundle",
                              "type": "boolean",
                              "description": "If true, the product is a ProductBundle which is an instantiation of a BundledProductOffering. If false, the product is a ProductComponent which is an instantiation of a SimpleProductOffering."
                            },
                            "isCustomerVisible": {
                              "name": "isCustomerVisible",
                              "type": "boolean",
                              "description": "If true, the product is visible by the customer."
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the product. It could be the same as the name of the product offering"
                            },
                            "orderDate": {
                              "name": "orderDate",
                              "type": "string",
                              "description": "Is the date when the product was ordered",
                              "format": "date-time"
                            },
                            "productCharacteristic": {
                              "name": "productCharacteristic",
                              "type": "array",
                              "description": "Collection of product characteristics",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "description": "Collection of characteristic relationships",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "productOffering": {
                              "name": "productOffering",
                              "type": "object",
                              "properties": {
                                "version": {
                                  "name": "version",
                                  "type": "string",
                                  "description": "Version of the product offering"
                                }
                              }
                            },
                            "productOrderItem": {
                              "name": "productOrderItem",
                              "type": "array",
                              "description": "Collection of product order items",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "orderItemAction": {
                                    "name": "orderItemAction",
                                    "type": "string",
                                    "description": "action to be performed on the entity managed by the item",
                                    "enum": [
                                      "add",
                                      "modify",
                                      "delete",
                                      "noChange"
                                    ]
                                  },
                                  "orderHref": {
                                    "name": "orderHref",
                                    "type": "string",
                                    "description": "Reference of the related entity."
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  },
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the  Order"
                                  },
                                  "orderId": {
                                    "name": "orderId",
                                    "type": "string",
                                    "description": "Unique identifier of a related  Order."
                                  },
                                  "orderItemId": {
                                    "name": "orderItemId",
                                    "type": "string",
                                    "description": "Id of an item of a product order"
                                  }
                                }
                              }
                            },
                            "product": {
                              "name": "product",
                              "type": "array",
                              "description": "Collection of products",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ProductRefOrValue"
                              }
                            },
                            "productPrice": {
                              "name": "productPrice",
                              "type": "array",
                              "description": "Collection of product prices",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Description of the Product price"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the Product price"
                                  },
                                  "productOfferingPrice": {
                                    "name": "productOfferingPrice",
                                    "type": "object",
                                    "properties": {
                                      "version": {
                                        "name": "version",
                                        "type": "string",
                                        "description": "Version of the product offering price"
                                      }
                                    }
                                  },
                                  "recurringChargePeriod": {
                                    "name": "recurringChargePeriod",
                                    "type": "string",
                                    "description": "Used for recurring charge to indicate period (month, week, etc..)."
                                  },
                                  "unitOfMeasure": {
                                    "name": "unitOfMeasure",
                                    "type": "string",
                                    "description": "Unit of Measure if price depending on it (Gb, SMS volume, etc..)"
                                  },
                                  "price": {
                                    "name": "price",
                                    "type": "object",
                                    "properties": {
                                      "dutyFreeAmount": {
                                        "name": "dutyFreeAmount",
                                        "type": "object",
                                        "description": "A base / value business entity used to represent money",
                                        "properties": {
                                          "unit": {
                                            "name": "unit",
                                            "type": "string",
                                            "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                                          },
                                          "value": {
                                            "name": "value",
                                            "type": "number",
                                            "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                                            "format": "float"
                                          }
                                        }
                                      },
                                      "percentage": {
                                        "name": "percentage",
                                        "type": "number",
                                        "description": "Percentage to apply for ProdOfferPriceAlteration",
                                        "format": "float"
                                      },
                                      "taxIncludedAmount": {
                                        "name": "taxIncludedAmount",
                                        "type": "object",
                                        "description": "Reference to Money"
                                      },
                                      "taxRate": {
                                        "name": "taxRate",
                                        "type": "number",
                                        "description": "Tax rate",
                                        "format": "float"
                                      }
                                    }
                                  },
                                  "priceAlteration": {
                                    "name": "priceAlteration",
                                    "type": "array",
                                    "description": "Collection of price changes",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "applicationDuration": {
                                          "name": "applicationDuration",
                                          "type": "integer",
                                          "description": "Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge)"
                                        },
                                        "description": {
                                          "name": "description",
                                          "type": "string",
                                          "description": "A narrative that explains in detail the semantics of this order item price alteration"
                                        },
                                        "name": {
                                          "name": "name",
                                          "type": "string",
                                          "description": "Name of the order item price alteration"
                                        },
                                        "productOfferingPrice": {
                                          "name": "productOfferingPrice",
                                          "type": "object",
                                          "description": "Reference to ProductOfferingPriceRef"
                                        },
                                        "priceType": {
                                          "name": "priceType",
                                          "type": "string",
                                          "description": "A category that describes the price such as recurring, one time and usage."
                                        },
                                        "priority": {
                                          "name": "priority",
                                          "type": "integer",
                                          "description": "Priority level for applying this alteration among all the defined alterations on the order item price"
                                        },
                                        "recurringChargePeriod": {
                                          "name": "recurringChargePeriod",
                                          "type": "string",
                                          "description": "Could be month, week..."
                                        },
                                        "unitOfMeasure": {
                                          "name": "unitOfMeasure",
                                          "type": "string",
                                          "description": "Could be minutes, GB..."
                                        },
                                        "price": {
                                          "name": "price",
                                          "type": "object",
                                          "description": "Reference to Price"
                                        }
                                      }
                                    }
                                  },
                                  "priceType": {
                                    "name": "priceType",
                                    "type": "string",
                                    "description": "indicate if the price is for recurrent or no-recurrent charge"
                                  }
                                }
                              }
                            },
                            "productRelationship": {
                              "name": "productRelationship",
                              "type": "array",
                              "description": "Collection of product relationships",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Id of the related product"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Relationship type as relies on, bundles, etc..."
                                  }
                                }
                              }
                            },
                            "productSerialNumber": {
                              "name": "productSerialNumber",
                              "type": "string",
                              "description": "Is the serial number for the product. This is typically applicable to tangible products e.g. Broadband Router."
                            },
                            "productSpecification": {
                              "name": "productSpecification",
                              "type": "object",
                              "properties": {
                                "version": {
                                  "name": "version",
                                  "type": "string",
                                  "description": "Version of the product specification"
                                },
                                "targetProductSchema": {
                                  "name": "targetProductSchema",
                                  "type": "object",
                                  "description": "The reference object to the schema and type of target product which is described by product specification",
                                  "properties": {
                                    "@type": {
                                      "name": "@type",
                                      "type": "string",
                                      "description": "Class type of the target product"
                                    },
                                    "@schemaLocation": {
                                      "name": "@schemaLocation",
                                      "type": "string",
                                      "description": "This field provides a link to the schema describing the target product",
                                      "format": "uri"
                                    }
                                  }
                                }
                              }
                            },
                            "productTerm": {
                              "name": "productTerm",
                              "type": "array",
                              "description": "Collection of product terms",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Description of the productTerm"
                                  },
                                  "duration": {
                                    "name": "duration",
                                    "type": "object",
                                    "description": "A time interval in a given unit of time",
                                    "properties": {
                                      "amount": {
                                        "name": "amount",
                                        "type": "integer",
                                        "description": "Time interval (number of seconds, minutes, hours, etc.)"
                                      },
                                      "units": {
                                        "name": "units",
                                        "type": "string",
                                        "description": "Unit of time (seconds, minutes, hours, etc.)"
                                      }
                                    }
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                                    "properties": {
                                      "startDateTime": {
                                        "name": "startDateTime",
                                        "type": "string",
                                        "description": "Start of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      },
                                      "endDateTime": {
                                        "name": "endDateTime",
                                        "type": "string",
                                        "description": "End of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      }
                                    }
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the productTerm"
                                  }
                                }
                              }
                            },
                            "realizingResource": {
                              "name": "realizingResource",
                              "type": "array",
                              "description": "Collection of realizing resources",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Resource reference, for when Resource is used by other entities.",
                                "properties": {}
                              }
                            },
                            "realizingService": {
                              "name": "realizingService",
                              "type": "array",
                              "description": "Collection of realizing services",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Service reference, for when Service is used by other entities.",
                                "properties": {}
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "description": "Collection of related parties",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                  },
                                  "partyOrPartyRole": {
                                    "name": "partyOrPartyRole",
                                    "type": "union",
                                    "description": "",
                                    "oneOf": [
                                      {
                                        "name": "partyOrPartyRole_variant_0",
                                        "type": "object",
                                        "description": "A Party reference",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "partyId": {
                                            "name": "partyId",
                                            "type": "string",
                                            "description": "The identifier of the engaged party that is linked to the PartyRole object."
                                          },
                                          "partyName": {
                                            "name": "partyName",
                                            "type": "string",
                                            "description": "The name of the engaged party that is linked to the PartyRole object."
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_2",
                                        "type": "object",
                                        "properties": {
                                          "gender": {
                                            "name": "gender",
                                            "type": "string",
                                            "description": "Gender"
                                          },
                                          "placeOfBirth": {
                                            "name": "placeOfBirth",
                                            "type": "string",
                                            "description": "Reference to the place where the individual was born"
                                          },
                                          "countryOfBirth": {
                                            "name": "countryOfBirth",
                                            "type": "string",
                                            "description": "Country where the individual was born"
                                          },
                                          "nationality": {
                                            "name": "nationality",
                                            "type": "string",
                                            "description": "Nationality"
                                          },
                                          "maritalStatus": {
                                            "name": "maritalStatus",
                                            "type": "string",
                                            "description": "Marital status (married, divorced, widow ...)"
                                          },
                                          "birthDate": {
                                            "name": "birthDate",
                                            "type": "string",
                                            "description": "Birth date",
                                            "format": "date-time"
                                          },
                                          "deathDate": {
                                            "name": "deathDate",
                                            "type": "string",
                                            "description": "Date of death",
                                            "format": "date-time"
                                          },
                                          "title": {
                                            "name": "title",
                                            "type": "string",
                                            "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                                          },
                                          "aristocraticTitle": {
                                            "name": "aristocraticTitle",
                                            "type": "string",
                                            "description": "e.g. Baron, Graf, Earl"
                                          },
                                          "generation": {
                                            "name": "generation",
                                            "type": "string",
                                            "description": "e.g.. Sr, Jr, III (the third)"
                                          },
                                          "preferredGivenName": {
                                            "name": "preferredGivenName",
                                            "type": "string",
                                            "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                          },
                                          "familyNamePrefix": {
                                            "name": "familyNamePrefix",
                                            "type": "string",
                                            "description": "Family name prefix"
                                          },
                                          "legalName": {
                                            "name": "legalName",
                                            "type": "string",
                                            "description": "Legal name or birth name (name one has for official purposes)"
                                          },
                                          "middleName": {
                                            "name": "middleName",
                                            "type": "string",
                                            "description": "Middles name or initial"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                                          },
                                          "formattedName": {
                                            "name": "formattedName",
                                            "type": "string",
                                            "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                                          },
                                          "location": {
                                            "name": "location",
                                            "type": "string",
                                            "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Valid values for the lifecycle state of the individual",
                                            "enum": [
                                              "initialized",
                                              "validated",
                                              "deceased"
                                            ]
                                          },
                                          "otherName": {
                                            "name": "otherName",
                                            "type": "array",
                                            "description": "List of other names by which this individual is known",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                              "properties": {
                                                "title": {
                                                  "name": "title",
                                                  "type": "string",
                                                  "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                                },
                                                "aristocraticTitle": {
                                                  "name": "aristocraticTitle",
                                                  "type": "string",
                                                  "description": "e.g. Baron, Graf, Earl, etc."
                                                },
                                                "generation": {
                                                  "name": "generation",
                                                  "type": "string",
                                                  "description": "e.g. Sr, Jr, etc."
                                                },
                                                "givenName": {
                                                  "name": "givenName",
                                                  "type": "string",
                                                  "description": "First name"
                                                },
                                                "preferredGivenName": {
                                                  "name": "preferredGivenName",
                                                  "type": "string",
                                                  "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                                },
                                                "familyNamePrefix": {
                                                  "name": "familyNamePrefix",
                                                  "type": "string",
                                                  "description": "Family name prefix"
                                                },
                                                "familyName": {
                                                  "name": "familyName",
                                                  "type": "string",
                                                  "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                                },
                                                "legalName": {
                                                  "name": "legalName",
                                                  "type": "string",
                                                  "description": "Legal name or birth name (name one has for official purposes)"
                                                },
                                                "middleName": {
                                                  "name": "middleName",
                                                  "type": "string",
                                                  "description": "Middle name or initial"
                                                },
                                                "fullName": {
                                                  "name": "fullName",
                                                  "type": "string",
                                                  "description": "Full name flatten (first, middle, and last names)"
                                                },
                                                "formattedName": {
                                                  "name": "formattedName",
                                                  "type": "string",
                                                  "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "individualIdentification": {
                                            "name": "individualIdentification",
                                            "type": "array",
                                            "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "identificationId": {
                                                  "name": "identificationId",
                                                  "type": "string",
                                                  "description": "Identifier"
                                                },
                                                "issuingAuthority": {
                                                  "name": "issuingAuthority",
                                                  "type": "string",
                                                  "description": "Authority which has issued the identifier, such as: social security, town hall"
                                                },
                                                "issuingDate": {
                                                  "name": "issuingDate",
                                                  "type": "string",
                                                  "description": "Date at which the identifier was issued",
                                                  "format": "date-time"
                                                },
                                                "identificationType": {
                                                  "name": "identificationType",
                                                  "type": "string",
                                                  "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "attachment": {
                                                  "name": "attachment",
                                                  "type": "union",
                                                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                                  "oneOf": [
                                                    {
                                                      "name": "attachment_variant_0",
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "name": "name",
                                                          "type": "string",
                                                          "description": "The name of the attachment"
                                                        },
                                                        "description": {
                                                          "name": "description",
                                                          "type": "string",
                                                          "description": "A narrative text describing the content of the attachment"
                                                        },
                                                        "url": {
                                                          "name": "url",
                                                          "type": "string",
                                                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                                        },
                                                        "content": {
                                                          "name": "content",
                                                          "type": "string",
                                                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                                          "format": "base64"
                                                        },
                                                        "size": {
                                                          "name": "size",
                                                          "type": "object",
                                                          "description": "An amount in a given unit",
                                                          "properties": {
                                                            "amount": {
                                                              "name": "amount",
                                                              "type": "number",
                                                              "description": "Numeric value in a given unit",
                                                              "format": "float"
                                                            },
                                                            "units": {
                                                              "name": "units",
                                                              "type": "string",
                                                              "description": "Unit"
                                                            }
                                                          }
                                                        },
                                                        "validFor": {
                                                          "name": "validFor",
                                                          "type": "object",
                                                          "description": "Reference to TimePeriod"
                                                        },
                                                        "attachmentType": {
                                                          "name": "attachmentType",
                                                          "type": "string",
                                                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                                        },
                                                        "mimeType": {
                                                          "name": "mimeType",
                                                          "type": "string",
                                                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "attachment_variant_1",
                                                      "type": "object",
                                                      "properties": {
                                                        "description": {
                                                          "name": "description",
                                                          "type": "string",
                                                          "description": "A narrative text describing the content of the attachment"
                                                        },
                                                        "url": {
                                                          "name": "url",
                                                          "type": "string",
                                                          "description": "Link to the attachment media/content"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "disability": {
                                            "name": "disability",
                                            "type": "array",
                                            "description": "List of disabilities suffered by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Lack or inadequate strength or ability.",
                                              "properties": {
                                                "disabilityCode": {
                                                  "name": "disabilityCode",
                                                  "type": "string",
                                                  "description": "Code of the disability"
                                                },
                                                "disabilityName": {
                                                  "name": "disabilityName",
                                                  "type": "string",
                                                  "description": "Name of the disability"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "languageAbility": {
                                            "name": "languageAbility",
                                            "type": "array",
                                            "description": "List of national languages known by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Ability of an individual to understand or converse in a language.",
                                              "properties": {
                                                "languageCode": {
                                                  "name": "languageCode",
                                                  "type": "string",
                                                  "description": "Language code (RFC 5646)"
                                                },
                                                "languageName": {
                                                  "name": "languageName",
                                                  "type": "string",
                                                  "description": "Language name"
                                                },
                                                "isFavouriteLanguage": {
                                                  "name": "isFavouriteLanguage",
                                                  "type": "boolean",
                                                  "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                                },
                                                "writingProficiency": {
                                                  "name": "writingProficiency",
                                                  "type": "string",
                                                  "description": "Writing proficiency evaluated for this language"
                                                },
                                                "readingProficiency": {
                                                  "name": "readingProficiency",
                                                  "type": "string",
                                                  "description": "Reading proficiency evaluated for this language"
                                                },
                                                "speakingProficiency": {
                                                  "name": "speakingProficiency",
                                                  "type": "string",
                                                  "description": "Speaking proficiency evaluated for this language"
                                                },
                                                "listeningProficiency": {
                                                  "name": "listeningProficiency",
                                                  "type": "string",
                                                  "description": "Listening proficiency evaluated for this language"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "skill": {
                                            "name": "skill",
                                            "type": "array",
                                            "description": "List of skills exhibited by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                              "properties": {
                                                "skillCode": {
                                                  "name": "skillCode",
                                                  "type": "string",
                                                  "description": "Code of the skill"
                                                },
                                                "skillName": {
                                                  "name": "skillName",
                                                  "type": "string",
                                                  "description": "Name of the skill, such as Java language"
                                                },
                                                "evaluatedLevel": {
                                                  "name": "evaluatedLevel",
                                                  "type": "string",
                                                  "description": "Level of expertise in a skill evaluated for an individual"
                                                },
                                                "comment": {
                                                  "name": "comment",
                                                  "type": "string",
                                                  "description": "A free text comment linked to the evaluation done"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "familyName": {
                                            "name": "familyName",
                                            "type": "string",
                                            "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                          },
                                          "givenName": {
                                            "name": "givenName",
                                            "type": "string",
                                            "description": "First name of the individual"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_3",
                                        "type": "object",
                                        "properties": {
                                          "isLegalEntity": {
                                            "name": "isLegalEntity",
                                            "type": "boolean",
                                            "description": "If value is true, the organization is a legal entity known by a national referential."
                                          },
                                          "isHeadOffice": {
                                            "name": "isHeadOffice",
                                            "type": "boolean",
                                            "description": "If value is true, the organization is the head office"
                                          },
                                          "organizationType": {
                                            "name": "organizationType",
                                            "type": "string",
                                            "description": "Type of Organization (company, department...)"
                                          },
                                          "existsDuring": {
                                            "name": "existsDuring",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "Organization name (department name for example)"
                                          },
                                          "nameType": {
                                            "name": "nameType",
                                            "type": "string",
                                            "description": "Type of the name : Co, Inc, Ltd, etc."
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Valid values for the lifecycle state of the organization",
                                            "enum": [
                                              "initialized",
                                              "validated",
                                              "closed"
                                            ]
                                          },
                                          "otherName": {
                                            "name": "otherName",
                                            "type": "array",
                                            "description": "List of additional names by which the organization is known",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "tradingName": {
                                                  "name": "tradingName",
                                                  "type": "string",
                                                  "description": "The name that the organization trades under"
                                                },
                                                "nameType": {
                                                  "name": "nameType",
                                                  "type": "string",
                                                  "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                                },
                                                "name": {
                                                  "name": "name",
                                                  "type": "string",
                                                  "description": "Organization name (department name for example)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "organizationIdentification": {
                                            "name": "organizationIdentification",
                                            "type": "array",
                                            "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "identificationId": {
                                                  "name": "identificationId",
                                                  "type": "string",
                                                  "description": "Identifier"
                                                },
                                                "issuingAuthority": {
                                                  "name": "issuingAuthority",
                                                  "type": "string",
                                                  "description": "Authority which has issued the identifier (chamber of commerce...)"
                                                },
                                                "issuingDate": {
                                                  "name": "issuingDate",
                                                  "type": "string",
                                                  "description": "Date at which the identifier was issued",
                                                  "format": "date-time"
                                                },
                                                "identificationType": {
                                                  "name": "identificationType",
                                                  "type": "string",
                                                  "description": "Type of identification information used to identify the company in a country or internationally"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "attachment": {
                                                  "name": "attachment",
                                                  "type": "object",
                                                  "description": "Reference to AttachmentRefOrValue"
                                                }
                                              }
                                            }
                                          },
                                          "organizationChildRelationship": {
                                            "name": "organizationChildRelationship",
                                            "type": "array",
                                            "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "relationshipType": {
                                                  "name": "relationshipType",
                                                  "type": "string",
                                                  "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                                },
                                                "organization": {
                                                  "name": "organization",
                                                  "type": "object",
                                                  "properties": {}
                                                }
                                              }
                                            }
                                          },
                                          "organizationParentRelationship": {
                                            "name": "organizationParentRelationship",
                                            "type": "object",
                                            "properties": {
                                              "relationshipType": {
                                                "name": "relationshipType",
                                                "type": "string",
                                                "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                              },
                                              "organization": {
                                                "name": "organization",
                                                "type": "object",
                                                "description": "Reference to OrganizationRef"
                                              }
                                            }
                                          },
                                          "tradingName": {
                                            "name": "tradingName",
                                            "type": "string",
                                            "description": "Name that the organization (unit) trades under"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_4",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A description of the PartyRole."
                                          },
                                          "role": {
                                            "name": "role",
                                            "type": "string",
                                            "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
                                          },
                                          "engagedParty": {
                                            "name": "engagedParty",
                                            "type": "object",
                                            "description": "Reference to PartyRef"
                                          },
                                          "partyRoleSpecification": {
                                            "name": "partyRoleSpecification",
                                            "type": "object",
                                            "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                                            "properties": {}
                                          },
                                          "characteristic": {
                                            "name": "characteristic",
                                            "type": "array",
                                            "description": "Describes the characteristic of a party role.",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to Characteristic"
                                            }
                                          },
                                          "account": {
                                            "name": "account",
                                            "type": "array",
                                            "description": "Collection of accounts",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Account reference. A account may be a party account or a financial account.",
                                              "properties": {}
                                            }
                                          },
                                          "agreement": {
                                            "name": "agreement",
                                            "type": "array",
                                            "description": "Collection of agreements",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                              "properties": {}
                                            }
                                          },
                                          "contactMedium": {
                                            "name": "contactMedium",
                                            "type": "array",
                                            "description": "Collection of contact mediums",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Identifier for this contact medium."
                                                },
                                                "preferred": {
                                                  "name": "preferred",
                                                  "type": "boolean",
                                                  "description": "If true, indicates that is the preferred contact medium"
                                                },
                                                "contactType": {
                                                  "name": "contactType",
                                                  "type": "string",
                                                  "description": "Type of the contact medium to qualify it like pro email / personal email. This is not used to define the contact medium used."
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "paymentMethod": {
                                            "name": "paymentMethod",
                                            "type": "array",
                                            "description": "Collection of payment methods",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                              "properties": {}
                                            }
                                          },
                                          "creditProfile": {
                                            "name": "creditProfile",
                                            "type": "array",
                                            "description": "Collection of credit profiles",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "creditProfileDate": {
                                                  "name": "creditProfileDate",
                                                  "type": "string",
                                                  "description": "The date the profile was established",
                                                  "format": "date-time"
                                                },
                                                "creditRiskRating": {
                                                  "name": "creditRiskRating",
                                                  "type": "integer",
                                                  "description": "This is an integer whose value is used to rate the risk"
                                                },
                                                "creditScore": {
                                                  "name": "creditScore",
                                                  "type": "integer",
                                                  "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "relatedParty": {
                                            "name": "relatedParty",
                                            "type": "array",
                                            "description": "Collection of related parties",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to RelatedPartyOrPartyRole"
                                            }
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Used to track the lifecycle status of the party role."
                                          },
                                          "statusReason": {
                                            "name": "statusReason",
                                            "type": "string",
                                            "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_5",
                                        "type": "object",
                                        "description": "When business partner is the Supplier ",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_6",
                                        "type": "object",
                                        "description": "When business partner is the BusinessPartner ",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_7",
                                        "type": "object",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_8",
                                        "type": "object",
                                        "properties": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "place": {
                              "name": "place",
                              "type": "array",
                              "description": "Collection of places",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string"
                                  },
                                  "place": {
                                    "name": "place",
                                    "type": "union",
                                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place entity and not the PlaceRefOrValue class itself",
                                    "oneOf": [
                                      {
                                        "name": "place_variant_0",
                                        "type": "object",
                                        "properties": {
                                          "bbox": {
                                            "name": "bbox",
                                            "type": "array",
                                            "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                                            "items": {
                                              "name": "items",
                                              "type": "number"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "name": "place_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "name": "code",
                                            "type": "string",
                                            "description": "A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]"
                                          },
                                          "creationDate": {
                                            "name": "creationDate",
                                            "type": "string",
                                            "description": "Date and time when the GeographicSite was created",
                                            "format": "date-time"
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "Text describing additional information regarding the site"
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former"
                                          },
                                          "relatedParty": {
                                            "name": "relatedParty",
                                            "type": "array",
                                            "description": "Related parties collection",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "role": {
                                                  "name": "role",
                                                  "type": "string",
                                                  "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                                },
                                                "partyOrPartyRole": {
                                                  "name": "partyOrPartyRole",
                                                  "type": "union",
                                                  "description": "",
                                                  "oneOf": [
                                                    {
                                                      "name": "partyOrPartyRole_variant_0",
                                                      "type": "object",
                                                      "description": "Reference to PartyRef"
                                                    },
                                                    {
                                                      "name": "partyOrPartyRole_variant_1",
                                                      "type": "object",
                                                      "description": "Reference to PartyRoleRef"
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "externalIdentifier": {
                                            "name": "externalIdentifier",
                                            "type": "array",
                                            "description": "Collection of external identifiers",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "owner": {
                                                  "name": "owner",
                                                  "type": "string",
                                                  "description": "Name of the external system that owns the entity."
                                                },
                                                "externalIdentifierType": {
                                                  "name": "externalIdentifierType",
                                                  "type": "string",
                                                  "description": "Type of the identification, typically would be the type of the entity within the external system"
                                                },
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "identification of the entity within the external system."
                                                }
                                              }
                                            }
                                          },
                                          "calendar": {
                                            "name": "calendar",
                                            "type": "array",
                                            "description": "Collection of calendar items",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "day": {
                                                  "name": "day",
                                                  "type": "string",
                                                  "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, ...)"
                                                },
                                                "timeZone": {
                                                  "name": "timeZone",
                                                  "type": "string",
                                                  "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)"
                                                },
                                                "hourPeriod": {
                                                  "name": "hourPeriod",
                                                  "type": "array",
                                                  "description": "Collection of hour intervals",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "properties": {
                                                      "endHour": {
                                                        "name": "endHour",
                                                        "type": "string",
                                                        "description": "The time when the status ends applying"
                                                      },
                                                      "startHour": {
                                                        "name": "startHour",
                                                        "type": "string",
                                                        "description": "The time when the status starts applying"
                                                      }
                                                    }
                                                  }
                                                },
                                                "status": {
                                                  "name": "status",
                                                  "type": "string",
                                                  "description": "Indication of the availability of the calendar period (e.g.: available, booked, etc.)"
                                                }
                                              }
                                            }
                                          },
                                          "place": {
                                            "name": "place",
                                            "type": "array",
                                            "description": "Collection of place objects",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to PlaceRefOrValue"
                                            }
                                          },
                                          "siteRelationship": {
                                            "name": "siteRelationship",
                                            "type": "array",
                                            "description": "Collection of site siteRelationships",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "href": {
                                                  "name": "href",
                                                  "type": "string",
                                                  "description": "Reference of the related geographic site"
                                                },
                                                "role": {
                                                  "name": "role",
                                                  "type": "string",
                                                  "description": "Role of the related site in the relationship"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Unique identifier of the related site entity within the server"
                                                },
                                                "relationshipType": {
                                                  "name": "relationshipType",
                                                  "type": "string",
                                                  "description": "Type of relationship"
                                                }
                                              }
                                            }
                                          },
                                          "siteCategory": {
                                            "name": "siteCategory",
                                            "type": "string",
                                            "description": "Site classification/category."
                                          },
                                          "contactMedium": {
                                            "name": "contactMedium",
                                            "type": "array",
                                            "description": "Collection of contact information",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to ContactMedium"
                                            }
                                          },
                                          "siteFeature": {
                                            "name": "siteFeature",
                                            "type": "array",
                                            "description": "Collection of site features",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "array",
                                                  "description": "Collection of validity information",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "description": "Reference to CalendarPeriod"
                                                  }
                                                },
                                                "attachment": {
                                                  "name": "attachment",
                                                  "type": "array",
                                                  "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "description": "Reference to AttachmentRefOrValue"
                                                  }
                                                },
                                                "note": {
                                                  "name": "note",
                                                  "type": "array",
                                                  "description": "Collection of notes",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "description": "Reference to Note"
                                                  }
                                                },
                                                "relatedParty": {
                                                  "name": "relatedParty",
                                                  "type": "array",
                                                  "description": "The associated party or partyRole",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                                                  }
                                                },
                                                "featureCategory": {
                                                  "name": "featureCategory",
                                                  "type": "array",
                                                  "description": "Collection of feature category",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "string",
                                                    "description": "This parameter represents a feature category which may be assigned to certain groups of features. "
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "name": "place_variant_2",
                                        "type": "object",
                                        "properties": {
                                          "city": {
                                            "name": "city",
                                            "type": "string",
                                            "description": "City that the address is in"
                                          },
                                          "country": {
                                            "name": "country",
                                            "type": "string",
                                            "description": "Country that the address is in"
                                          },
                                          "locality": {
                                            "name": "locality",
                                            "type": "string",
                                            "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                                          },
                                          "postcode": {
                                            "name": "postcode",
                                            "type": "string",
                                            "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                                          },
                                          "stateOrProvince": {
                                            "name": "stateOrProvince",
                                            "type": "string",
                                            "description": "the State or Province that the address is in"
                                          },
                                          "streetName": {
                                            "name": "streetName",
                                            "type": "string",
                                            "description": "Name of the street or other street type"
                                          },
                                          "streetNr": {
                                            "name": "streetNr",
                                            "type": "string",
                                            "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                                          },
                                          "streetNrLast": {
                                            "name": "streetNrLast",
                                            "type": "string",
                                            "description": "Last number in a range of street numbers allocated to a property"
                                          },
                                          "streetNrLastSuffix": {
                                            "name": "streetNrLastSuffix",
                                            "type": "string",
                                            "description": "Last street number suffix for a ranged address"
                                          },
                                          "streetNrSuffix": {
                                            "name": "streetNrSuffix",
                                            "type": "string",
                                            "description": "the first street number suffix"
                                          },
                                          "streetSuffix": {
                                            "name": "streetSuffix",
                                            "type": "string",
                                            "description": "A modifier denoting a relative direction"
                                          },
                                          "streetType": {
                                            "name": "streetType",
                                            "type": "string",
                                            "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                                          },
                                          "countryCode": {
                                            "name": "countryCode",
                                            "type": "array",
                                            "description": "Country codes are short alphabetic or numeric geographical codes (geocodes) developed to represent countries and dependent areas, for use in data processing and communications. Several different systems have been developed to do this. The term country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes, the E.164 country calling codes.",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "format": {
                                                  "name": "format",
                                                  "type": "string",
                                                  "description": "Standard/Regulatory definition identifier. e.g., ISO 3166-1"
                                                },
                                                "value": {
                                                  "name": "value",
                                                  "type": "string",
                                                  "description": "The value of the resource in the corresponding standard.e.g., a country code value"
                                                }
                                              }
                                            }
                                          },
                                          "geographicLocation": {
                                            "name": "geographicLocation",
                                            "type": "union",
                                            "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicLocation entity and not the GeographicLocationRefOrValue class itself",
                                            "oneOf": [
                                              {
                                                "name": "geographicLocation_variant_0",
                                                "type": "object",
                                                "description": "Reference to GeographicLocation"
                                              },
                                              {
                                                "name": "geographicLocation_variant_1",
                                                "type": "object",
                                                "properties": {}
                                              }
                                            ]
                                          },
                                          "geographicSubAddress": {
                                            "name": "geographicSubAddress",
                                            "type": "array",
                                            "description": "Collection of sub addresses",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "buildingName": {
                                                  "name": "buildingName",
                                                  "type": "string",
                                                  "description": "allows for buildings that have well-known names"
                                                },
                                                "href": {
                                                  "name": "href",
                                                  "type": "string",
                                                  "description": "Link to the subAddress"
                                                },
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Unique Identifier of the subAddress"
                                                },
                                                "levelNumber": {
                                                  "name": "levelNumber",
                                                  "type": "string",
                                                  "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                                                },
                                                "levelType": {
                                                  "name": "levelType",
                                                  "type": "string",
                                                  "description": "describes level types within a building"
                                                },
                                                "name": {
                                                  "name": "name",
                                                  "type": "string",
                                                  "description": "Name of the subAddress to identify it with a meaningful identification"
                                                },
                                                "privateStreetName": {
                                                  "name": "privateStreetName",
                                                  "type": "string",
                                                  "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                                                },
                                                "privateStreetNumber": {
                                                  "name": "privateStreetNumber",
                                                  "type": "string",
                                                  "description": "private streets numbers internal to a private street"
                                                },
                                                "subUnit": {
                                                  "name": "subUnit",
                                                  "type": "array",
                                                  "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "properties": {
                                                      "subUnitNumber": {
                                                        "name": "subUnitNumber",
                                                        "type": "string",
                                                        "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                                                      },
                                                      "subUnitType": {
                                                        "name": "subUnitType",
                                                        "type": "string",
                                                        "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                                                      }
                                                    }
                                                  }
                                                },
                                                "subAddressType": {
                                                  "name": "subAddressType",
                                                  "type": "string",
                                                  "description": "Type of subAddress : it can be a subunit or a private street"
                                                }
                                              }
                                            }
                                          },
                                          "geographicAddressType": {
                                            "name": "geographicAddressType",
                                            "type": "string",
                                            "description": "Classification of the address, e.g., residential, industrial "
                                          },
                                          "geographicSite": {
                                            "name": "geographicSite",
                                            "type": "union",
                                            "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicSite entity and not the GeographicSiteRefOrValue class itself",
                                            "oneOf": [
                                              {
                                                "name": "geographicSite_variant_0",
                                                "type": "object",
                                                "description": "Reference to GeographicSite"
                                              },
                                              {
                                                "name": "geographicSite_variant_1",
                                                "type": "object",
                                                "properties": {}
                                              }
                                            ]
                                          },
                                          "geographicAddressRelationship": {
                                            "name": "geographicAddressRelationship",
                                            "type": "array",
                                            "description": "A list of geographic addresses relationships. Represents a relationship between geographic addresses",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Unique identifier of the related geographic address. This identifier serves as a reference to uniquely identify the associated geographic address within the system."
                                                },
                                                "name": {
                                                  "name": "name",
                                                  "type": "string",
                                                  "description": "Name of the geographic address. This attribute provides a human-readable name or label for the related geographic address, which can help users identify and differentiate between different addresses."
                                                },
                                                "relationshipType": {
                                                  "name": "relationshipType",
                                                  "type": "string",
                                                  "description": "Type of relationship between the geographic addresses. This attribute specifies the nature of the relationship between the related addresses. It provides context for understanding how the addresses are related to each other."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "name": "place_variant_3",
                                        "type": "object",
                                        "description": "Place reference.",
                                        "properties": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "startDate": {
                              "name": "startDate",
                              "type": "string",
                              "description": "Is the date from which the product starts",
                              "format": "date-time"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Possible values for the status of the product",
                              "enum": [
                                "created",
                                "pendingActive",
                                "cancelled",
                                "active",
                                "pendingTerminate",
                                "terminated",
                                "suspended",
                                "aborted "
                              ]
                            },
                            "terminationDate": {
                              "name": "terminationDate",
                              "type": "string",
                              "description": "Is the date when the product was terminated",
                              "format": "date-time"
                            },
                            "intent": {
                              "name": "intent",
                              "type": "union",
                              "description": "Intent Ref (if Intent already exists) or Value (if Intent be created or its details be presented)",
                              "oneOf": [
                                {
                                  "name": "intent_variant_0",
                                  "type": "object",
                                  "description": "Intent reference, for when Intent is used by other entities",
                                  "properties": {}
                                },
                                {
                                  "name": "intent_variant_1",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "The description of the intent."
                                    },
                                    "validFor": {
                                      "name": "validFor",
                                      "type": "object",
                                      "description": "Reference to TimePeriod"
                                    },
                                    "isBundle": {
                                      "name": "isBundle",
                                      "type": "boolean",
                                      "description": "isBundle determines whether an intent represents a single intent (false), or a bundle of intents(true)."
                                    },
                                    "priority": {
                                      "name": "priority",
                                      "type": "string",
                                      "description": "Can be used by intent owner to prioritize intents in an intent management system"
                                    },
                                    "statusChangeDate": {
                                      "name": "statusChangeDate",
                                      "type": "string",
                                      "description": "A date time( DateTime). The date that the entity status changed to the current one",
                                      "format": "date-time"
                                    },
                                    "context": {
                                      "name": "context",
                                      "type": "string",
                                      "description": "A string used to give a context to the intent"
                                    },
                                    "version": {
                                      "name": "version",
                                      "type": "string",
                                      "description": "A field that identifies the specific version of an instance of an intent."
                                    },
                                    "intentSpecification": {
                                      "name": "intentSpecification",
                                      "type": "object",
                                      "description": "Reference to EntityRef"
                                    },
                                    "intentRelationship": {
                                      "name": "intentRelationship",
                                      "type": "array",
                                      "description": "A list of intents related to this intent",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "A uni-directional relationship from this entity to a target entity instance",
                                        "properties": {
                                          "href": {
                                            "name": "href",
                                            "type": "string"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string"
                                          },
                                          "role": {
                                            "name": "role",
                                            "type": "string",
                                            "description": "The association role for this entity"
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "associationSpec": {
                                            "name": "associationSpec",
                                            "type": "object",
                                            "description": "Reference to EntityRef"
                                          },
                                          "@baseType": {
                                            "name": "@baseType",
                                            "type": "string",
                                            "description": "When sub-classing, this defines the super-class"
                                          },
                                          "@schemaLocation": {
                                            "name": "@schemaLocation",
                                            "type": "string",
                                            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                                          },
                                          "relationshipType": {
                                            "name": "relationshipType",
                                            "type": "string",
                                            "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                                          },
                                          "id": {
                                            "name": "id",
                                            "type": "string"
                                          },
                                          "@referredType": {
                                            "name": "@referredType",
                                            "type": "string"
                                          },
                                          "@type": {
                                            "name": "@type",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "characteristic": {
                                      "name": "characteristic",
                                      "type": "array",
                                      "description": "Collection of characteristics",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "Reference to Characteristic"
                                      }
                                    },
                                    "relatedParty": {
                                      "name": "relatedParty",
                                      "type": "array",
                                      "description": "Collection of related parties",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                                      }
                                    },
                                    "attachment": {
                                      "name": "attachment",
                                      "type": "array",
                                      "description": "Attachments that may be of relevance to this intent, such as picture, document, media",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "Reference to AttachmentRefOrValue"
                                      }
                                    },
                                    "name": {
                                      "name": "name",
                                      "type": "string",
                                      "description": "The name of the intent."
                                    },
                                    "expression": {
                                      "name": "expression",
                                      "type": "object",
                                      "properties": {
                                        "iri": {
                                          "name": "iri",
                                          "type": "string",
                                          "description": "Internationalized Resource Identifier of the intent Expression"
                                        }
                                      }
                                    },
                                    "creationDate": {
                                      "name": "creationDate",
                                      "type": "string",
                                      "description": "Date and time of the creation of this REST resource",
                                      "format": "date-time"
                                    },
                                    "lastUpdate": {
                                      "name": "lastUpdate",
                                      "type": "string",
                                      "description": "Date and time of the last update of this REST resource",
                                      "format": "date-time"
                                    },
                                    "lifecycleStatus": {
                                      "name": "lifecycleStatus",
                                      "type": "string",
                                      "description": "Used to indicate the current lifecycle status of this intent"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "name": "product_variant_1",
                          "type": "object",
                          "description": "A Product reference",
                          "properties": {}
                        }
                      ]
                    },
                    "category": {
                      "name": "category",
                      "type": "object",
                      "properties": {
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "Version of the category"
                        }
                      }
                    },
                    "terminationError": {
                      "name": "terminationError",
                      "type": "array",
                      "description": "List of termination errors",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the termination error"
                          },
                          "value": {
                            "name": "value",
                            "type": "string",
                            "description": "Text to describe the termination error - for example: Unable to proceed to qualification because incomplete information provided"
                          }
                        }
                      }
                    },
                    "productOffering": {
                      "name": "productOffering",
                      "type": "object",
                      "description": "Reference to ProductOfferingRef"
                    },
                    "promotion": {
                      "name": "promotion",
                      "type": "object",
                      "description": "Promotion reference. Promotion Resource is used to provide the additional discount, voucher, bonus or gift to the customer who meets the pre-defined criteria. Using promotion, the enterprise is able to attract the users and encourage more consumption, especially continuous purchases.",
                      "properties": {}
                    },
                    "alternateProductOfferingProposal": {
                      "name": "alternateProductOfferingProposal",
                      "type": "array",
                      "description": "Collection of alternate product offerings",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "alternateActivationDate": {
                            "name": "alternateActivationDate",
                            "type": "string",
                            "description": "Alternate activation date in case seller is not able to meet requested expected activation date.",
                            "format": "date-time"
                          },
                          "alternateProduct": {
                            "name": "alternateProduct",
                            "type": "object",
                            "description": "Reference to ProductRefOrValue"
                          },
                          "alternateProductOffering": {
                            "name": "alternateProductOffering",
                            "type": "object",
                            "description": "Reference to ProductOfferingRef"
                          },
                          "promotion": {
                            "name": "promotion",
                            "type": "object",
                            "description": "Reference to PromotionRef"
                          },
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Identifier of the AlternateProductOfferingProposal within its containing entity"
                          }
                        }
                      }
                    },
                    "action": {
                      "name": "action",
                      "type": "string",
                      "description": "Action to be performed on a ProductOffering or product in order to be qualified(add, modify, remove, etc.)"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the CheckProductOfferingQualification item (generally it is a sequence number 01, 02, 03, ...)"
                    },
                    "qualificationItemResult": {
                      "name": "qualificationItemResult",
                      "type": "string",
                      "description": "Qualification result for this checkProductOfferingQualification item. It could be qualified (request productOffering or productSpecification are available), unqualified (requested not available and not alternate available), alternate (requested not available but alternate proposal available)"
                    },
                    "state": {
                      "name": "state",
                      "type": "string",
                      "description": "State of the CheckProductOfferingQualification item : described in the state machine diagram"
                    }
                  }
                }
              },
              "provideAlternative": {
                "name": "provideAlternative",
                "type": "boolean",
                "description": "An indicator which when the value is \"true\" means that alternative solutions should be provided"
              },
              "provideOnlyAvailable": {
                "name": "provideOnlyAvailable",
                "type": "boolean",
                "description": "An indicator which when the value is \"true\" means that only available product offering must be listed in the response"
              },
              "provideResultReason": {
                "name": "provideResultReason",
                "type": "boolean",
                "description": "An indicator which when the value is \"true\" means that result reason are expected for available or not of product offering"
              },
              "qualificationResult": {
                "name": "qualificationResult",
                "type": "string",
                "description": "Result of the qualification (example: green, yellow, red)"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Party playing a role for this qualification (as requester for example)",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to RelatedPartyOrPartyRole"
                }
              },
              "requestedQualificationCompletionDate": {
                "name": "requestedQualificationCompletionDate",
                "type": "string",
                "description": "Deadline date when the requester expected a qualification answer",
                "format": "date-time"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Possible values for the state of a task",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "inProgress",
                  "cancelled",
                  "done",
                  "terminatedWithError"
                ]
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date and time when the CheckProductOfferingQualification was created",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "queryProductOfferingQualification": {
    "tableName": "QueryProductOfferingQualification",
    "endpoints": [
      {
        "operationId": "listQueryProductOfferingQualification",
        "path": "/queryProductOfferingQualification",
        "method": "get"
      },
      {
        "operationId": "createQueryProductOfferingQualification",
        "path": "/queryProductOfferingQualification",
        "method": "post"
      },
      {
        "operationId": "retrieveQueryProductOfferingQualification",
        "path": "/queryProductOfferingQualification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteQueryProductOfferingQualification",
        "path": "/queryProductOfferingQualification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchQueryProductOfferingQualification",
        "path": "/queryProductOfferingQualification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "channel": {
                "name": "channel",
                "type": "object",
                "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
                "properties": {}
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the QueryProductOfferingQualification"
              },
              "effectiveQualificationDate": {
                "name": "effectiveQualificationDate",
                "type": "string",
                "description": "Effective date to QueryProductOfferingQualification completion",
                "format": "date-time"
              },
              "expectedQualificationCompletionDate": {
                "name": "expectedQualificationCompletionDate",
                "type": "string",
                "description": "Expected date rom the server to provide an answer for the query qualification request",
                "format": "date-time"
              },
              "expirationDate": {
                "name": "expirationDate",
                "type": "string",
                "description": "Date the qualification response expires",
                "format": "date-time"
              },
              "instantSyncQualification": {
                "name": "instantSyncQualification",
                "type": "boolean",
                "description": "A previous indicator which when the value is \"true\" means that requester expects to get qualifcation result immedi3ately in the response. If the indicator is true (or by default now without it) then the response code of 200 indicates the operation is successful otherwise a task is created with a response 201. For asynchronous, this attribute is now replaced by the header request \"Expect: 202-Accepted\""
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "Free form text associated with the qualification request",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "qualifiedProductOfferingItem": {
                "name": "qualifiedProductOfferingItem",
                "type": "array",
                "description": "Qualification item for a product or a category",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "qualificationItemRelationship": {
                      "name": "qualificationItemRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Id of the related POQ item (must be in the same POQ)"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Relationship type as relies on, bundles, etc..."
                          }
                        }
                      }
                    },
                    "product": {
                      "name": "product",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product entity and not the ProductRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "product_variant_0",
                          "type": "object",
                          "properties": {
                            "agreementItem": {
                              "name": "agreementItem",
                              "type": "array",
                              "description": "Collection of agreements",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "agreementName": {
                                    "name": "agreementName",
                                    "type": "string",
                                    "description": "Name of the related entity."
                                  },
                                  "agreementHref": {
                                    "name": "agreementHref",
                                    "type": "string",
                                    "description": "Reference of the related entity."
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  },
                                  "agreementId": {
                                    "name": "agreementId",
                                    "type": "string",
                                    "description": "Unique identifier of a related entity."
                                  },
                                  "agreementItemId": {
                                    "name": "agreementItemId",
                                    "type": "string",
                                    "description": "Id of an item of a Agreement"
                                  }
                                }
                              }
                            },
                            "billingAccount": {
                              "name": "billingAccount",
                              "type": "object",
                              "properties": {
                                "ratingType": {
                                  "name": "ratingType",
                                  "type": "string",
                                  "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                                }
                              }
                            },
                            "creationDate": {
                              "name": "creationDate",
                              "type": "string",
                              "description": "Date and time when the product was created",
                              "format": "date-time"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Is the description of the product. It could be copied from the description of the Product Offering."
                            },
                            "isBundle": {
                              "name": "isBundle",
                              "type": "boolean",
                              "description": "If true, the product is a ProductBundle which is an instantiation of a BundledProductOffering. If false, the product is a ProductComponent which is an instantiation of a SimpleProductOffering."
                            },
                            "isCustomerVisible": {
                              "name": "isCustomerVisible",
                              "type": "boolean",
                              "description": "If true, the product is visible by the customer."
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the product. It could be the same as the name of the product offering"
                            },
                            "orderDate": {
                              "name": "orderDate",
                              "type": "string",
                              "description": "Is the date when the product was ordered",
                              "format": "date-time"
                            },
                            "productCharacteristic": {
                              "name": "productCharacteristic",
                              "type": "array",
                              "description": "Collection of product characteristics",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "description": "Collection of characteristic relationships",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "productOffering": {
                              "name": "productOffering",
                              "type": "object",
                              "properties": {
                                "version": {
                                  "name": "version",
                                  "type": "string",
                                  "description": "Version of the product offering"
                                }
                              }
                            },
                            "productOrderItem": {
                              "name": "productOrderItem",
                              "type": "array",
                              "description": "Collection of product order items",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "orderItemAction": {
                                    "name": "orderItemAction",
                                    "type": "string",
                                    "description": "action to be performed on the entity managed by the item",
                                    "enum": [
                                      "add",
                                      "modify",
                                      "delete",
                                      "noChange"
                                    ]
                                  },
                                  "orderHref": {
                                    "name": "orderHref",
                                    "type": "string",
                                    "description": "Reference of the related entity."
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  },
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the  Order"
                                  },
                                  "orderId": {
                                    "name": "orderId",
                                    "type": "string",
                                    "description": "Unique identifier of a related  Order."
                                  },
                                  "orderItemId": {
                                    "name": "orderItemId",
                                    "type": "string",
                                    "description": "Id of an item of a product order"
                                  }
                                }
                              }
                            },
                            "product": {
                              "name": "product",
                              "type": "array",
                              "description": "Collection of products",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ProductRefOrValue"
                              }
                            },
                            "productPrice": {
                              "name": "productPrice",
                              "type": "array",
                              "description": "Collection of product prices",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Description of the Product price"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the Product price"
                                  },
                                  "productOfferingPrice": {
                                    "name": "productOfferingPrice",
                                    "type": "object",
                                    "properties": {
                                      "version": {
                                        "name": "version",
                                        "type": "string",
                                        "description": "Version of the product offering price"
                                      }
                                    }
                                  },
                                  "recurringChargePeriod": {
                                    "name": "recurringChargePeriod",
                                    "type": "string",
                                    "description": "Used for recurring charge to indicate period (month, week, etc..)."
                                  },
                                  "unitOfMeasure": {
                                    "name": "unitOfMeasure",
                                    "type": "string",
                                    "description": "Unit of Measure if price depending on it (Gb, SMS volume, etc..)"
                                  },
                                  "price": {
                                    "name": "price",
                                    "type": "object",
                                    "properties": {
                                      "dutyFreeAmount": {
                                        "name": "dutyFreeAmount",
                                        "type": "object",
                                        "description": "A base / value business entity used to represent money",
                                        "properties": {
                                          "unit": {
                                            "name": "unit",
                                            "type": "string",
                                            "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                                          },
                                          "value": {
                                            "name": "value",
                                            "type": "number",
                                            "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                                            "format": "float"
                                          }
                                        }
                                      },
                                      "percentage": {
                                        "name": "percentage",
                                        "type": "number",
                                        "description": "Percentage to apply for ProdOfferPriceAlteration",
                                        "format": "float"
                                      },
                                      "taxIncludedAmount": {
                                        "name": "taxIncludedAmount",
                                        "type": "object",
                                        "description": "Reference to Money"
                                      },
                                      "taxRate": {
                                        "name": "taxRate",
                                        "type": "number",
                                        "description": "Tax rate",
                                        "format": "float"
                                      }
                                    }
                                  },
                                  "priceAlteration": {
                                    "name": "priceAlteration",
                                    "type": "array",
                                    "description": "Collection of price changes",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "applicationDuration": {
                                          "name": "applicationDuration",
                                          "type": "integer",
                                          "description": "Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge)"
                                        },
                                        "description": {
                                          "name": "description",
                                          "type": "string",
                                          "description": "A narrative that explains in detail the semantics of this order item price alteration"
                                        },
                                        "name": {
                                          "name": "name",
                                          "type": "string",
                                          "description": "Name of the order item price alteration"
                                        },
                                        "productOfferingPrice": {
                                          "name": "productOfferingPrice",
                                          "type": "object",
                                          "description": "Reference to ProductOfferingPriceRef"
                                        },
                                        "priceType": {
                                          "name": "priceType",
                                          "type": "string",
                                          "description": "A category that describes the price such as recurring, one time and usage."
                                        },
                                        "priority": {
                                          "name": "priority",
                                          "type": "integer",
                                          "description": "Priority level for applying this alteration among all the defined alterations on the order item price"
                                        },
                                        "recurringChargePeriod": {
                                          "name": "recurringChargePeriod",
                                          "type": "string",
                                          "description": "Could be month, week..."
                                        },
                                        "unitOfMeasure": {
                                          "name": "unitOfMeasure",
                                          "type": "string",
                                          "description": "Could be minutes, GB..."
                                        },
                                        "price": {
                                          "name": "price",
                                          "type": "object",
                                          "description": "Reference to Price"
                                        }
                                      }
                                    }
                                  },
                                  "priceType": {
                                    "name": "priceType",
                                    "type": "string",
                                    "description": "indicate if the price is for recurrent or no-recurrent charge"
                                  }
                                }
                              }
                            },
                            "productRelationship": {
                              "name": "productRelationship",
                              "type": "array",
                              "description": "Collection of product relationships",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Id of the related product"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Relationship type as relies on, bundles, etc..."
                                  }
                                }
                              }
                            },
                            "productSerialNumber": {
                              "name": "productSerialNumber",
                              "type": "string",
                              "description": "Is the serial number for the product. This is typically applicable to tangible products e.g. Broadband Router."
                            },
                            "productSpecification": {
                              "name": "productSpecification",
                              "type": "object",
                              "properties": {
                                "version": {
                                  "name": "version",
                                  "type": "string",
                                  "description": "Version of the product specification"
                                },
                                "targetProductSchema": {
                                  "name": "targetProductSchema",
                                  "type": "object",
                                  "description": "The reference object to the schema and type of target product which is described by product specification",
                                  "properties": {
                                    "@type": {
                                      "name": "@type",
                                      "type": "string",
                                      "description": "Class type of the target product"
                                    },
                                    "@schemaLocation": {
                                      "name": "@schemaLocation",
                                      "type": "string",
                                      "description": "This field provides a link to the schema describing the target product",
                                      "format": "uri"
                                    }
                                  }
                                }
                              }
                            },
                            "productTerm": {
                              "name": "productTerm",
                              "type": "array",
                              "description": "Collection of product terms",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Description of the productTerm"
                                  },
                                  "duration": {
                                    "name": "duration",
                                    "type": "object",
                                    "description": "A time interval in a given unit of time",
                                    "properties": {
                                      "amount": {
                                        "name": "amount",
                                        "type": "integer",
                                        "description": "Time interval (number of seconds, minutes, hours, etc.)"
                                      },
                                      "units": {
                                        "name": "units",
                                        "type": "string",
                                        "description": "Unit of time (seconds, minutes, hours, etc.)"
                                      }
                                    }
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                                    "properties": {
                                      "startDateTime": {
                                        "name": "startDateTime",
                                        "type": "string",
                                        "description": "Start of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      },
                                      "endDateTime": {
                                        "name": "endDateTime",
                                        "type": "string",
                                        "description": "End of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      }
                                    }
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the productTerm"
                                  }
                                }
                              }
                            },
                            "realizingResource": {
                              "name": "realizingResource",
                              "type": "array",
                              "description": "Collection of realizing resources",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Resource reference, for when Resource is used by other entities.",
                                "properties": {}
                              }
                            },
                            "realizingService": {
                              "name": "realizingService",
                              "type": "array",
                              "description": "Collection of realizing services",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Service reference, for when Service is used by other entities.",
                                "properties": {}
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "description": "Collection of related parties",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                  },
                                  "partyOrPartyRole": {
                                    "name": "partyOrPartyRole",
                                    "type": "union",
                                    "description": "",
                                    "oneOf": [
                                      {
                                        "name": "partyOrPartyRole_variant_0",
                                        "type": "object",
                                        "description": "A Party reference",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "partyId": {
                                            "name": "partyId",
                                            "type": "string",
                                            "description": "The identifier of the engaged party that is linked to the PartyRole object."
                                          },
                                          "partyName": {
                                            "name": "partyName",
                                            "type": "string",
                                            "description": "The name of the engaged party that is linked to the PartyRole object."
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_2",
                                        "type": "object",
                                        "properties": {
                                          "gender": {
                                            "name": "gender",
                                            "type": "string",
                                            "description": "Gender"
                                          },
                                          "placeOfBirth": {
                                            "name": "placeOfBirth",
                                            "type": "string",
                                            "description": "Reference to the place where the individual was born"
                                          },
                                          "countryOfBirth": {
                                            "name": "countryOfBirth",
                                            "type": "string",
                                            "description": "Country where the individual was born"
                                          },
                                          "nationality": {
                                            "name": "nationality",
                                            "type": "string",
                                            "description": "Nationality"
                                          },
                                          "maritalStatus": {
                                            "name": "maritalStatus",
                                            "type": "string",
                                            "description": "Marital status (married, divorced, widow ...)"
                                          },
                                          "birthDate": {
                                            "name": "birthDate",
                                            "type": "string",
                                            "description": "Birth date",
                                            "format": "date-time"
                                          },
                                          "deathDate": {
                                            "name": "deathDate",
                                            "type": "string",
                                            "description": "Date of death",
                                            "format": "date-time"
                                          },
                                          "title": {
                                            "name": "title",
                                            "type": "string",
                                            "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                                          },
                                          "aristocraticTitle": {
                                            "name": "aristocraticTitle",
                                            "type": "string",
                                            "description": "e.g. Baron, Graf, Earl"
                                          },
                                          "generation": {
                                            "name": "generation",
                                            "type": "string",
                                            "description": "e.g.. Sr, Jr, III (the third)"
                                          },
                                          "preferredGivenName": {
                                            "name": "preferredGivenName",
                                            "type": "string",
                                            "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                          },
                                          "familyNamePrefix": {
                                            "name": "familyNamePrefix",
                                            "type": "string",
                                            "description": "Family name prefix"
                                          },
                                          "legalName": {
                                            "name": "legalName",
                                            "type": "string",
                                            "description": "Legal name or birth name (name one has for official purposes)"
                                          },
                                          "middleName": {
                                            "name": "middleName",
                                            "type": "string",
                                            "description": "Middles name or initial"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                                          },
                                          "formattedName": {
                                            "name": "formattedName",
                                            "type": "string",
                                            "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                                          },
                                          "location": {
                                            "name": "location",
                                            "type": "string",
                                            "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Valid values for the lifecycle state of the individual",
                                            "enum": [
                                              "initialized",
                                              "validated",
                                              "deceased"
                                            ]
                                          },
                                          "otherName": {
                                            "name": "otherName",
                                            "type": "array",
                                            "description": "List of other names by which this individual is known",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                              "properties": {
                                                "title": {
                                                  "name": "title",
                                                  "type": "string",
                                                  "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                                },
                                                "aristocraticTitle": {
                                                  "name": "aristocraticTitle",
                                                  "type": "string",
                                                  "description": "e.g. Baron, Graf, Earl, etc."
                                                },
                                                "generation": {
                                                  "name": "generation",
                                                  "type": "string",
                                                  "description": "e.g. Sr, Jr, etc."
                                                },
                                                "givenName": {
                                                  "name": "givenName",
                                                  "type": "string",
                                                  "description": "First name"
                                                },
                                                "preferredGivenName": {
                                                  "name": "preferredGivenName",
                                                  "type": "string",
                                                  "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                                },
                                                "familyNamePrefix": {
                                                  "name": "familyNamePrefix",
                                                  "type": "string",
                                                  "description": "Family name prefix"
                                                },
                                                "familyName": {
                                                  "name": "familyName",
                                                  "type": "string",
                                                  "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                                },
                                                "legalName": {
                                                  "name": "legalName",
                                                  "type": "string",
                                                  "description": "Legal name or birth name (name one has for official purposes)"
                                                },
                                                "middleName": {
                                                  "name": "middleName",
                                                  "type": "string",
                                                  "description": "Middle name or initial"
                                                },
                                                "fullName": {
                                                  "name": "fullName",
                                                  "type": "string",
                                                  "description": "Full name flatten (first, middle, and last names)"
                                                },
                                                "formattedName": {
                                                  "name": "formattedName",
                                                  "type": "string",
                                                  "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "individualIdentification": {
                                            "name": "individualIdentification",
                                            "type": "array",
                                            "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "identificationId": {
                                                  "name": "identificationId",
                                                  "type": "string",
                                                  "description": "Identifier"
                                                },
                                                "issuingAuthority": {
                                                  "name": "issuingAuthority",
                                                  "type": "string",
                                                  "description": "Authority which has issued the identifier, such as: social security, town hall"
                                                },
                                                "issuingDate": {
                                                  "name": "issuingDate",
                                                  "type": "string",
                                                  "description": "Date at which the identifier was issued",
                                                  "format": "date-time"
                                                },
                                                "identificationType": {
                                                  "name": "identificationType",
                                                  "type": "string",
                                                  "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "attachment": {
                                                  "name": "attachment",
                                                  "type": "union",
                                                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                                  "oneOf": [
                                                    {
                                                      "name": "attachment_variant_0",
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "name": "name",
                                                          "type": "string",
                                                          "description": "The name of the attachment"
                                                        },
                                                        "description": {
                                                          "name": "description",
                                                          "type": "string",
                                                          "description": "A narrative text describing the content of the attachment"
                                                        },
                                                        "url": {
                                                          "name": "url",
                                                          "type": "string",
                                                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                                        },
                                                        "content": {
                                                          "name": "content",
                                                          "type": "string",
                                                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                                          "format": "base64"
                                                        },
                                                        "size": {
                                                          "name": "size",
                                                          "type": "object",
                                                          "description": "An amount in a given unit",
                                                          "properties": {
                                                            "amount": {
                                                              "name": "amount",
                                                              "type": "number",
                                                              "description": "Numeric value in a given unit",
                                                              "format": "float"
                                                            },
                                                            "units": {
                                                              "name": "units",
                                                              "type": "string",
                                                              "description": "Unit"
                                                            }
                                                          }
                                                        },
                                                        "validFor": {
                                                          "name": "validFor",
                                                          "type": "object",
                                                          "description": "Reference to TimePeriod"
                                                        },
                                                        "attachmentType": {
                                                          "name": "attachmentType",
                                                          "type": "string",
                                                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                                        },
                                                        "mimeType": {
                                                          "name": "mimeType",
                                                          "type": "string",
                                                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "attachment_variant_1",
                                                      "type": "object",
                                                      "properties": {
                                                        "description": {
                                                          "name": "description",
                                                          "type": "string",
                                                          "description": "A narrative text describing the content of the attachment"
                                                        },
                                                        "url": {
                                                          "name": "url",
                                                          "type": "string",
                                                          "description": "Link to the attachment media/content"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "disability": {
                                            "name": "disability",
                                            "type": "array",
                                            "description": "List of disabilities suffered by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Lack or inadequate strength or ability.",
                                              "properties": {
                                                "disabilityCode": {
                                                  "name": "disabilityCode",
                                                  "type": "string",
                                                  "description": "Code of the disability"
                                                },
                                                "disabilityName": {
                                                  "name": "disabilityName",
                                                  "type": "string",
                                                  "description": "Name of the disability"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "languageAbility": {
                                            "name": "languageAbility",
                                            "type": "array",
                                            "description": "List of national languages known by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Ability of an individual to understand or converse in a language.",
                                              "properties": {
                                                "languageCode": {
                                                  "name": "languageCode",
                                                  "type": "string",
                                                  "description": "Language code (RFC 5646)"
                                                },
                                                "languageName": {
                                                  "name": "languageName",
                                                  "type": "string",
                                                  "description": "Language name"
                                                },
                                                "isFavouriteLanguage": {
                                                  "name": "isFavouriteLanguage",
                                                  "type": "boolean",
                                                  "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                                },
                                                "writingProficiency": {
                                                  "name": "writingProficiency",
                                                  "type": "string",
                                                  "description": "Writing proficiency evaluated for this language"
                                                },
                                                "readingProficiency": {
                                                  "name": "readingProficiency",
                                                  "type": "string",
                                                  "description": "Reading proficiency evaluated for this language"
                                                },
                                                "speakingProficiency": {
                                                  "name": "speakingProficiency",
                                                  "type": "string",
                                                  "description": "Speaking proficiency evaluated for this language"
                                                },
                                                "listeningProficiency": {
                                                  "name": "listeningProficiency",
                                                  "type": "string",
                                                  "description": "Listening proficiency evaluated for this language"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "skill": {
                                            "name": "skill",
                                            "type": "array",
                                            "description": "List of skills exhibited by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                              "properties": {
                                                "skillCode": {
                                                  "name": "skillCode",
                                                  "type": "string",
                                                  "description": "Code of the skill"
                                                },
                                                "skillName": {
                                                  "name": "skillName",
                                                  "type": "string",
                                                  "description": "Name of the skill, such as Java language"
                                                },
                                                "evaluatedLevel": {
                                                  "name": "evaluatedLevel",
                                                  "type": "string",
                                                  "description": "Level of expertise in a skill evaluated for an individual"
                                                },
                                                "comment": {
                                                  "name": "comment",
                                                  "type": "string",
                                                  "description": "A free text comment linked to the evaluation done"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "familyName": {
                                            "name": "familyName",
                                            "type": "string",
                                            "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                          },
                                          "givenName": {
                                            "name": "givenName",
                                            "type": "string",
                                            "description": "First name of the individual"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_3",
                                        "type": "object",
                                        "properties": {
                                          "isLegalEntity": {
                                            "name": "isLegalEntity",
                                            "type": "boolean",
                                            "description": "If value is true, the organization is a legal entity known by a national referential."
                                          },
                                          "isHeadOffice": {
                                            "name": "isHeadOffice",
                                            "type": "boolean",
                                            "description": "If value is true, the organization is the head office"
                                          },
                                          "organizationType": {
                                            "name": "organizationType",
                                            "type": "string",
                                            "description": "Type of Organization (company, department...)"
                                          },
                                          "existsDuring": {
                                            "name": "existsDuring",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "Organization name (department name for example)"
                                          },
                                          "nameType": {
                                            "name": "nameType",
                                            "type": "string",
                                            "description": "Type of the name : Co, Inc, Ltd, etc."
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Valid values for the lifecycle state of the organization",
                                            "enum": [
                                              "initialized",
                                              "validated",
                                              "closed"
                                            ]
                                          },
                                          "otherName": {
                                            "name": "otherName",
                                            "type": "array",
                                            "description": "List of additional names by which the organization is known",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "tradingName": {
                                                  "name": "tradingName",
                                                  "type": "string",
                                                  "description": "The name that the organization trades under"
                                                },
                                                "nameType": {
                                                  "name": "nameType",
                                                  "type": "string",
                                                  "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                                },
                                                "name": {
                                                  "name": "name",
                                                  "type": "string",
                                                  "description": "Organization name (department name for example)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "organizationIdentification": {
                                            "name": "organizationIdentification",
                                            "type": "array",
                                            "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "identificationId": {
                                                  "name": "identificationId",
                                                  "type": "string",
                                                  "description": "Identifier"
                                                },
                                                "issuingAuthority": {
                                                  "name": "issuingAuthority",
                                                  "type": "string",
                                                  "description": "Authority which has issued the identifier (chamber of commerce...)"
                                                },
                                                "issuingDate": {
                                                  "name": "issuingDate",
                                                  "type": "string",
                                                  "description": "Date at which the identifier was issued",
                                                  "format": "date-time"
                                                },
                                                "identificationType": {
                                                  "name": "identificationType",
                                                  "type": "string",
                                                  "description": "Type of identification information used to identify the company in a country or internationally"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "attachment": {
                                                  "name": "attachment",
                                                  "type": "object",
                                                  "description": "Reference to AttachmentRefOrValue"
                                                }
                                              }
                                            }
                                          },
                                          "organizationChildRelationship": {
                                            "name": "organizationChildRelationship",
                                            "type": "array",
                                            "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "relationshipType": {
                                                  "name": "relationshipType",
                                                  "type": "string",
                                                  "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                                },
                                                "organization": {
                                                  "name": "organization",
                                                  "type": "object",
                                                  "properties": {}
                                                }
                                              }
                                            }
                                          },
                                          "organizationParentRelationship": {
                                            "name": "organizationParentRelationship",
                                            "type": "object",
                                            "properties": {
                                              "relationshipType": {
                                                "name": "relationshipType",
                                                "type": "string",
                                                "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                              },
                                              "organization": {
                                                "name": "organization",
                                                "type": "object",
                                                "description": "Reference to OrganizationRef"
                                              }
                                            }
                                          },
                                          "tradingName": {
                                            "name": "tradingName",
                                            "type": "string",
                                            "description": "Name that the organization (unit) trades under"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_4",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A description of the PartyRole."
                                          },
                                          "role": {
                                            "name": "role",
                                            "type": "string",
                                            "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
                                          },
                                          "engagedParty": {
                                            "name": "engagedParty",
                                            "type": "object",
                                            "description": "Reference to PartyRef"
                                          },
                                          "partyRoleSpecification": {
                                            "name": "partyRoleSpecification",
                                            "type": "object",
                                            "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                                            "properties": {}
                                          },
                                          "characteristic": {
                                            "name": "characteristic",
                                            "type": "array",
                                            "description": "Describes the characteristic of a party role.",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to Characteristic"
                                            }
                                          },
                                          "account": {
                                            "name": "account",
                                            "type": "array",
                                            "description": "Collection of accounts",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Account reference. A account may be a party account or a financial account.",
                                              "properties": {}
                                            }
                                          },
                                          "agreement": {
                                            "name": "agreement",
                                            "type": "array",
                                            "description": "Collection of agreements",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                              "properties": {}
                                            }
                                          },
                                          "contactMedium": {
                                            "name": "contactMedium",
                                            "type": "array",
                                            "description": "Collection of contact mediums",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Identifier for this contact medium."
                                                },
                                                "preferred": {
                                                  "name": "preferred",
                                                  "type": "boolean",
                                                  "description": "If true, indicates that is the preferred contact medium"
                                                },
                                                "contactType": {
                                                  "name": "contactType",
                                                  "type": "string",
                                                  "description": "Type of the contact medium to qualify it like pro email / personal email. This is not used to define the contact medium used."
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "paymentMethod": {
                                            "name": "paymentMethod",
                                            "type": "array",
                                            "description": "Collection of payment methods",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                              "properties": {}
                                            }
                                          },
                                          "creditProfile": {
                                            "name": "creditProfile",
                                            "type": "array",
                                            "description": "Collection of credit profiles",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "creditProfileDate": {
                                                  "name": "creditProfileDate",
                                                  "type": "string",
                                                  "description": "The date the profile was established",
                                                  "format": "date-time"
                                                },
                                                "creditRiskRating": {
                                                  "name": "creditRiskRating",
                                                  "type": "integer",
                                                  "description": "This is an integer whose value is used to rate the risk"
                                                },
                                                "creditScore": {
                                                  "name": "creditScore",
                                                  "type": "integer",
                                                  "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "relatedParty": {
                                            "name": "relatedParty",
                                            "type": "array",
                                            "description": "Collection of related parties",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to RelatedPartyOrPartyRole"
                                            }
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Used to track the lifecycle status of the party role."
                                          },
                                          "statusReason": {
                                            "name": "statusReason",
                                            "type": "string",
                                            "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_5",
                                        "type": "object",
                                        "description": "When business partner is the Supplier ",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_6",
                                        "type": "object",
                                        "description": "When business partner is the BusinessPartner ",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_7",
                                        "type": "object",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_8",
                                        "type": "object",
                                        "properties": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "place": {
                              "name": "place",
                              "type": "array",
                              "description": "Collection of places",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string"
                                  },
                                  "place": {
                                    "name": "place",
                                    "type": "union",
                                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place entity and not the PlaceRefOrValue class itself",
                                    "oneOf": [
                                      {
                                        "name": "place_variant_0",
                                        "type": "object",
                                        "properties": {
                                          "bbox": {
                                            "name": "bbox",
                                            "type": "array",
                                            "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                                            "items": {
                                              "name": "items",
                                              "type": "number"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "name": "place_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "name": "code",
                                            "type": "string",
                                            "description": "A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]"
                                          },
                                          "creationDate": {
                                            "name": "creationDate",
                                            "type": "string",
                                            "description": "Date and time when the GeographicSite was created",
                                            "format": "date-time"
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "Text describing additional information regarding the site"
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former"
                                          },
                                          "relatedParty": {
                                            "name": "relatedParty",
                                            "type": "array",
                                            "description": "Related parties collection",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "role": {
                                                  "name": "role",
                                                  "type": "string",
                                                  "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                                },
                                                "partyOrPartyRole": {
                                                  "name": "partyOrPartyRole",
                                                  "type": "union",
                                                  "description": "",
                                                  "oneOf": [
                                                    {
                                                      "name": "partyOrPartyRole_variant_0",
                                                      "type": "object",
                                                      "description": "Reference to PartyRef"
                                                    },
                                                    {
                                                      "name": "partyOrPartyRole_variant_1",
                                                      "type": "object",
                                                      "description": "Reference to PartyRoleRef"
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "externalIdentifier": {
                                            "name": "externalIdentifier",
                                            "type": "array",
                                            "description": "Collection of external identifiers",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "owner": {
                                                  "name": "owner",
                                                  "type": "string",
                                                  "description": "Name of the external system that owns the entity."
                                                },
                                                "externalIdentifierType": {
                                                  "name": "externalIdentifierType",
                                                  "type": "string",
                                                  "description": "Type of the identification, typically would be the type of the entity within the external system"
                                                },
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "identification of the entity within the external system."
                                                }
                                              }
                                            }
                                          },
                                          "calendar": {
                                            "name": "calendar",
                                            "type": "array",
                                            "description": "Collection of calendar items",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "day": {
                                                  "name": "day",
                                                  "type": "string",
                                                  "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, ...)"
                                                },
                                                "timeZone": {
                                                  "name": "timeZone",
                                                  "type": "string",
                                                  "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)"
                                                },
                                                "hourPeriod": {
                                                  "name": "hourPeriod",
                                                  "type": "array",
                                                  "description": "Collection of hour intervals",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "properties": {
                                                      "endHour": {
                                                        "name": "endHour",
                                                        "type": "string",
                                                        "description": "The time when the status ends applying"
                                                      },
                                                      "startHour": {
                                                        "name": "startHour",
                                                        "type": "string",
                                                        "description": "The time when the status starts applying"
                                                      }
                                                    }
                                                  }
                                                },
                                                "status": {
                                                  "name": "status",
                                                  "type": "string",
                                                  "description": "Indication of the availability of the calendar period (e.g.: available, booked, etc.)"
                                                }
                                              }
                                            }
                                          },
                                          "place": {
                                            "name": "place",
                                            "type": "array",
                                            "description": "Collection of place objects",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to PlaceRefOrValue"
                                            }
                                          },
                                          "siteRelationship": {
                                            "name": "siteRelationship",
                                            "type": "array",
                                            "description": "Collection of site siteRelationships",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "href": {
                                                  "name": "href",
                                                  "type": "string",
                                                  "description": "Reference of the related geographic site"
                                                },
                                                "role": {
                                                  "name": "role",
                                                  "type": "string",
                                                  "description": "Role of the related site in the relationship"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Unique identifier of the related site entity within the server"
                                                },
                                                "relationshipType": {
                                                  "name": "relationshipType",
                                                  "type": "string",
                                                  "description": "Type of relationship"
                                                }
                                              }
                                            }
                                          },
                                          "siteCategory": {
                                            "name": "siteCategory",
                                            "type": "string",
                                            "description": "Site classification/category."
                                          },
                                          "contactMedium": {
                                            "name": "contactMedium",
                                            "type": "array",
                                            "description": "Collection of contact information",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to ContactMedium"
                                            }
                                          },
                                          "siteFeature": {
                                            "name": "siteFeature",
                                            "type": "array",
                                            "description": "Collection of site features",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "array",
                                                  "description": "Collection of validity information",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "description": "Reference to CalendarPeriod"
                                                  }
                                                },
                                                "attachment": {
                                                  "name": "attachment",
                                                  "type": "array",
                                                  "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "description": "Reference to AttachmentRefOrValue"
                                                  }
                                                },
                                                "note": {
                                                  "name": "note",
                                                  "type": "array",
                                                  "description": "Collection of notes",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "description": "Reference to Note"
                                                  }
                                                },
                                                "relatedParty": {
                                                  "name": "relatedParty",
                                                  "type": "array",
                                                  "description": "The associated party or partyRole",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                                                  }
                                                },
                                                "featureCategory": {
                                                  "name": "featureCategory",
                                                  "type": "array",
                                                  "description": "Collection of feature category",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "string",
                                                    "description": "This parameter represents a feature category which may be assigned to certain groups of features. "
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "name": "place_variant_2",
                                        "type": "object",
                                        "properties": {
                                          "city": {
                                            "name": "city",
                                            "type": "string",
                                            "description": "City that the address is in"
                                          },
                                          "country": {
                                            "name": "country",
                                            "type": "string",
                                            "description": "Country that the address is in"
                                          },
                                          "locality": {
                                            "name": "locality",
                                            "type": "string",
                                            "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                                          },
                                          "postcode": {
                                            "name": "postcode",
                                            "type": "string",
                                            "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                                          },
                                          "stateOrProvince": {
                                            "name": "stateOrProvince",
                                            "type": "string",
                                            "description": "the State or Province that the address is in"
                                          },
                                          "streetName": {
                                            "name": "streetName",
                                            "type": "string",
                                            "description": "Name of the street or other street type"
                                          },
                                          "streetNr": {
                                            "name": "streetNr",
                                            "type": "string",
                                            "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                                          },
                                          "streetNrLast": {
                                            "name": "streetNrLast",
                                            "type": "string",
                                            "description": "Last number in a range of street numbers allocated to a property"
                                          },
                                          "streetNrLastSuffix": {
                                            "name": "streetNrLastSuffix",
                                            "type": "string",
                                            "description": "Last street number suffix for a ranged address"
                                          },
                                          "streetNrSuffix": {
                                            "name": "streetNrSuffix",
                                            "type": "string",
                                            "description": "the first street number suffix"
                                          },
                                          "streetSuffix": {
                                            "name": "streetSuffix",
                                            "type": "string",
                                            "description": "A modifier denoting a relative direction"
                                          },
                                          "streetType": {
                                            "name": "streetType",
                                            "type": "string",
                                            "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                                          },
                                          "countryCode": {
                                            "name": "countryCode",
                                            "type": "array",
                                            "description": "Country codes are short alphabetic or numeric geographical codes (geocodes) developed to represent countries and dependent areas, for use in data processing and communications. Several different systems have been developed to do this. The term country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes, the E.164 country calling codes.",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "format": {
                                                  "name": "format",
                                                  "type": "string",
                                                  "description": "Standard/Regulatory definition identifier. e.g., ISO 3166-1"
                                                },
                                                "value": {
                                                  "name": "value",
                                                  "type": "string",
                                                  "description": "The value of the resource in the corresponding standard.e.g., a country code value"
                                                }
                                              }
                                            }
                                          },
                                          "geographicLocation": {
                                            "name": "geographicLocation",
                                            "type": "union",
                                            "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicLocation entity and not the GeographicLocationRefOrValue class itself",
                                            "oneOf": [
                                              {
                                                "name": "geographicLocation_variant_0",
                                                "type": "object",
                                                "description": "Reference to GeographicLocation"
                                              },
                                              {
                                                "name": "geographicLocation_variant_1",
                                                "type": "object",
                                                "properties": {}
                                              }
                                            ]
                                          },
                                          "geographicSubAddress": {
                                            "name": "geographicSubAddress",
                                            "type": "array",
                                            "description": "Collection of sub addresses",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "buildingName": {
                                                  "name": "buildingName",
                                                  "type": "string",
                                                  "description": "allows for buildings that have well-known names"
                                                },
                                                "href": {
                                                  "name": "href",
                                                  "type": "string",
                                                  "description": "Link to the subAddress"
                                                },
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Unique Identifier of the subAddress"
                                                },
                                                "levelNumber": {
                                                  "name": "levelNumber",
                                                  "type": "string",
                                                  "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                                                },
                                                "levelType": {
                                                  "name": "levelType",
                                                  "type": "string",
                                                  "description": "describes level types within a building"
                                                },
                                                "name": {
                                                  "name": "name",
                                                  "type": "string",
                                                  "description": "Name of the subAddress to identify it with a meaningful identification"
                                                },
                                                "privateStreetName": {
                                                  "name": "privateStreetName",
                                                  "type": "string",
                                                  "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                                                },
                                                "privateStreetNumber": {
                                                  "name": "privateStreetNumber",
                                                  "type": "string",
                                                  "description": "private streets numbers internal to a private street"
                                                },
                                                "subUnit": {
                                                  "name": "subUnit",
                                                  "type": "array",
                                                  "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "properties": {
                                                      "subUnitNumber": {
                                                        "name": "subUnitNumber",
                                                        "type": "string",
                                                        "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                                                      },
                                                      "subUnitType": {
                                                        "name": "subUnitType",
                                                        "type": "string",
                                                        "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                                                      }
                                                    }
                                                  }
                                                },
                                                "subAddressType": {
                                                  "name": "subAddressType",
                                                  "type": "string",
                                                  "description": "Type of subAddress : it can be a subunit or a private street"
                                                }
                                              }
                                            }
                                          },
                                          "geographicAddressType": {
                                            "name": "geographicAddressType",
                                            "type": "string",
                                            "description": "Classification of the address, e.g., residential, industrial "
                                          },
                                          "geographicSite": {
                                            "name": "geographicSite",
                                            "type": "union",
                                            "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicSite entity and not the GeographicSiteRefOrValue class itself",
                                            "oneOf": [
                                              {
                                                "name": "geographicSite_variant_0",
                                                "type": "object",
                                                "description": "Reference to GeographicSite"
                                              },
                                              {
                                                "name": "geographicSite_variant_1",
                                                "type": "object",
                                                "properties": {}
                                              }
                                            ]
                                          },
                                          "geographicAddressRelationship": {
                                            "name": "geographicAddressRelationship",
                                            "type": "array",
                                            "description": "A list of geographic addresses relationships. Represents a relationship between geographic addresses",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Unique identifier of the related geographic address. This identifier serves as a reference to uniquely identify the associated geographic address within the system."
                                                },
                                                "name": {
                                                  "name": "name",
                                                  "type": "string",
                                                  "description": "Name of the geographic address. This attribute provides a human-readable name or label for the related geographic address, which can help users identify and differentiate between different addresses."
                                                },
                                                "relationshipType": {
                                                  "name": "relationshipType",
                                                  "type": "string",
                                                  "description": "Type of relationship between the geographic addresses. This attribute specifies the nature of the relationship between the related addresses. It provides context for understanding how the addresses are related to each other."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "name": "place_variant_3",
                                        "type": "object",
                                        "description": "Place reference.",
                                        "properties": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "startDate": {
                              "name": "startDate",
                              "type": "string",
                              "description": "Is the date from which the product starts",
                              "format": "date-time"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Possible values for the status of the product",
                              "enum": [
                                "created",
                                "pendingActive",
                                "cancelled",
                                "active",
                                "pendingTerminate",
                                "terminated",
                                "suspended",
                                "aborted "
                              ]
                            },
                            "terminationDate": {
                              "name": "terminationDate",
                              "type": "string",
                              "description": "Is the date when the product was terminated",
                              "format": "date-time"
                            },
                            "intent": {
                              "name": "intent",
                              "type": "union",
                              "description": "Intent Ref (if Intent already exists) or Value (if Intent be created or its details be presented)",
                              "oneOf": [
                                {
                                  "name": "intent_variant_0",
                                  "type": "object",
                                  "description": "Intent reference, for when Intent is used by other entities",
                                  "properties": {}
                                },
                                {
                                  "name": "intent_variant_1",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "The description of the intent."
                                    },
                                    "validFor": {
                                      "name": "validFor",
                                      "type": "object",
                                      "description": "Reference to TimePeriod"
                                    },
                                    "isBundle": {
                                      "name": "isBundle",
                                      "type": "boolean",
                                      "description": "isBundle determines whether an intent represents a single intent (false), or a bundle of intents(true)."
                                    },
                                    "priority": {
                                      "name": "priority",
                                      "type": "string",
                                      "description": "Can be used by intent owner to prioritize intents in an intent management system"
                                    },
                                    "statusChangeDate": {
                                      "name": "statusChangeDate",
                                      "type": "string",
                                      "description": "A date time( DateTime). The date that the entity status changed to the current one",
                                      "format": "date-time"
                                    },
                                    "context": {
                                      "name": "context",
                                      "type": "string",
                                      "description": "A string used to give a context to the intent"
                                    },
                                    "version": {
                                      "name": "version",
                                      "type": "string",
                                      "description": "A field that identifies the specific version of an instance of an intent."
                                    },
                                    "intentSpecification": {
                                      "name": "intentSpecification",
                                      "type": "object",
                                      "description": "Reference to EntityRef"
                                    },
                                    "intentRelationship": {
                                      "name": "intentRelationship",
                                      "type": "array",
                                      "description": "A list of intents related to this intent",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "A uni-directional relationship from this entity to a target entity instance",
                                        "properties": {
                                          "href": {
                                            "name": "href",
                                            "type": "string"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string"
                                          },
                                          "role": {
                                            "name": "role",
                                            "type": "string",
                                            "description": "The association role for this entity"
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "associationSpec": {
                                            "name": "associationSpec",
                                            "type": "object",
                                            "description": "Reference to EntityRef"
                                          },
                                          "@baseType": {
                                            "name": "@baseType",
                                            "type": "string",
                                            "description": "When sub-classing, this defines the super-class"
                                          },
                                          "@schemaLocation": {
                                            "name": "@schemaLocation",
                                            "type": "string",
                                            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                                          },
                                          "relationshipType": {
                                            "name": "relationshipType",
                                            "type": "string",
                                            "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                                          },
                                          "id": {
                                            "name": "id",
                                            "type": "string"
                                          },
                                          "@referredType": {
                                            "name": "@referredType",
                                            "type": "string"
                                          },
                                          "@type": {
                                            "name": "@type",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "characteristic": {
                                      "name": "characteristic",
                                      "type": "array",
                                      "description": "Collection of characteristics",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "Reference to Characteristic"
                                      }
                                    },
                                    "relatedParty": {
                                      "name": "relatedParty",
                                      "type": "array",
                                      "description": "Collection of related parties",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                                      }
                                    },
                                    "attachment": {
                                      "name": "attachment",
                                      "type": "array",
                                      "description": "Attachments that may be of relevance to this intent, such as picture, document, media",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "Reference to AttachmentRefOrValue"
                                      }
                                    },
                                    "name": {
                                      "name": "name",
                                      "type": "string",
                                      "description": "The name of the intent."
                                    },
                                    "expression": {
                                      "name": "expression",
                                      "type": "object",
                                      "properties": {
                                        "iri": {
                                          "name": "iri",
                                          "type": "string",
                                          "description": "Internationalized Resource Identifier of the intent Expression"
                                        }
                                      }
                                    },
                                    "creationDate": {
                                      "name": "creationDate",
                                      "type": "string",
                                      "description": "Date and time of the creation of this REST resource",
                                      "format": "date-time"
                                    },
                                    "lastUpdate": {
                                      "name": "lastUpdate",
                                      "type": "string",
                                      "description": "Date and time of the last update of this REST resource",
                                      "format": "date-time"
                                    },
                                    "lifecycleStatus": {
                                      "name": "lifecycleStatus",
                                      "type": "string",
                                      "description": "Used to indicate the current lifecycle status of this intent"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "name": "product_variant_1",
                          "type": "object",
                          "description": "A Product reference",
                          "properties": {}
                        }
                      ]
                    },
                    "productOffering": {
                      "name": "productOffering",
                      "type": "object",
                      "description": "Reference to ProductOfferingRef"
                    },
                    "category": {
                      "name": "category",
                      "type": "object",
                      "properties": {
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "Version of the category"
                        }
                      }
                    },
                    "promotion": {
                      "name": "promotion",
                      "type": "object",
                      "description": "Promotion reference. Promotion Resource is used to provide the additional discount, voucher, bonus or gift to the customer who meets the pre-defined criteria. Using promotion, the enterprise is able to attract the users and encourage more consumption, especially continuous purchases.",
                      "properties": {}
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the ProductOfferingQualification item (generally it is a sequence number 01, 02, 03, ...)"
                    }
                  }
                }
              },
              "searchCriteria": {
                "name": "searchCriteria",
                "type": "object",
                "description": "Reference to QueryProductOfferingQualificationItem"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Party playing a role for this qualification (as requester for example)",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to RelatedPartyOrPartyRole"
                }
              },
              "requestedQualificationCompletionDate": {
                "name": "requestedQualificationCompletionDate",
                "type": "string",
                "description": "Deadline date when the requester expected a qualification answer",
                "format": "date-time"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Possible values for the state of a task",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "inProgress",
                  "cancelled",
                  "done",
                  "terminatedWithError"
                ]
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date and time when the QueryProductOfferingQualification was created",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "appliedCustomerBillingRate": {
    "tableName": "AppliedCustomerBillingRate",
    "endpoints": [
      {
        "operationId": "listAppliedCustomerBillingRate",
        "path": "/appliedCustomerBillingRate",
        "method": "get"
      },
      {
        "operationId": "retrieveAppliedCustomerBillingRate",
        "path": "/appliedCustomerBillingRate/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "appliedTax": {
                "name": "appliedTax",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "taxAmount": {
                      "name": "taxAmount",
                      "type": "object",
                      "description": "A base / value business entity used to represent money",
                      "properties": {
                        "unit": {
                          "name": "unit",
                          "type": "string",
                          "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                        },
                        "value": {
                          "name": "value",
                          "type": "number",
                          "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                          "format": "float"
                        }
                      }
                    },
                    "taxCategory": {
                      "name": "taxCategory",
                      "type": "string",
                      "description": "A categorization of the tax rate"
                    },
                    "taxRate": {
                      "name": "taxRate",
                      "type": "number",
                      "description": "Applied rate",
                      "format": "float"
                    }
                  }
                }
              },
              "bill": {
                "name": "bill",
                "type": "object",
                "description": "Bill reference.",
                "properties": {}
              },
              "date": {
                "name": "date",
                "type": "string",
                "description": "Creation date of the applied billing rate",
                "format": "date-time"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Additional data to be displayed on the bill for this customer applied billing rate"
              },
              "isBilled": {
                "name": "isBilled",
                "type": "boolean",
                "description": "Indicates if this applied billing rate has been presented on a bill or not. If isBilled = true then bill should be provided, if false then billingAccount should be provided"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the customer applied billing rate"
              },
              "periodCoverage": {
                "name": "periodCoverage",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "taxExcludedAmount": {
                "name": "taxExcludedAmount",
                "type": "object",
                "description": "Reference to Money"
              },
              "taxIncludedAmount": {
                "name": "taxIncludedAmount",
                "type": "object",
                "description": "Reference to Money"
              },
              "appliedBillingRateType": {
                "name": "appliedBillingRateType",
                "type": "string",
                "description": "Type of the applied billing rate : appliedBillingCharge (any kind of charge except taxation charges : recurringCharge, oneTimeCharge, usageCharge),  appliedBillingCredit (any kind of credit : rebate or productAlteration) or appliedPenaltyCharge (penalty charges such as late fees, payment rejection fees,...)"
              },
              "billingAccount": {
                "name": "billingAccount",
                "type": "object",
                "properties": {
                  "ratingType": {
                    "name": "ratingType",
                    "type": "string",
                    "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                  }
                }
              },
              "product": {
                "name": "product",
                "type": "object",
                "description": "A Product reference",
                "properties": {}
              },
              "characteristic": {
                "name": "characteristic",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "billCycle": {
    "tableName": "BillCycle",
    "endpoints": [
      {
        "operationId": "listBillCycle",
        "path": "/billCycle",
        "method": "get"
      },
      {
        "operationId": "retrieveBillCycle",
        "path": "/billCycle/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "billingDate": {
                "name": "billingDate",
                "type": "string",
                "description": "The billing/settlement date.",
                "format": "date-time"
              },
              "billingPeriod": {
                "name": "billingPeriod",
                "type": "string",
                "description": "A billing time period. It is e.g. the concrete expressed month. Example: 'March'."
              },
              "chargeDate": {
                "name": "chargeDate",
                "type": "string",
                "description": "Date through when a payment method (e.g. credit card,...) will be activated.",
                "format": "date-time"
              },
              "creditDate": {
                "name": "creditDate",
                "type": "string",
                "description": "Date through which credits previously received by the billing system are displeyed on the bill.",
                "format": "date-time"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "An explanation regarding this billing cycle. If necessary."
              },
              "mailingDate": {
                "name": "mailingDate",
                "type": "string",
                "description": "Customer bill mailing date.",
                "format": "date-time"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "A short descriptive name of the actual billing cycle"
              },
              "paymentDueDate": {
                "name": "paymentDueDate",
                "type": "string",
                "description": "Date, when the payment is due.",
                "format": "date-time"
              },
              "BillCycleSpecification": {
                "name": "BillCycleSpecification",
                "type": "object",
                "properties": {
                  "description": {
                    "name": "description",
                    "type": "string",
                    "description": "An explanatory text regarding the BillCycleSpecification"
                  }
                }
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "customerBill": {
    "tableName": "CustomerBill",
    "endpoints": [
      {
        "operationId": "listCustomerBill",
        "path": "/customerBill",
        "method": "get"
      },
      {
        "operationId": "retrieveCustomerBill",
        "path": "/customerBill/{id}",
        "method": "get"
      },
      {
        "operationId": "patchCustomerBill",
        "path": "/customerBill/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "amountDue": {
                "name": "amountDue",
                "type": "object",
                "description": "A base / value business entity used to represent money",
                "properties": {
                  "unit": {
                    "name": "unit",
                    "type": "string",
                    "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                  },
                  "value": {
                    "name": "value",
                    "type": "number",
                    "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                    "format": "float"
                  }
                }
              },
              "appliedPayment": {
                "name": "appliedPayment",
                "type": "array",
                "description": "Applied payment is a payment associated with the bill. There may be a partial payment, then there should be several applied payments available. On the other hand, more than one bill could be payed by one payment. In general there is an n:m relation between payment and bill.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "The applied payment is the result of lettering process. It enables to assign automatically or manually part of incoming payment amount to a bill.",
                  "properties": {
                    "appliedAmount": {
                      "name": "appliedAmount",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "payment": {
                      "name": "payment",
                      "type": "object",
                      "description": "If an immediate payment has been done at the product order submission, the payment information are captured and stored (as a reference) in the order.",
                      "properties": {}
                    }
                  }
                }
              },
              "billDate": {
                "name": "billDate",
                "type": "string",
                "description": "Bill date, external customer view (in consequence: different to the production date of the bill)",
                "format": "date-time"
              },
              "billDocument": {
                "name": "billDocument",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                          "properties": {
                            "startDateTime": {
                              "name": "startDateTime",
                              "type": "string",
                              "description": "Start of the time period, using IETC-RFC-3339 format",
                              "format": "date-time"
                            },
                            "endDateTime": {
                              "name": "endDateTime",
                              "type": "string",
                              "description": "End of the time period, using IETC-RFC-3339 format",
                              "format": "date-time"
                            }
                          }
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "billNo": {
                "name": "billNo",
                "type": "string",
                "description": "Bill reference known by the customer or the party and displayed on the bill. Could be different from the id"
              },
              "billingAccount": {
                "name": "billingAccount",
                "type": "object",
                "properties": {
                  "ratingType": {
                    "name": "ratingType",
                    "type": "string",
                    "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                  }
                }
              },
              "billingPeriod": {
                "name": "billingPeriod",
                "type": "object",
                "description": "Reference to TimePeriod"
              },
              "billCycle": {
                "name": "billCycle",
                "type": "object",
                "properties": {
                  "@referredType": {
                    "name": "@referredType",
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                  }
                }
              },
              "category": {
                "name": "category",
                "type": "string",
                "description": "Category of the bill produced : normal, duplicate, interim, last, trial customer or credit note for example"
              },
              "financialAccount": {
                "name": "financialAccount",
                "type": "object",
                "description": "AccountReceivable reference. An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. An account receivable aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.",
                "properties": {}
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date of bill last update",
                "format": "date-time"
              },
              "nextBillDate": {
                "name": "nextBillDate",
                "type": "string",
                "description": "). Approximate date of  the next bill production given for information (only used/meaningful for on cycle / regular bills)",
                "format": "date-time"
              },
              "paymentDueDate": {
                "name": "paymentDueDate",
                "type": "string",
                "description": "Date at which the amount due should have been paid",
                "format": "date-time"
              },
              "paymentMethod": {
                "name": "paymentMethod",
                "type": "object",
                "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                "properties": {}
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "remainingAmount": {
                "name": "remainingAmount",
                "type": "object",
                "description": "Reference to Money"
              },
              "runType": {
                "name": "runType",
                "type": "string",
                "description": "Recommended Enumeration Type (not formal forced in standard): Valid values for the runType of a bill. The bill could be produced in a regular bill cycle 'onCycle'. Otherwise the bill is produced on a request (e.g. customer request). This could be indicated by 'offCycle'",
                "enum": [
                  "onCycle",
                  "offCycle"
                ]
              },
              "taxExcludedAmount": {
                "name": "taxExcludedAmount",
                "type": "object",
                "description": "Reference to Money"
              },
              "taxIncludedAmount": {
                "name": "taxIncludedAmount",
                "type": "object",
                "description": "Reference to Money"
              },
              "taxItem": {
                "name": "taxItem",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "taxAmount": {
                      "name": "taxAmount",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "taxCategory": {
                      "name": "taxCategory",
                      "type": "string",
                      "description": "Tax category"
                    },
                    "taxRate": {
                      "name": "taxRate",
                      "type": "number",
                      "description": "Applied rate of the tax",
                      "format": "float"
                    }
                  }
                }
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Recommended Enumeration Type (not formal forced in standard): Valid values for the lifecycle state of the bill: new = 'bill is ready to validate or to sent', validated = 'bill is checked (manual / automatic)', sent = 'bill is sent with the channel defined in the billingaccount', settled = 'bill is payed', partiallySettled = 'bill is partially payed', onHold = 'bill will not be in further processing until open issues connected to the bill are solved'",
                "enum": [
                  "new",
                  "onHold",
                  "validated",
                  "sent",
                  "settled",
                  "partiallyPaid"
                ]
              }
            }
          }
        }
      }
    }
  },
  "customerBillOnDemand": {
    "tableName": "CustomerBillOnDemand",
    "endpoints": [
      {
        "operationId": "listCustomerBillOnDemand",
        "path": "/customerBillOnDemand",
        "method": "get"
      },
      {
        "operationId": "createCustomerBillOnDemand",
        "path": "/customerBillOnDemand",
        "method": "post"
      },
      {
        "operationId": "retrieveCustomerBillOnDemand",
        "path": "/customerBillOnDemand/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Friendly name to identify the customer bill on demand request"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Recommended Enumeration Type (not formal forced in standard): Valid values for 'CustomerBillOnDemand': 'inProgress', 'rejected', 'done', 'terminatedWithError'",
                "enum": [
                  "inProgress",
                  "rejected",
                  "done",
                  "terminatedWithError"
                ]
              },
              "billingAccount": {
                "name": "billingAccount",
                "type": "object",
                "properties": {
                  "ratingType": {
                    "name": "ratingType",
                    "type": "string",
                    "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                  }
                }
              },
              "customerBill": {
                "name": "customerBill",
                "type": "object",
                "description": "Bill reference.",
                "properties": {}
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Additional data describing the customer bill on demand request"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "The last date time when the customer bill on demand has been updated"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "object",
                "properties": {
                  "role": {
                    "name": "role",
                    "type": "string",
                    "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                  },
                  "partyOrPartyRole": {
                    "name": "partyOrPartyRole",
                    "type": "union",
                    "description": "",
                    "oneOf": [
                      {
                        "name": "partyOrPartyRole_variant_0",
                        "type": "object",
                        "description": "A Party reference",
                        "properties": {}
                      },
                      {
                        "name": "partyOrPartyRole_variant_1",
                        "type": "object",
                        "properties": {
                          "partyId": {
                            "name": "partyId",
                            "type": "string",
                            "description": "The identifier of the engaged party that is linked to the PartyRole object."
                          },
                          "partyName": {
                            "name": "partyName",
                            "type": "string",
                            "description": "The name of the engaged party that is linked to the PartyRole object."
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "queryUsageConsumption": {
    "tableName": "QueryUsageConsumption",
    "endpoints": [
      {
        "operationId": "listQueryUsageConsumption",
        "path": "/queryUsageConsumption",
        "method": "get"
      },
      {
        "operationId": "createQueryUsageConsumption",
        "path": "/queryUsageConsumption",
        "method": "post"
      },
      {
        "operationId": "retrieveQueryUsageConsumption",
        "path": "/queryUsageConsumption/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteQueryUsageConsumption",
        "path": "/queryUsageConsumption/{id}",
        "method": "delete"
      }
    ]
  },
  "payment": {
    "tableName": "Payment",
    "endpoints": [
      {
        "operationId": "listPayment",
        "path": "/payment",
        "method": "get"
      },
      {
        "operationId": "createPayment",
        "path": "/payment",
        "method": "post"
      },
      {
        "operationId": "retrievePayment",
        "path": "/payment/{id}",
        "method": "get"
      }
    ]
  },
  "refund": {
    "tableName": "Refund",
    "endpoints": [
      {
        "operationId": "listRefund",
        "path": "/refund",
        "method": "get"
      },
      {
        "operationId": "createRefund",
        "path": "/refund",
        "method": "post"
      },
      {
        "operationId": "retrieveRefund",
        "path": "/refund/{id}",
        "method": "get"
      }
    ]
  },
  "GeographicLocation": {
    "tableName": "GeographicLocation",
    "endpoints": [
      {
        "operationId": "geographicLocationFind",
        "path": "/geographicLocation",
        "method": "get"
      },
      {
        "operationId": "geographicLocationGet",
        "path": "/geographicLocation/{geographicLocationId}",
        "method": "get"
      }
    ]
  },
  "RetrieveGeographicLocation": {
    "tableName": "RetrieveGeographicLocation",
    "endpoints": [
      {
        "operationId": "retrieveGeographicLocationFind",
        "path": "/retrieveGeographicLocation",
        "method": "get"
      },
      {
        "operationId": "retrieveGeographicLocationCreate",
        "path": "/retrieveGeographicLocation",
        "method": "post"
      },
      {
        "operationId": "retrieveGeographicLocationGet",
        "path": "/retrieveGeographicLocation/{retrieveGeographicLocationId}",
        "method": "get"
      }
    ]
  },
  "RetrieveLocationRelation": {
    "tableName": "RetrieveLocationRelation",
    "endpoints": [
      {
        "operationId": "retrieveLocationRelationFind",
        "path": "/retrieveLocationRelation",
        "method": "get"
      },
      {
        "operationId": "retrieveLocationRelationCreate",
        "path": "/retrieveLocationRelation",
        "method": "post"
      },
      {
        "operationId": "retrieveLocationRelationGet",
        "path": "/retrieveLocationRelation/{retrieveLocationRelationId}",
        "method": "get"
      }
    ]
  },
  "Hub": {
    "tableName": "Hub",
    "endpoints": [
      {
        "operationId": "hubCreate",
        "path": "/hub",
        "method": "post"
      },
      {
        "operationId": "hubDelete",
        "path": "/hub/{hubId}",
        "method": "delete"
      }
    ]
  },
  "geographicSite": {
    "tableName": "GeographicSite",
    "endpoints": [
      {
        "operationId": "listGeographicSite",
        "path": "/geographicSite",
        "method": "get"
      },
      {
        "operationId": "createGeographicSite",
        "path": "/geographicSite",
        "method": "post"
      },
      {
        "operationId": "retrieveGeographicSite",
        "path": "/geographicSite/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteGeographicSite",
        "path": "/geographicSite/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchGeographicSite",
        "path": "/geographicSite/{id}",
        "method": "patch"
      }
    ]
  },
  "geographicAddressValidation": {
    "tableName": "GeographicAddressValidation",
    "endpoints": [
      {
        "operationId": "listGeographicAddressValidation",
        "path": "/geographicAddressValidation",
        "method": "get"
      },
      {
        "operationId": "createGeographicAddressValidation",
        "path": "/geographicAddressValidation",
        "method": "post"
      },
      {
        "operationId": "retrieveGeographicAddressValidation",
        "path": "/geographicAddressValidation/{id}",
        "method": "get"
      },
      {
        "operationId": "patchGeographicAddressValidation",
        "path": "/geographicAddressValidation/{id}",
        "method": "patch"
      }
    ]
  },
  "geographicAddress": {
    "tableName": "GeographicAddress",
    "endpoints": [
      {
        "operationId": "listGeographicAddress",
        "path": "/geographicAddress",
        "method": "get"
      },
      {
        "operationId": "retrieveGeographicAddress",
        "path": "/geographicAddress/{id}",
        "method": "get"
      }
    ]
  },
  "geographicSubAddress": {
    "tableName": "GeographicSubAddress",
    "endpoints": [
      {
        "operationId": "listGeographicSubAddress",
        "path": "/geographicAddress/{geographicAddressId}/geographicSubAddress",
        "method": "get"
      },
      {
        "operationId": "retrieveGeographicSubAddress",
        "path": "/geographicAddress/{geographicAddressId}/geographicSubAddress/{id}",
        "method": "get"
      }
    ]
  },
  "permission": {
    "tableName": "Permission",
    "endpoints": [
      {
        "operationId": "listPermission",
        "path": "/permission",
        "method": "get"
      },
      {
        "operationId": "createPermission",
        "path": "/permission",
        "method": "post"
      },
      {
        "operationId": "retrievePermission",
        "path": "/permission/{id}",
        "method": "get"
      },
      {
        "operationId": "patchPermission",
        "path": "/permission/{id}",
        "method": "patch"
      }
    ]
  },
  "userRole": {
    "tableName": "UserRole",
    "endpoints": [
      {
        "operationId": "listUserRole",
        "path": "/userRole",
        "method": "get"
      },
      {
        "operationId": "createUserRole",
        "path": "/userRole",
        "method": "post"
      },
      {
        "operationId": "retrieveUserRole",
        "path": "/userRole/{id}",
        "method": "get"
      },
      {
        "operationId": "patchUserRole",
        "path": "/userRole/{id}",
        "method": "patch"
      }
    ]
  },
  "promotion": {
    "tableName": "Promotion",
    "endpoints": [
      {
        "operationId": "listPromotion",
        "path": "/promotion",
        "method": "get"
      },
      {
        "operationId": "createPromotion",
        "path": "/promotion",
        "method": "post"
      },
      {
        "operationId": "retrievePromotion",
        "path": "/promotion/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePromotion",
        "path": "/promotion/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPromotion",
        "path": "/promotion/{id}",
        "method": "patch"
      }
    ]
  },
  "paymentMethod": {
    "tableName": "PaymentMethod",
    "endpoints": [
      {
        "operationId": "listPaymentMethod",
        "path": "/paymentMethod",
        "method": "get"
      },
      {
        "operationId": "createPaymentMethod",
        "path": "/paymentMethod",
        "method": "post"
      },
      {
        "operationId": "retrievePaymentMethod",
        "path": "/paymentMethod/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePaymentMethod",
        "path": "/paymentMethod/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPaymentMethod",
        "path": "/paymentMethod/{id}",
        "method": "patch"
      }
    ]
  },
  "partyRole": {
    "tableName": "PartyRole",
    "endpoints": [
      {
        "operationId": "listPartyRole",
        "path": "/partyRole",
        "method": "get"
      },
      {
        "operationId": "createPartyRole",
        "path": "/partyRole",
        "method": "post"
      },
      {
        "operationId": "retrievePartyRole",
        "path": "/partyRole/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartyRole",
        "path": "/partyRole/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPartyRole",
        "path": "/partyRole/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "A description of the PartyRole."
              },
              "role": {
                "name": "role",
                "type": "string",
                "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
              },
              "engagedParty": {
                "name": "engagedParty",
                "type": "object",
                "description": "A Party reference",
                "properties": {}
              },
              "partyRoleSpecification": {
                "name": "partyRoleSpecification",
                "type": "object",
                "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                "properties": {}
              },
              "characteristic": {
                "name": "characteristic",
                "type": "array",
                "description": "Describes the characteristic of a party role.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "account": {
                "name": "account",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Account reference. A account may be a party account or a financial account.",
                  "properties": {}
                }
              },
              "agreement": {
                "name": "agreement",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                  "properties": {}
                }
              },
              "contactMedium": {
                "name": "contactMedium",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier for this contact medium."
                    },
                    "preferred": {
                      "name": "preferred",
                      "type": "boolean",
                      "description": "If true, indicates that is the preferred contact medium"
                    },
                    "contactType": {
                      "name": "contactType",
                      "type": "string",
                      "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                      "properties": {
                        "startDateTime": {
                          "name": "startDateTime",
                          "type": "string",
                          "description": "Start of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        },
                        "endDateTime": {
                          "name": "endDateTime",
                          "type": "string",
                          "description": "End of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              },
              "paymentMethod": {
                "name": "paymentMethod",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                  "properties": {}
                }
              },
              "creditProfile": {
                "name": "creditProfile",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "creditProfileDate": {
                      "name": "creditProfileDate",
                      "type": "string",
                      "description": "The date the profile was established",
                      "format": "date-time"
                    },
                    "creditRiskRating": {
                      "name": "creditRiskRating",
                      "type": "integer",
                      "description": "This is an integer whose value is used to rate the risk"
                    },
                    "creditScore": {
                      "name": "creditScore",
                      "type": "integer",
                      "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "Reference to PartyRef"
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "properties": {
                            "gender": {
                              "name": "gender",
                              "type": "string",
                              "description": "Gender"
                            },
                            "placeOfBirth": {
                              "name": "placeOfBirth",
                              "type": "string",
                              "description": "Reference to the place where the individual was born"
                            },
                            "countryOfBirth": {
                              "name": "countryOfBirth",
                              "type": "string",
                              "description": "Country where the individual was born"
                            },
                            "nationality": {
                              "name": "nationality",
                              "type": "string",
                              "description": "Nationality"
                            },
                            "maritalStatus": {
                              "name": "maritalStatus",
                              "type": "string",
                              "description": "Marital status (married, divorced, widow ...)"
                            },
                            "birthDate": {
                              "name": "birthDate",
                              "type": "string",
                              "description": "Birth date",
                              "format": "date-time"
                            },
                            "deathDate": {
                              "name": "deathDate",
                              "type": "string",
                              "description": "Date of death",
                              "format": "date-time"
                            },
                            "title": {
                              "name": "title",
                              "type": "string",
                              "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                            },
                            "aristocraticTitle": {
                              "name": "aristocraticTitle",
                              "type": "string",
                              "description": "e.g. Baron, Graf, Earl"
                            },
                            "generation": {
                              "name": "generation",
                              "type": "string",
                              "description": "e.g.. Sr, Jr, III (the third)"
                            },
                            "preferredGivenName": {
                              "name": "preferredGivenName",
                              "type": "string",
                              "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                            },
                            "familyNamePrefix": {
                              "name": "familyNamePrefix",
                              "type": "string",
                              "description": "Family name prefix"
                            },
                            "legalName": {
                              "name": "legalName",
                              "type": "string",
                              "description": "Legal name or birth name (name one has for official purposes)"
                            },
                            "middleName": {
                              "name": "middleName",
                              "type": "string",
                              "description": "Middles name or initial"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                            },
                            "formattedName": {
                              "name": "formattedName",
                              "type": "string",
                              "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                            },
                            "location": {
                              "name": "location",
                              "type": "string",
                              "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Valid values for the lifecycle state of the individual",
                              "enum": [
                                "initialized",
                                "validated",
                                "deceased"
                              ]
                            },
                            "otherName": {
                              "name": "otherName",
                              "type": "array",
                              "description": "List of other names by which this individual is known",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                "properties": {
                                  "title": {
                                    "name": "title",
                                    "type": "string",
                                    "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                  },
                                  "aristocraticTitle": {
                                    "name": "aristocraticTitle",
                                    "type": "string",
                                    "description": "e.g. Baron, Graf, Earl, etc."
                                  },
                                  "generation": {
                                    "name": "generation",
                                    "type": "string",
                                    "description": "e.g. Sr, Jr, etc."
                                  },
                                  "givenName": {
                                    "name": "givenName",
                                    "type": "string",
                                    "description": "First name"
                                  },
                                  "preferredGivenName": {
                                    "name": "preferredGivenName",
                                    "type": "string",
                                    "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                  },
                                  "familyNamePrefix": {
                                    "name": "familyNamePrefix",
                                    "type": "string",
                                    "description": "Family name prefix"
                                  },
                                  "familyName": {
                                    "name": "familyName",
                                    "type": "string",
                                    "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                  },
                                  "legalName": {
                                    "name": "legalName",
                                    "type": "string",
                                    "description": "Legal name or birth name (name one has for official purposes)"
                                  },
                                  "middleName": {
                                    "name": "middleName",
                                    "type": "string",
                                    "description": "Middle name or initial"
                                  },
                                  "fullName": {
                                    "name": "fullName",
                                    "type": "string",
                                    "description": "Full name flatten (first, middle, and last names)"
                                  },
                                  "formattedName": {
                                    "name": "formattedName",
                                    "type": "string",
                                    "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "individualIdentification": {
                              "name": "individualIdentification",
                              "type": "array",
                              "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "identificationId": {
                                    "name": "identificationId",
                                    "type": "string",
                                    "description": "Identifier"
                                  },
                                  "issuingAuthority": {
                                    "name": "issuingAuthority",
                                    "type": "string",
                                    "description": "Authority which has issued the identifier, such as: social security, town hall"
                                  },
                                  "issuingDate": {
                                    "name": "issuingDate",
                                    "type": "string",
                                    "description": "Date at which the identifier was issued",
                                    "format": "date-time"
                                  },
                                  "identificationType": {
                                    "name": "identificationType",
                                    "type": "string",
                                    "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "union",
                                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                    "oneOf": [
                                      {
                                        "name": "attachment_variant_0",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "The name of the attachment"
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A narrative text describing the content of the attachment"
                                          },
                                          "url": {
                                            "name": "url",
                                            "type": "string",
                                            "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                          },
                                          "content": {
                                            "name": "content",
                                            "type": "string",
                                            "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                            "format": "base64"
                                          },
                                          "size": {
                                            "name": "size",
                                            "type": "object",
                                            "description": "An amount in a given unit",
                                            "properties": {
                                              "amount": {
                                                "name": "amount",
                                                "type": "number",
                                                "description": "Numeric value in a given unit",
                                                "format": "float"
                                              },
                                              "units": {
                                                "name": "units",
                                                "type": "string",
                                                "description": "Unit"
                                              }
                                            }
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "attachmentType": {
                                            "name": "attachmentType",
                                            "type": "string",
                                            "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                          },
                                          "mimeType": {
                                            "name": "mimeType",
                                            "type": "string",
                                            "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                          }
                                        }
                                      },
                                      {
                                        "name": "attachment_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A narrative text describing the content of the attachment"
                                          },
                                          "url": {
                                            "name": "url",
                                            "type": "string",
                                            "description": "Link to the attachment media/content"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "disability": {
                              "name": "disability",
                              "type": "array",
                              "description": "List of disabilities suffered by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Lack or inadequate strength or ability.",
                                "properties": {
                                  "disabilityCode": {
                                    "name": "disabilityCode",
                                    "type": "string",
                                    "description": "Code of the disability"
                                  },
                                  "disabilityName": {
                                    "name": "disabilityName",
                                    "type": "string",
                                    "description": "Name of the disability"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "languageAbility": {
                              "name": "languageAbility",
                              "type": "array",
                              "description": "List of national languages known by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Ability of an individual to understand or converse in a language.",
                                "properties": {
                                  "languageCode": {
                                    "name": "languageCode",
                                    "type": "string",
                                    "description": "Language code (RFC 5646)"
                                  },
                                  "languageName": {
                                    "name": "languageName",
                                    "type": "string",
                                    "description": "Language name"
                                  },
                                  "isFavouriteLanguage": {
                                    "name": "isFavouriteLanguage",
                                    "type": "boolean",
                                    "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                  },
                                  "writingProficiency": {
                                    "name": "writingProficiency",
                                    "type": "string",
                                    "description": "Writing proficiency evaluated for this language"
                                  },
                                  "readingProficiency": {
                                    "name": "readingProficiency",
                                    "type": "string",
                                    "description": "Reading proficiency evaluated for this language"
                                  },
                                  "speakingProficiency": {
                                    "name": "speakingProficiency",
                                    "type": "string",
                                    "description": "Speaking proficiency evaluated for this language"
                                  },
                                  "listeningProficiency": {
                                    "name": "listeningProficiency",
                                    "type": "string",
                                    "description": "Listening proficiency evaluated for this language"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "skill": {
                              "name": "skill",
                              "type": "array",
                              "description": "List of skills exhibited by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                "properties": {
                                  "skillCode": {
                                    "name": "skillCode",
                                    "type": "string",
                                    "description": "Code of the skill"
                                  },
                                  "skillName": {
                                    "name": "skillName",
                                    "type": "string",
                                    "description": "Name of the skill, such as Java language"
                                  },
                                  "evaluatedLevel": {
                                    "name": "evaluatedLevel",
                                    "type": "string",
                                    "description": "Level of expertise in a skill evaluated for an individual"
                                  },
                                  "comment": {
                                    "name": "comment",
                                    "type": "string",
                                    "description": "A free text comment linked to the evaluation done"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "familyName": {
                              "name": "familyName",
                              "type": "string",
                              "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                            },
                            "givenName": {
                              "name": "givenName",
                              "type": "string",
                              "description": "First name of the individual"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "properties": {
                            "isLegalEntity": {
                              "name": "isLegalEntity",
                              "type": "boolean",
                              "description": "If value is true, the organization is a legal entity known by a national referential."
                            },
                            "isHeadOffice": {
                              "name": "isHeadOffice",
                              "type": "boolean",
                              "description": "If value is true, the organization is the head office"
                            },
                            "organizationType": {
                              "name": "organizationType",
                              "type": "string",
                              "description": "Type of Organization (company, department...)"
                            },
                            "existsDuring": {
                              "name": "existsDuring",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Organization name (department name for example)"
                            },
                            "nameType": {
                              "name": "nameType",
                              "type": "string",
                              "description": "Type of the name : Co, Inc, Ltd, etc."
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Valid values for the lifecycle state of the organization",
                              "enum": [
                                "initialized",
                                "validated",
                                "closed"
                              ]
                            },
                            "otherName": {
                              "name": "otherName",
                              "type": "array",
                              "description": "List of additional names by which the organization is known",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "tradingName": {
                                    "name": "tradingName",
                                    "type": "string",
                                    "description": "The name that the organization trades under"
                                  },
                                  "nameType": {
                                    "name": "nameType",
                                    "type": "string",
                                    "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Organization name (department name for example)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "organizationIdentification": {
                              "name": "organizationIdentification",
                              "type": "array",
                              "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "identificationId": {
                                    "name": "identificationId",
                                    "type": "string",
                                    "description": "Identifier"
                                  },
                                  "issuingAuthority": {
                                    "name": "issuingAuthority",
                                    "type": "string",
                                    "description": "Authority which has issued the identifier (chamber of commerce...)"
                                  },
                                  "issuingDate": {
                                    "name": "issuingDate",
                                    "type": "string",
                                    "description": "Date at which the identifier was issued",
                                    "format": "date-time"
                                  },
                                  "identificationType": {
                                    "name": "identificationType",
                                    "type": "string",
                                    "description": "Type of identification information used to identify the company in a country or internationally"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "organizationChildRelationship": {
                              "name": "organizationChildRelationship",
                              "type": "array",
                              "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                  },
                                  "organization": {
                                    "name": "organization",
                                    "type": "object",
                                    "properties": {}
                                  }
                                }
                              }
                            },
                            "organizationParentRelationship": {
                              "name": "organizationParentRelationship",
                              "type": "object",
                              "properties": {
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                },
                                "organization": {
                                  "name": "organization",
                                  "type": "object",
                                  "description": "Reference to OrganizationRef"
                                }
                              }
                            },
                            "tradingName": {
                              "name": "tradingName",
                              "type": "string",
                              "description": "Name that the organization (unit) trades under"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_4",
                          "type": "object",
                          "description": "Reference to PartyRole"
                        },
                        {
                          "name": "partyOrPartyRole_variant_5",
                          "type": "object",
                          "description": "When business partner is the Supplier ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_6",
                          "type": "object",
                          "description": "When business partner is the BusinessPartner ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_7",
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_8",
                          "type": "object",
                          "properties": {}
                        }
                      ]
                    }
                  }
                }
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Used to track the lifecycle status of the party role."
              },
              "statusReason": {
                "name": "statusReason",
                "type": "string",
                "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "Reference to TimePeriod"
              }
            }
          }
        }
      }
    }
  },
  "partyRoleSpecification": {
    "tableName": "PartyRoleSpecification",
    "endpoints": [
      {
        "operationId": "listPartyRoleSpecification",
        "path": "/partyRoleSpecification",
        "method": "get"
      },
      {
        "operationId": "createPartyRoleSpecification",
        "path": "/partyRoleSpecification",
        "method": "post"
      },
      {
        "operationId": "retrievePartyRoleSpecification",
        "path": "/partyRoleSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartyRoleSpecification",
        "path": "/partyRoleSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPartyRoleSpecification",
        "path": "/partyRoleSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the specification"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this catalog item"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true)."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "specification version"
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Attachments that may be of relevance to this specification, such as picture, document, media",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "targetEntitySchema": {
                "name": "targetEntitySchema",
                "type": "object",
                "description": "The reference object to the schema and type of target entity which is described by a specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target entity"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target entity"
                  }
                }
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "constraint": {
                "name": "constraint",
                "type": "array",
                "description": "This is a list of constraint references applied to this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "constraint version"
                    }
                  }
                }
              },
              "entitySpecRelationship": {
                "name": "entitySpecRelationship",
                "type": "array",
                "description": "Relationship to another specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications.",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string"
                    },
                    "name": {
                      "name": "name",
                      "type": "string"
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this entity specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "associationSpec": {
                      "name": "associationSpec",
                      "type": "object",
                      "description": "reference to an AssociationSpecification object",
                      "properties": {}
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                    }
                  }
                }
              },
              "agreementSpecification": {
                "name": "agreementSpecification",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains in detail what the agreement specification is about."
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the agreement specification"
                    }
                  }
                }
              },
              "permissionSpecificationSet": {
                "name": "permissionSpecificationSet",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A PermissionSpecificationSet defines a set of permissions that can be attached to a party role specification. The resulting permissions will then apply to all users that adopt this party role.",
                  "properties": {}
                }
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Used to track the lifecycle status of the partyRoleSpecification."
              }
            }
          }
        }
      }
    }
  },
  "partnershipSpecification": {
    "tableName": "PartnershipSpecification",
    "endpoints": [
      {
        "operationId": "listPartnershipSpecification",
        "path": "/partnershipSpecification",
        "method": "get"
      },
      {
        "operationId": "createPartnershipSpecification",
        "path": "/partnershipSpecification",
        "method": "post"
      },
      {
        "operationId": "retrievePartnershipSpecification",
        "path": "/partnershipSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartnershipSpecification",
        "path": "/partnershipSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPartnershipSpecification",
        "path": "/partnershipSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "partnership": {
    "tableName": "Partnership",
    "endpoints": [
      {
        "operationId": "listPartnership",
        "path": "/partnership",
        "method": "get"
      },
      {
        "operationId": "createPartnership",
        "path": "/partnership",
        "method": "post"
      },
      {
        "operationId": "retrievePartnership",
        "path": "/partnership/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartnership",
        "path": "/partnership/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPartnership",
        "path": "/partnership/{id}",
        "method": "patch"
      }
    ]
  },
  "document": {
    "tableName": "Document",
    "endpoints": [
      {
        "operationId": "listDocument",
        "path": "/document",
        "method": "get"
      },
      {
        "operationId": "createDocument",
        "path": "/document",
        "method": "post"
      },
      {
        "operationId": "retrieveDocument",
        "path": "/document/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteDocument",
        "path": "/document/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchDocument",
        "path": "/document/{id}",
        "method": "patch"
      }
    ]
  },
  "documentSpecification": {
    "tableName": "DocumentSpecification",
    "endpoints": [
      {
        "operationId": "listDocumentSpecification",
        "path": "/documentSpecification",
        "method": "get"
      },
      {
        "operationId": "createDocumentSpecification",
        "path": "/documentSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveDocumentSpecification",
        "path": "/documentSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteDocumentSpecification",
        "path": "/documentSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchDocumentSpecification",
        "path": "/documentSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "billFormat": {
    "tableName": "BillFormat",
    "endpoints": [
      {
        "operationId": "listBillFormat",
        "path": "/billFormat",
        "method": "get"
      },
      {
        "operationId": "createBillFormat",
        "path": "/billFormat",
        "method": "post"
      },
      {
        "operationId": "retrieveBillFormat",
        "path": "/billFormat/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteBillFormat",
        "path": "/billFormat/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchBillFormat",
        "path": "/billFormat/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "A short descriptive name"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "An explanatory text for this bill format"
              }
            }
          }
        }
      }
    }
  },
  "billPresentationMedia": {
    "tableName": "BillPresentationMedia",
    "endpoints": [
      {
        "operationId": "listBillPresentationMedia",
        "path": "/billPresentationMedia",
        "method": "get"
      },
      {
        "operationId": "createBillPresentationMedia",
        "path": "/billPresentationMedia",
        "method": "post"
      },
      {
        "operationId": "retrieveBillPresentationMedia",
        "path": "/billPresentationMedia/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteBillPresentationMedia",
        "path": "/billPresentationMedia/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchBillPresentationMedia",
        "path": "/billPresentationMedia/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "A short descriptive name"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "An explanatory text describing this bill presentation media"
              }
            }
          }
        }
      }
    }
  },
  "billingAccount": {
    "tableName": "BillingAccount",
    "endpoints": [
      {
        "operationId": "listBillingAccount",
        "path": "/billingAccount",
        "method": "get"
      },
      {
        "operationId": "createBillingAccount",
        "path": "/billingAccount",
        "method": "post"
      },
      {
        "operationId": "retrieveBillingAccount",
        "path": "/billingAccount/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteBillingAccount",
        "path": "/billingAccount/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchBillingAccount",
        "path": "/billingAccount/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "creditLimit": {
                "name": "creditLimit",
                "type": "object",
                "description": "A base / value business entity used to represent money",
                "properties": {
                  "unit": {
                    "name": "unit",
                    "type": "string",
                    "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                  },
                  "value": {
                    "name": "value",
                    "type": "number",
                    "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                    "format": "float"
                  }
                }
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Detailed description of the account"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "The date and time that the account was last updated",
                "format": "date-time"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the account"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
              },
              "accountType": {
                "name": "accountType",
                "type": "string",
                "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "List of parties that have some relationship with the account, for example the customer to whom the account belongs",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "taxExemption": {
                "name": "taxExemption",
                "type": "array",
                "description": "List of tax exemptions that can be applied when calculating charges levied to the account.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the tax exemption within list of the exemptions"
                    },
                    "taxDefinition": {
                      "name": "taxDefinition",
                      "type": "array",
                      "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the tax."
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Tax name."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                            "properties": {
                              "startDateTime": {
                                "name": "startDateTime",
                                "type": "string",
                                "description": "Start of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              },
                              "endDateTime": {
                                "name": "endDateTime",
                                "type": "string",
                                "description": "End of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              }
                            }
                          },
                          "jurisdictionName": {
                            "name": "jurisdictionName",
                            "type": "string",
                            "description": "Name of the jurisdiction that levies the tax"
                          },
                          "jurisdictionLevel": {
                            "name": "jurisdictionLevel",
                            "type": "string",
                            "description": "Level of the jurisdiction that levies the tax"
                          },
                          "taxType": {
                            "name": "taxType",
                            "type": "string",
                            "description": "Type of the tax."
                          }
                        }
                      }
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "certificateNumber": {
                      "name": "certificateNumber",
                      "type": "string",
                      "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                    },
                    "issuingJurisdiction": {
                      "name": "issuingJurisdiction",
                      "type": "string",
                      "description": "Name of the jurisdiction that issued the exemption"
                    },
                    "reason": {
                      "name": "reason",
                      "type": "string",
                      "description": "Reason for the tax exemption"
                    },
                    "attachment": {
                      "name": "attachment",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "attachment_variant_0",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the attachment"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                              "name": "url",
                              "type": "string",
                              "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                            },
                            "content": {
                              "name": "content",
                              "type": "string",
                              "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                              "format": "base64"
                            },
                            "size": {
                              "name": "size",
                              "type": "object",
                              "description": "An amount in a given unit",
                              "properties": {
                                "amount": {
                                  "name": "amount",
                                  "type": "number",
                                  "description": "Numeric value in a given unit",
                                  "format": "float"
                                },
                                "units": {
                                  "name": "units",
                                  "type": "string",
                                  "description": "Unit"
                                }
                              }
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "attachmentType": {
                              "name": "attachmentType",
                              "type": "string",
                              "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                            },
                            "mimeType": {
                              "name": "mimeType",
                              "type": "string",
                              "description": "a technical characterization of the attachment content format using IETF Mime Types"
                            }
                          }
                        },
                        {
                          "name": "attachment_variant_1",
                          "type": "object",
                          "properties": {
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                              "name": "url",
                              "type": "string",
                              "description": "Link to the attachment media/content"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "contact": {
                "name": "contact",
                "type": "array",
                "description": "List of people who could be contacted regarding the account, for example the accountant who authorizes payments",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the contact within list of the contacts (for entities with list)"
                    },
                    "contactName": {
                      "name": "contactName",
                      "type": "string",
                      "description": "A displayable name for that contact"
                    },
                    "contactType": {
                      "name": "contactType",
                      "type": "string",
                      "description": "Type of contact (primary, secondary...)"
                    },
                    "partyRoleType": {
                      "name": "partyRoleType",
                      "type": "string",
                      "description": "Identifies what kind of party role type is linked to the contact (a account manager...)"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "contactMedium": {
                      "name": "contactMedium",
                      "type": "array",
                      "description": "List of contact mediums for the contact, such as mobile phone number, email addreess, etc.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Identifier for this contact medium."
                          },
                          "preferred": {
                            "name": "preferred",
                            "type": "boolean",
                            "description": "If true, indicates that is the preferred contact medium"
                          },
                          "contactType": {
                            "name": "contactType",
                            "type": "string",
                            "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      }
                    },
                    "relatedParty": {
                      "name": "relatedParty",
                      "type": "object",
                      "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                    }
                  }
                }
              },
              "accountBalance": {
                "name": "accountBalance",
                "type": "array",
                "description": "List of balances for the account, for example regular postpaid balance, deposit balance, write-off balance.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the balance within list of the balances (for entities with list)"
                    },
                    "amount": {
                      "name": "amount",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "balanceType": {
                      "name": "balanceType",
                      "type": "string",
                      "description": "Type of the balance : deposit balance, disputed balance, loyalty balance, receivable balance..."
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "accountRelationship": {
                "name": "accountRelationship",
                "type": "array",
                "description": "List of balances related to the account. For example a list of billing accounts that contribute to a financial account",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "account": {
                      "name": "account",
                      "type": "object",
                      "description": "Account reference. A account may be a party account or a financial account.",
                      "properties": {}
                    }
                  }
                }
              },
              "paymentStatus": {
                "name": "paymentStatus",
                "type": "string",
                "description": "The condition of the account, such as due, paid, in arrears."
              },
              "billStructure": {
                "name": "billStructure",
                "type": "object",
                "properties": {
                  "presentationMedia": {
                    "name": "presentationMedia",
                    "type": "array",
                    "items": {
                      "name": "items",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillPresentationMedia entity and not the BillPresentationMediaRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "items_variant_0",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A short descriptive name"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "An explanatory text describing this bill presentation media"
                            }
                          }
                        },
                        {
                          "name": "items_variant_1",
                          "type": "object",
                          "description": "PresentationMedia reference. A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.",
                          "properties": {}
                        }
                      ]
                    }
                  },
                  "format": {
                    "name": "format",
                    "type": "union",
                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillFormat entity and not the BillFormatRefOrValue class itself",
                    "oneOf": [
                      {
                        "name": "format_variant_0",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "A short descriptive name"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "An explanatory text for this bill format"
                          }
                        }
                      },
                      {
                        "name": "format_variant_1",
                        "type": "object",
                        "description": "BillFormat reference. A bill format is a description of the way in which a bill is presented.",
                        "properties": {}
                      }
                    ]
                  },
                  "cycleSpecification": {
                    "name": "cycleSpecification",
                    "type": "union",
                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillingCycleSpecification entity and not the BillingCycleSpecificationRefOrValue class itself",
                    "oneOf": [
                      {
                        "name": "cycleSpecification_variant_0",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "A short descriptive name"
                          },
                          "billingDateShift": {
                            "name": "billingDateShift",
                            "type": "integer",
                            "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
                          },
                          "billingPeriod": {
                            "name": "billingPeriod",
                            "type": "string",
                            "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
                          },
                          "chargeDateOffset": {
                            "name": "chargeDateOffset",
                            "type": "integer",
                            "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                          },
                          "creditDateOffset": {
                            "name": "creditDateOffset",
                            "type": "integer",
                            "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "An explanation regarding this billing cycle specification"
                          },
                          "frequency": {
                            "name": "frequency",
                            "type": "string",
                            "description": "Frequency of the billing cycle (monthly for instance)"
                          },
                          "mailingDateOffset": {
                            "name": "mailingDateOffset",
                            "type": "integer",
                            "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                          },
                          "paymentDueDateOffset": {
                            "name": "paymentDueDateOffset",
                            "type": "integer",
                            "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      },
                      {
                        "name": "cycleSpecification_variant_1",
                        "type": "object",
                        "description": "BillingCycleSpecification reference. A description of when to initiate a billing cycle and the various sub steps of a billing cycle.",
                        "properties": {}
                      }
                    ]
                  }
                }
              },
              "paymentPlan": {
                "name": "paymentPlan",
                "type": "array",
                "description": "A list of payment plans that are active or expired for the account, for example if the customer had difficulty in paying",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the plan within list of the plans (for entities with list)"
                    },
                    "numberOfPayments": {
                      "name": "numberOfPayments",
                      "type": "integer",
                      "description": "Number of payments used to spread the global payment"
                    },
                    "paymentFrequency": {
                      "name": "paymentFrequency",
                      "type": "string",
                      "description": "Frequency of the payments, such as monthly and bimonthly"
                    },
                    "priority": {
                      "name": "priority",
                      "type": "integer",
                      "description": "Priority of the payment plan"
                    },
                    "status": {
                      "name": "status",
                      "type": "string",
                      "description": "Status of the payment plan (effective, ineffective)"
                    },
                    "totalAmount": {
                      "name": "totalAmount",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "planType": {
                      "name": "planType",
                      "type": "string",
                      "description": "Type of payment plan"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "paymentMethod": {
                      "name": "paymentMethod",
                      "type": "object",
                      "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                      "properties": {}
                    }
                  }
                }
              },
              "financialAccount": {
                "name": "financialAccount",
                "type": "object",
                "description": "AccountReceivable reference. An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. An account receivable aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.",
                "properties": {}
              },
              "defaultPaymentMethod": {
                "name": "defaultPaymentMethod",
                "type": "object",
                "description": "Reference to PaymentMethodRef"
              },
              "ratingType": {
                "name": "ratingType",
                "type": "string",
                "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
              }
            }
          }
        }
      }
    }
  },
  "billingCycleSpecification": {
    "tableName": "BillingCycleSpecification",
    "endpoints": [
      {
        "operationId": "listBillingCycleSpecification",
        "path": "/billingCycleSpecification",
        "method": "get"
      },
      {
        "operationId": "createBillingCycleSpecification",
        "path": "/billingCycleSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveBillingCycleSpecification",
        "path": "/billingCycleSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteBillingCycleSpecification",
        "path": "/billingCycleSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchBillingCycleSpecification",
        "path": "/billingCycleSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "A short descriptive name"
              },
              "billingDateShift": {
                "name": "billingDateShift",
                "type": "integer",
                "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
              },
              "billingPeriod": {
                "name": "billingPeriod",
                "type": "string",
                "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
              },
              "chargeDateOffset": {
                "name": "chargeDateOffset",
                "type": "integer",
                "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "creditDateOffset": {
                "name": "creditDateOffset",
                "type": "integer",
                "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "An explanation regarding this billing cycle specification"
              },
              "frequency": {
                "name": "frequency",
                "type": "string",
                "description": "Frequency of the billing cycle (monthly for instance)"
              },
              "mailingDateOffset": {
                "name": "mailingDateOffset",
                "type": "integer",
                "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "paymentDueDateOffset": {
                "name": "paymentDueDateOffset",
                "type": "integer",
                "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "financialAccount": {
    "tableName": "FinancialAccount",
    "endpoints": [
      {
        "operationId": "listFinancialAccount",
        "path": "/financialAccount",
        "method": "get"
      },
      {
        "operationId": "createFinancialAccount",
        "path": "/financialAccount",
        "method": "post"
      },
      {
        "operationId": "retrieveFinancialAccount",
        "path": "/financialAccount/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteFinancialAccount",
        "path": "/financialAccount/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchFinancialAccount",
        "path": "/financialAccount/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "creditLimit": {
                "name": "creditLimit",
                "type": "object",
                "description": "A base / value business entity used to represent money",
                "properties": {
                  "unit": {
                    "name": "unit",
                    "type": "string",
                    "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                  },
                  "value": {
                    "name": "value",
                    "type": "number",
                    "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                    "format": "float"
                  }
                }
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Detailed description of the account"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "The date and time that the account was last updated",
                "format": "date-time"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the account"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
              },
              "accountType": {
                "name": "accountType",
                "type": "string",
                "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "List of parties that have some relationship with the account, for example the customer to whom the account belongs",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "taxExemption": {
                "name": "taxExemption",
                "type": "array",
                "description": "List of tax exemptions that can be applied when calculating charges levied to the account.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the tax exemption within list of the exemptions"
                    },
                    "taxDefinition": {
                      "name": "taxDefinition",
                      "type": "array",
                      "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the tax."
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Tax name."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                            "properties": {
                              "startDateTime": {
                                "name": "startDateTime",
                                "type": "string",
                                "description": "Start of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              },
                              "endDateTime": {
                                "name": "endDateTime",
                                "type": "string",
                                "description": "End of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              }
                            }
                          },
                          "jurisdictionName": {
                            "name": "jurisdictionName",
                            "type": "string",
                            "description": "Name of the jurisdiction that levies the tax"
                          },
                          "jurisdictionLevel": {
                            "name": "jurisdictionLevel",
                            "type": "string",
                            "description": "Level of the jurisdiction that levies the tax"
                          },
                          "taxType": {
                            "name": "taxType",
                            "type": "string",
                            "description": "Type of the tax."
                          }
                        }
                      }
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "certificateNumber": {
                      "name": "certificateNumber",
                      "type": "string",
                      "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                    },
                    "issuingJurisdiction": {
                      "name": "issuingJurisdiction",
                      "type": "string",
                      "description": "Name of the jurisdiction that issued the exemption"
                    },
                    "reason": {
                      "name": "reason",
                      "type": "string",
                      "description": "Reason for the tax exemption"
                    },
                    "attachment": {
                      "name": "attachment",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "attachment_variant_0",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the attachment"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                              "name": "url",
                              "type": "string",
                              "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                            },
                            "content": {
                              "name": "content",
                              "type": "string",
                              "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                              "format": "base64"
                            },
                            "size": {
                              "name": "size",
                              "type": "object",
                              "description": "An amount in a given unit",
                              "properties": {
                                "amount": {
                                  "name": "amount",
                                  "type": "number",
                                  "description": "Numeric value in a given unit",
                                  "format": "float"
                                },
                                "units": {
                                  "name": "units",
                                  "type": "string",
                                  "description": "Unit"
                                }
                              }
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "attachmentType": {
                              "name": "attachmentType",
                              "type": "string",
                              "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                            },
                            "mimeType": {
                              "name": "mimeType",
                              "type": "string",
                              "description": "a technical characterization of the attachment content format using IETF Mime Types"
                            }
                          }
                        },
                        {
                          "name": "attachment_variant_1",
                          "type": "object",
                          "properties": {
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                              "name": "url",
                              "type": "string",
                              "description": "Link to the attachment media/content"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "contact": {
                "name": "contact",
                "type": "array",
                "description": "List of people who could be contacted regarding the account, for example the accountant who authorizes payments",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the contact within list of the contacts (for entities with list)"
                    },
                    "contactName": {
                      "name": "contactName",
                      "type": "string",
                      "description": "A displayable name for that contact"
                    },
                    "contactType": {
                      "name": "contactType",
                      "type": "string",
                      "description": "Type of contact (primary, secondary...)"
                    },
                    "partyRoleType": {
                      "name": "partyRoleType",
                      "type": "string",
                      "description": "Identifies what kind of party role type is linked to the contact (a account manager...)"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "contactMedium": {
                      "name": "contactMedium",
                      "type": "array",
                      "description": "List of contact mediums for the contact, such as mobile phone number, email addreess, etc.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Identifier for this contact medium."
                          },
                          "preferred": {
                            "name": "preferred",
                            "type": "boolean",
                            "description": "If true, indicates that is the preferred contact medium"
                          },
                          "contactType": {
                            "name": "contactType",
                            "type": "string",
                            "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      }
                    },
                    "relatedParty": {
                      "name": "relatedParty",
                      "type": "object",
                      "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                    }
                  }
                }
              },
              "accountBalance": {
                "name": "accountBalance",
                "type": "array",
                "description": "List of balances for the account, for example regular postpaid balance, deposit balance, write-off balance.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the balance within list of the balances (for entities with list)"
                    },
                    "amount": {
                      "name": "amount",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "balanceType": {
                      "name": "balanceType",
                      "type": "string",
                      "description": "Type of the balance : deposit balance, disputed balance, loyalty balance, receivable balance..."
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "accountRelationship": {
                "name": "accountRelationship",
                "type": "array",
                "description": "List of balances related to the account. For example a list of billing accounts that contribute to a financial account",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "account": {
                      "name": "account",
                      "type": "object",
                      "description": "Account reference. A account may be a party account or a financial account.",
                      "properties": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "partyAccount": {
    "tableName": "PartyAccount",
    "endpoints": [
      {
        "operationId": "listPartyAccount",
        "path": "/partyAccount",
        "method": "get"
      },
      {
        "operationId": "createPartyAccount",
        "path": "/partyAccount",
        "method": "post"
      },
      {
        "operationId": "retrievePartyAccount",
        "path": "/partyAccount/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartyAccount",
        "path": "/partyAccount/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPartyAccount",
        "path": "/partyAccount/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "creditLimit": {
                "name": "creditLimit",
                "type": "object",
                "description": "A base / value business entity used to represent money",
                "properties": {
                  "unit": {
                    "name": "unit",
                    "type": "string",
                    "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                  },
                  "value": {
                    "name": "value",
                    "type": "number",
                    "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                    "format": "float"
                  }
                }
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Detailed description of the account"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "The date and time that the account was last updated",
                "format": "date-time"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the account"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
              },
              "accountType": {
                "name": "accountType",
                "type": "string",
                "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "List of parties that have some relationship with the account, for example the customer to whom the account belongs",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "taxExemption": {
                "name": "taxExemption",
                "type": "array",
                "description": "List of tax exemptions that can be applied when calculating charges levied to the account.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the tax exemption within list of the exemptions"
                    },
                    "taxDefinition": {
                      "name": "taxDefinition",
                      "type": "array",
                      "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the tax."
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Tax name."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                            "properties": {
                              "startDateTime": {
                                "name": "startDateTime",
                                "type": "string",
                                "description": "Start of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              },
                              "endDateTime": {
                                "name": "endDateTime",
                                "type": "string",
                                "description": "End of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              }
                            }
                          },
                          "jurisdictionName": {
                            "name": "jurisdictionName",
                            "type": "string",
                            "description": "Name of the jurisdiction that levies the tax"
                          },
                          "jurisdictionLevel": {
                            "name": "jurisdictionLevel",
                            "type": "string",
                            "description": "Level of the jurisdiction that levies the tax"
                          },
                          "taxType": {
                            "name": "taxType",
                            "type": "string",
                            "description": "Type of the tax."
                          }
                        }
                      }
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "certificateNumber": {
                      "name": "certificateNumber",
                      "type": "string",
                      "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                    },
                    "issuingJurisdiction": {
                      "name": "issuingJurisdiction",
                      "type": "string",
                      "description": "Name of the jurisdiction that issued the exemption"
                    },
                    "reason": {
                      "name": "reason",
                      "type": "string",
                      "description": "Reason for the tax exemption"
                    },
                    "attachment": {
                      "name": "attachment",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "attachment_variant_0",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the attachment"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                              "name": "url",
                              "type": "string",
                              "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                            },
                            "content": {
                              "name": "content",
                              "type": "string",
                              "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                              "format": "base64"
                            },
                            "size": {
                              "name": "size",
                              "type": "object",
                              "description": "An amount in a given unit",
                              "properties": {
                                "amount": {
                                  "name": "amount",
                                  "type": "number",
                                  "description": "Numeric value in a given unit",
                                  "format": "float"
                                },
                                "units": {
                                  "name": "units",
                                  "type": "string",
                                  "description": "Unit"
                                }
                              }
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "attachmentType": {
                              "name": "attachmentType",
                              "type": "string",
                              "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                            },
                            "mimeType": {
                              "name": "mimeType",
                              "type": "string",
                              "description": "a technical characterization of the attachment content format using IETF Mime Types"
                            }
                          }
                        },
                        {
                          "name": "attachment_variant_1",
                          "type": "object",
                          "properties": {
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                              "name": "url",
                              "type": "string",
                              "description": "Link to the attachment media/content"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "contact": {
                "name": "contact",
                "type": "array",
                "description": "List of people who could be contacted regarding the account, for example the accountant who authorizes payments",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the contact within list of the contacts (for entities with list)"
                    },
                    "contactName": {
                      "name": "contactName",
                      "type": "string",
                      "description": "A displayable name for that contact"
                    },
                    "contactType": {
                      "name": "contactType",
                      "type": "string",
                      "description": "Type of contact (primary, secondary...)"
                    },
                    "partyRoleType": {
                      "name": "partyRoleType",
                      "type": "string",
                      "description": "Identifies what kind of party role type is linked to the contact (a account manager...)"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "contactMedium": {
                      "name": "contactMedium",
                      "type": "array",
                      "description": "List of contact mediums for the contact, such as mobile phone number, email addreess, etc.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Identifier for this contact medium."
                          },
                          "preferred": {
                            "name": "preferred",
                            "type": "boolean",
                            "description": "If true, indicates that is the preferred contact medium"
                          },
                          "contactType": {
                            "name": "contactType",
                            "type": "string",
                            "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      }
                    },
                    "relatedParty": {
                      "name": "relatedParty",
                      "type": "object",
                      "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                    }
                  }
                }
              },
              "accountBalance": {
                "name": "accountBalance",
                "type": "array",
                "description": "List of balances for the account, for example regular postpaid balance, deposit balance, write-off balance.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the balance within list of the balances (for entities with list)"
                    },
                    "amount": {
                      "name": "amount",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "balanceType": {
                      "name": "balanceType",
                      "type": "string",
                      "description": "Type of the balance : deposit balance, disputed balance, loyalty balance, receivable balance..."
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "accountRelationship": {
                "name": "accountRelationship",
                "type": "array",
                "description": "List of balances related to the account. For example a list of billing accounts that contribute to a financial account",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "account": {
                      "name": "account",
                      "type": "object",
                      "description": "Account reference. A account may be a party account or a financial account.",
                      "properties": {}
                    }
                  }
                }
              },
              "paymentStatus": {
                "name": "paymentStatus",
                "type": "string",
                "description": "The condition of the account, such as due, paid, in arrears."
              },
              "billStructure": {
                "name": "billStructure",
                "type": "object",
                "properties": {
                  "presentationMedia": {
                    "name": "presentationMedia",
                    "type": "array",
                    "items": {
                      "name": "items",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillPresentationMedia entity and not the BillPresentationMediaRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "items_variant_0",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A short descriptive name"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "An explanatory text describing this bill presentation media"
                            }
                          }
                        },
                        {
                          "name": "items_variant_1",
                          "type": "object",
                          "description": "PresentationMedia reference. A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.",
                          "properties": {}
                        }
                      ]
                    }
                  },
                  "format": {
                    "name": "format",
                    "type": "union",
                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillFormat entity and not the BillFormatRefOrValue class itself",
                    "oneOf": [
                      {
                        "name": "format_variant_0",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "A short descriptive name"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "An explanatory text for this bill format"
                          }
                        }
                      },
                      {
                        "name": "format_variant_1",
                        "type": "object",
                        "description": "BillFormat reference. A bill format is a description of the way in which a bill is presented.",
                        "properties": {}
                      }
                    ]
                  },
                  "cycleSpecification": {
                    "name": "cycleSpecification",
                    "type": "union",
                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillingCycleSpecification entity and not the BillingCycleSpecificationRefOrValue class itself",
                    "oneOf": [
                      {
                        "name": "cycleSpecification_variant_0",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "A short descriptive name"
                          },
                          "billingDateShift": {
                            "name": "billingDateShift",
                            "type": "integer",
                            "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
                          },
                          "billingPeriod": {
                            "name": "billingPeriod",
                            "type": "string",
                            "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
                          },
                          "chargeDateOffset": {
                            "name": "chargeDateOffset",
                            "type": "integer",
                            "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                          },
                          "creditDateOffset": {
                            "name": "creditDateOffset",
                            "type": "integer",
                            "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "An explanation regarding this billing cycle specification"
                          },
                          "frequency": {
                            "name": "frequency",
                            "type": "string",
                            "description": "Frequency of the billing cycle (monthly for instance)"
                          },
                          "mailingDateOffset": {
                            "name": "mailingDateOffset",
                            "type": "integer",
                            "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                          },
                          "paymentDueDateOffset": {
                            "name": "paymentDueDateOffset",
                            "type": "integer",
                            "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      },
                      {
                        "name": "cycleSpecification_variant_1",
                        "type": "object",
                        "description": "BillingCycleSpecification reference. A description of when to initiate a billing cycle and the various sub steps of a billing cycle.",
                        "properties": {}
                      }
                    ]
                  }
                }
              },
              "paymentPlan": {
                "name": "paymentPlan",
                "type": "array",
                "description": "A list of payment plans that are active or expired for the account, for example if the customer had difficulty in paying",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the plan within list of the plans (for entities with list)"
                    },
                    "numberOfPayments": {
                      "name": "numberOfPayments",
                      "type": "integer",
                      "description": "Number of payments used to spread the global payment"
                    },
                    "paymentFrequency": {
                      "name": "paymentFrequency",
                      "type": "string",
                      "description": "Frequency of the payments, such as monthly and bimonthly"
                    },
                    "priority": {
                      "name": "priority",
                      "type": "integer",
                      "description": "Priority of the payment plan"
                    },
                    "status": {
                      "name": "status",
                      "type": "string",
                      "description": "Status of the payment plan (effective, ineffective)"
                    },
                    "totalAmount": {
                      "name": "totalAmount",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "planType": {
                      "name": "planType",
                      "type": "string",
                      "description": "Type of payment plan"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "paymentMethod": {
                      "name": "paymentMethod",
                      "type": "object",
                      "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                      "properties": {}
                    }
                  }
                }
              },
              "financialAccount": {
                "name": "financialAccount",
                "type": "object",
                "description": "AccountReceivable reference. An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. An account receivable aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.",
                "properties": {}
              },
              "defaultPaymentMethod": {
                "name": "defaultPaymentMethod",
                "type": "object",
                "description": "Reference to PaymentMethodRef"
              }
            }
          }
        }
      }
    }
  },
  "settlementAccount": {
    "tableName": "SettlementAccount",
    "endpoints": [
      {
        "operationId": "listSettlementAccount",
        "path": "/settlementAccount",
        "method": "get"
      },
      {
        "operationId": "createSettlementAccount",
        "path": "/settlementAccount",
        "method": "post"
      },
      {
        "operationId": "retrieveSettlementAccount",
        "path": "/settlementAccount/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteSettlementAccount",
        "path": "/settlementAccount/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchSettlementAccount",
        "path": "/settlementAccount/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "creditLimit": {
                "name": "creditLimit",
                "type": "object",
                "description": "A base / value business entity used to represent money",
                "properties": {
                  "unit": {
                    "name": "unit",
                    "type": "string",
                    "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                  },
                  "value": {
                    "name": "value",
                    "type": "number",
                    "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                    "format": "float"
                  }
                }
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Detailed description of the account"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "The date and time that the account was last updated",
                "format": "date-time"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the account"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
              },
              "accountType": {
                "name": "accountType",
                "type": "string",
                "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "List of parties that have some relationship with the account, for example the customer to whom the account belongs",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "taxExemption": {
                "name": "taxExemption",
                "type": "array",
                "description": "List of tax exemptions that can be applied when calculating charges levied to the account.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the tax exemption within list of the exemptions"
                    },
                    "taxDefinition": {
                      "name": "taxDefinition",
                      "type": "array",
                      "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the tax."
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Tax name."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                            "properties": {
                              "startDateTime": {
                                "name": "startDateTime",
                                "type": "string",
                                "description": "Start of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              },
                              "endDateTime": {
                                "name": "endDateTime",
                                "type": "string",
                                "description": "End of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              }
                            }
                          },
                          "jurisdictionName": {
                            "name": "jurisdictionName",
                            "type": "string",
                            "description": "Name of the jurisdiction that levies the tax"
                          },
                          "jurisdictionLevel": {
                            "name": "jurisdictionLevel",
                            "type": "string",
                            "description": "Level of the jurisdiction that levies the tax"
                          },
                          "taxType": {
                            "name": "taxType",
                            "type": "string",
                            "description": "Type of the tax."
                          }
                        }
                      }
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "certificateNumber": {
                      "name": "certificateNumber",
                      "type": "string",
                      "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                    },
                    "issuingJurisdiction": {
                      "name": "issuingJurisdiction",
                      "type": "string",
                      "description": "Name of the jurisdiction that issued the exemption"
                    },
                    "reason": {
                      "name": "reason",
                      "type": "string",
                      "description": "Reason for the tax exemption"
                    },
                    "attachment": {
                      "name": "attachment",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "attachment_variant_0",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the attachment"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                              "name": "url",
                              "type": "string",
                              "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                            },
                            "content": {
                              "name": "content",
                              "type": "string",
                              "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                              "format": "base64"
                            },
                            "size": {
                              "name": "size",
                              "type": "object",
                              "description": "An amount in a given unit",
                              "properties": {
                                "amount": {
                                  "name": "amount",
                                  "type": "number",
                                  "description": "Numeric value in a given unit",
                                  "format": "float"
                                },
                                "units": {
                                  "name": "units",
                                  "type": "string",
                                  "description": "Unit"
                                }
                              }
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "attachmentType": {
                              "name": "attachmentType",
                              "type": "string",
                              "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                            },
                            "mimeType": {
                              "name": "mimeType",
                              "type": "string",
                              "description": "a technical characterization of the attachment content format using IETF Mime Types"
                            }
                          }
                        },
                        {
                          "name": "attachment_variant_1",
                          "type": "object",
                          "properties": {
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                              "name": "url",
                              "type": "string",
                              "description": "Link to the attachment media/content"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "contact": {
                "name": "contact",
                "type": "array",
                "description": "List of people who could be contacted regarding the account, for example the accountant who authorizes payments",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the contact within list of the contacts (for entities with list)"
                    },
                    "contactName": {
                      "name": "contactName",
                      "type": "string",
                      "description": "A displayable name for that contact"
                    },
                    "contactType": {
                      "name": "contactType",
                      "type": "string",
                      "description": "Type of contact (primary, secondary...)"
                    },
                    "partyRoleType": {
                      "name": "partyRoleType",
                      "type": "string",
                      "description": "Identifies what kind of party role type is linked to the contact (a account manager...)"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "contactMedium": {
                      "name": "contactMedium",
                      "type": "array",
                      "description": "List of contact mediums for the contact, such as mobile phone number, email addreess, etc.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Identifier for this contact medium."
                          },
                          "preferred": {
                            "name": "preferred",
                            "type": "boolean",
                            "description": "If true, indicates that is the preferred contact medium"
                          },
                          "contactType": {
                            "name": "contactType",
                            "type": "string",
                            "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      }
                    },
                    "relatedParty": {
                      "name": "relatedParty",
                      "type": "object",
                      "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                    }
                  }
                }
              },
              "accountBalance": {
                "name": "accountBalance",
                "type": "array",
                "description": "List of balances for the account, for example regular postpaid balance, deposit balance, write-off balance.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the balance within list of the balances (for entities with list)"
                    },
                    "amount": {
                      "name": "amount",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "balanceType": {
                      "name": "balanceType",
                      "type": "string",
                      "description": "Type of the balance : deposit balance, disputed balance, loyalty balance, receivable balance..."
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "accountRelationship": {
                "name": "accountRelationship",
                "type": "array",
                "description": "List of balances related to the account. For example a list of billing accounts that contribute to a financial account",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "account": {
                      "name": "account",
                      "type": "object",
                      "description": "Account reference. A account may be a party account or a financial account.",
                      "properties": {}
                    }
                  }
                }
              },
              "paymentStatus": {
                "name": "paymentStatus",
                "type": "string",
                "description": "The condition of the account, such as due, paid, in arrears."
              },
              "billStructure": {
                "name": "billStructure",
                "type": "object",
                "properties": {
                  "presentationMedia": {
                    "name": "presentationMedia",
                    "type": "array",
                    "items": {
                      "name": "items",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillPresentationMedia entity and not the BillPresentationMediaRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "items_variant_0",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A short descriptive name"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "An explanatory text describing this bill presentation media"
                            }
                          }
                        },
                        {
                          "name": "items_variant_1",
                          "type": "object",
                          "description": "PresentationMedia reference. A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.",
                          "properties": {}
                        }
                      ]
                    }
                  },
                  "format": {
                    "name": "format",
                    "type": "union",
                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillFormat entity and not the BillFormatRefOrValue class itself",
                    "oneOf": [
                      {
                        "name": "format_variant_0",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "A short descriptive name"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "An explanatory text for this bill format"
                          }
                        }
                      },
                      {
                        "name": "format_variant_1",
                        "type": "object",
                        "description": "BillFormat reference. A bill format is a description of the way in which a bill is presented.",
                        "properties": {}
                      }
                    ]
                  },
                  "cycleSpecification": {
                    "name": "cycleSpecification",
                    "type": "union",
                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillingCycleSpecification entity and not the BillingCycleSpecificationRefOrValue class itself",
                    "oneOf": [
                      {
                        "name": "cycleSpecification_variant_0",
                        "type": "object",
                        "properties": {
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "A short descriptive name"
                          },
                          "billingDateShift": {
                            "name": "billingDateShift",
                            "type": "integer",
                            "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
                          },
                          "billingPeriod": {
                            "name": "billingPeriod",
                            "type": "string",
                            "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
                          },
                          "chargeDateOffset": {
                            "name": "chargeDateOffset",
                            "type": "integer",
                            "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                          },
                          "creditDateOffset": {
                            "name": "creditDateOffset",
                            "type": "integer",
                            "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "An explanation regarding this billing cycle specification"
                          },
                          "frequency": {
                            "name": "frequency",
                            "type": "string",
                            "description": "Frequency of the billing cycle (monthly for instance)"
                          },
                          "mailingDateOffset": {
                            "name": "mailingDateOffset",
                            "type": "integer",
                            "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                          },
                          "paymentDueDateOffset": {
                            "name": "paymentDueDateOffset",
                            "type": "integer",
                            "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          }
                        }
                      },
                      {
                        "name": "cycleSpecification_variant_1",
                        "type": "object",
                        "description": "BillingCycleSpecification reference. A description of when to initiate a billing cycle and the various sub steps of a billing cycle.",
                        "properties": {}
                      }
                    ]
                  }
                }
              },
              "paymentPlan": {
                "name": "paymentPlan",
                "type": "array",
                "description": "A list of payment plans that are active or expired for the account, for example if the customer had difficulty in paying",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the plan within list of the plans (for entities with list)"
                    },
                    "numberOfPayments": {
                      "name": "numberOfPayments",
                      "type": "integer",
                      "description": "Number of payments used to spread the global payment"
                    },
                    "paymentFrequency": {
                      "name": "paymentFrequency",
                      "type": "string",
                      "description": "Frequency of the payments, such as monthly and bimonthly"
                    },
                    "priority": {
                      "name": "priority",
                      "type": "integer",
                      "description": "Priority of the payment plan"
                    },
                    "status": {
                      "name": "status",
                      "type": "string",
                      "description": "Status of the payment plan (effective, ineffective)"
                    },
                    "totalAmount": {
                      "name": "totalAmount",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "planType": {
                      "name": "planType",
                      "type": "string",
                      "description": "Type of payment plan"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "paymentMethod": {
                      "name": "paymentMethod",
                      "type": "object",
                      "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                      "properties": {}
                    }
                  }
                }
              },
              "financialAccount": {
                "name": "financialAccount",
                "type": "object",
                "description": "AccountReceivable reference. An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. An account receivable aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.",
                "properties": {}
              },
              "defaultPaymentMethod": {
                "name": "defaultPaymentMethod",
                "type": "object",
                "description": "Reference to PaymentMethodRef"
              }
            }
          }
        }
      }
    }
  },
  "resourceFunction": {
    "tableName": "ResourceFunction",
    "endpoints": [
      {
        "operationId": "listResourceFunction",
        "path": "/resourceFunction",
        "method": "get"
      },
      {
        "operationId": "createResourceFunction",
        "path": "/resourceFunction",
        "method": "post"
      },
      {
        "operationId": "retrieveResourceFunction",
        "path": "/resourceFunction/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteResourceFunction",
        "path": "/resourceFunction/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResourceFunction",
        "path": "/resourceFunction/{id}",
        "method": "patch"
      }
    ]
  },
  "heal": {
    "tableName": "Heal",
    "endpoints": [
      {
        "operationId": "listHeal",
        "path": "/heal",
        "method": "get"
      },
      {
        "operationId": "createHeal",
        "path": "/heal",
        "method": "post"
      },
      {
        "operationId": "retrieveHeal",
        "path": "/heal/{id}",
        "method": "get"
      }
    ]
  },
  "scale": {
    "tableName": "Scale",
    "endpoints": [
      {
        "operationId": "listScale",
        "path": "/scale",
        "method": "get"
      },
      {
        "operationId": "createScale",
        "path": "/scale",
        "method": "post"
      },
      {
        "operationId": "retrieveScale",
        "path": "/scale/{id}",
        "method": "get"
      }
    ]
  },
  "migrate": {
    "tableName": "Migrate",
    "endpoints": [
      {
        "operationId": "listMigrate",
        "path": "/migrate",
        "method": "get"
      },
      {
        "operationId": "createMigrate",
        "path": "/migrate",
        "method": "post"
      },
      {
        "operationId": "retrieveMigrate",
        "path": "/migrate/{id}",
        "method": "get"
      }
    ]
  },
  "shoppingCart": {
    "tableName": "ShoppingCart",
    "endpoints": [
      {
        "operationId": "listShoppingCart",
        "path": "/shoppingCart",
        "method": "get"
      },
      {
        "operationId": "createShoppingCart",
        "path": "/shoppingCart",
        "method": "post"
      },
      {
        "operationId": "retrieveShoppingCart",
        "path": "/shoppingCart/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteShoppingCart",
        "path": "/shoppingCart/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchShoppingCart",
        "path": "/shoppingCart/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "contactMedium": {
                "name": "contactMedium",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier for this contact medium."
                    },
                    "preferred": {
                      "name": "preferred",
                      "type": "boolean",
                      "description": "If true, indicates that is the preferred contact medium"
                    },
                    "contactType": {
                      "name": "contactType",
                      "type": "string",
                      "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "cartTotalPrice": {
                "name": "cartTotalPrice",
                "type": "array",
                "description": "Total amount of the shopping cart, usually of money, that represents the actual price paid by the Customer for cart (considering only \"Active\" cart items)",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains in detail the semantics of this cart or cart item price."
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A short descriptive name such as \"Subscription price\"."
                    },
                    "priceType": {
                      "name": "priceType",
                      "type": "string",
                      "description": "A category that describes the price, such as recurring, discount, allowance, penalty, and so forth"
                    },
                    "productOfferingPrice": {
                      "name": "productOfferingPrice",
                      "type": "object",
                      "properties": {
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "Version of the product offering price"
                        }
                      }
                    },
                    "recurringChargePeriod": {
                      "name": "recurringChargePeriod",
                      "type": "string",
                      "description": "Could be month, week..."
                    },
                    "unitOfMeasure": {
                      "name": "unitOfMeasure",
                      "type": "string",
                      "description": "Could be minutes, GB..."
                    },
                    "price": {
                      "name": "price",
                      "type": "object",
                      "properties": {
                        "dutyFreeAmount": {
                          "name": "dutyFreeAmount",
                          "type": "object",
                          "description": "A base / value business entity used to represent money",
                          "properties": {
                            "unit": {
                              "name": "unit",
                              "type": "string",
                              "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                            },
                            "value": {
                              "name": "value",
                              "type": "number",
                              "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                              "format": "float"
                            }
                          }
                        },
                        "percentage": {
                          "name": "percentage",
                          "type": "number",
                          "description": "Percentage to apply for ProdOfferPriceAlteration",
                          "format": "float"
                        },
                        "taxIncludedAmount": {
                          "name": "taxIncludedAmount",
                          "type": "object",
                          "description": "Reference to Money"
                        },
                        "taxRate": {
                          "name": "taxRate",
                          "type": "number",
                          "description": "Tax rate",
                          "format": "float"
                        }
                      }
                    },
                    "priceAlteration": {
                      "name": "priceAlteration",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "applicationDuration": {
                            "name": "applicationDuration",
                            "type": "integer",
                            "description": "Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge)"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "A narrative that explains in detail the semantics of this order item price alteration"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the order item price alteration"
                          },
                          "productOfferingPrice": {
                            "name": "productOfferingPrice",
                            "type": "object",
                            "description": "Reference to ProductOfferingPriceRef"
                          },
                          "priceType": {
                            "name": "priceType",
                            "type": "string",
                            "description": "A category that describes the price such as recurring, one time and usage."
                          },
                          "priority": {
                            "name": "priority",
                            "type": "integer",
                            "description": "Priority level for applying this alteration among all the defined alterations on the order item price"
                          },
                          "recurringChargePeriod": {
                            "name": "recurringChargePeriod",
                            "type": "string",
                            "description": "Could be month, week..."
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "Could be minutes, GB..."
                          },
                          "price": {
                            "name": "price",
                            "type": "object",
                            "description": "Reference to Price"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "cartItem": {
                "name": "cartItem",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "action": {
                      "name": "action",
                      "type": "string",
                      "description": "action to be performed on the product",
                      "enum": [
                        "add",
                        "modify",
                        "delete",
                        "noChange"
                      ]
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the cart item (generally it is a sequence number 01, 02, 03, ...) in the shopping cart"
                    },
                    "quantity": {
                      "name": "quantity",
                      "type": "integer",
                      "description": "Quantity of cart items"
                    },
                    "status": {
                      "name": "status",
                      "type": "string",
                      "description": "Possible values for the status of the cart item, saveForLater items are not calculated in the cart prices",
                      "enum": [
                        "active",
                        "saveForLater"
                      ]
                    },
                    "itemTerm": {
                      "name": "itemTerm",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "Description of the product term"
                          },
                          "duration": {
                            "name": "duration",
                            "type": "object",
                            "description": "A time interval in a given unit of time",
                            "properties": {
                              "amount": {
                                "name": "amount",
                                "type": "integer",
                                "description": "Time interval (number of seconds, minutes, hours, etc.)"
                              },
                              "units": {
                                "name": "units",
                                "type": "string",
                                "description": "Unit of time (seconds, minutes, hours, etc.)"
                              }
                            }
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of product term"
                          }
                        }
                      }
                    },
                    "cartItem": {
                      "name": "cartItem",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to CartItem"
                      }
                    },
                    "note": {
                      "name": "note",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Identifier of the note within its containing entity"
                          },
                          "author": {
                            "name": "author",
                            "type": "string",
                            "description": "Author of the note"
                          },
                          "date": {
                            "name": "date",
                            "type": "string",
                            "description": "Date of the note",
                            "format": "date-time"
                          },
                          "text": {
                            "name": "text",
                            "type": "string",
                            "description": "Text of the note"
                          }
                        }
                      }
                    },
                    "itemTotalPrice": {
                      "name": "itemTotalPrice",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to CartPrice"
                      }
                    },
                    "product": {
                      "name": "product",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product entity and not the ProductRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "product_variant_0",
                          "type": "object",
                          "properties": {
                            "agreementItem": {
                              "name": "agreementItem",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "agreementName": {
                                    "name": "agreementName",
                                    "type": "string",
                                    "description": "Name of the related entity."
                                  },
                                  "agreementHref": {
                                    "name": "agreementHref",
                                    "type": "string",
                                    "description": "Reference of the related entity."
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  },
                                  "agreementId": {
                                    "name": "agreementId",
                                    "type": "string",
                                    "description": "Unique identifier of a related entity."
                                  },
                                  "agreementItemId": {
                                    "name": "agreementItemId",
                                    "type": "string",
                                    "description": "Id of an item of a Agreement"
                                  }
                                }
                              }
                            },
                            "billingAccount": {
                              "name": "billingAccount",
                              "type": "object",
                              "properties": {
                                "ratingType": {
                                  "name": "ratingType",
                                  "type": "string",
                                  "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                                }
                              }
                            },
                            "creationDate": {
                              "name": "creationDate",
                              "type": "string",
                              "description": "Date and time when the product was created",
                              "format": "date-time"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Is the description of the product. It could be copied from the description of the Product Offering."
                            },
                            "isBundle": {
                              "name": "isBundle",
                              "type": "boolean",
                              "description": "If true, the product is a ProductBundle which is an instantiation of a BundledProductOffering. If false, the product is a ProductComponent which is an instantiation of a SimpleProductOffering."
                            },
                            "isCustomerVisible": {
                              "name": "isCustomerVisible",
                              "type": "boolean",
                              "description": "If true, the product is visible by the customer."
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the product. It could be the same as the name of the product offering"
                            },
                            "orderDate": {
                              "name": "orderDate",
                              "type": "string",
                              "description": "Is the date when the product was ordered",
                              "format": "date-time"
                            },
                            "productCharacteristic": {
                              "name": "productCharacteristic",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "productOffering": {
                              "name": "productOffering",
                              "type": "object",
                              "properties": {
                                "version": {
                                  "name": "version",
                                  "type": "string",
                                  "description": "Version of the product offering"
                                }
                              }
                            },
                            "productOrderItem": {
                              "name": "productOrderItem",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "orderItemAction": {
                                    "name": "orderItemAction",
                                    "type": "string",
                                    "description": "action to be performed on the entity managed by the item",
                                    "enum": [
                                      "add",
                                      "modify",
                                      "delete",
                                      "noChange"
                                    ]
                                  },
                                  "orderHref": {
                                    "name": "orderHref",
                                    "type": "string",
                                    "description": "Reference of the related entity."
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  },
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the  Order"
                                  },
                                  "orderId": {
                                    "name": "orderId",
                                    "type": "string",
                                    "description": "Unique identifier of a related  Order."
                                  },
                                  "orderItemId": {
                                    "name": "orderItemId",
                                    "type": "string",
                                    "description": "Id of an item of a prduct order"
                                  }
                                }
                              }
                            },
                            "product": {
                              "name": "product",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ProductRefOrValue"
                              }
                            },
                            "productPrice": {
                              "name": "productPrice",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Description of the Product price"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the Product price"
                                  },
                                  "productOfferingPrice": {
                                    "name": "productOfferingPrice",
                                    "type": "object",
                                    "description": "Reference to ProductOfferingPriceRef"
                                  },
                                  "recurringChargePeriod": {
                                    "name": "recurringChargePeriod",
                                    "type": "string",
                                    "description": "Used for recurring charge to indicate period (month, week, etc..)."
                                  },
                                  "unitOfMeasure": {
                                    "name": "unitOfMeasure",
                                    "type": "string",
                                    "description": "Unit of Measure if price depending on it (Gb, SMS volume, etc..)"
                                  },
                                  "price": {
                                    "name": "price",
                                    "type": "object",
                                    "description": "Reference to Price"
                                  },
                                  "priceAlteration": {
                                    "name": "priceAlteration",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "description": "Reference to PriceAlteration"
                                    }
                                  },
                                  "priceType": {
                                    "name": "priceType",
                                    "type": "string",
                                    "description": "indicate if the price is for recurrent or no-recurrent charge"
                                  }
                                }
                              }
                            },
                            "productRelationship": {
                              "name": "productRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Id of the related product"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Relationship type as relies on, bundles, etc..."
                                  }
                                }
                              }
                            },
                            "productSerialNumber": {
                              "name": "productSerialNumber",
                              "type": "string",
                              "description": "Is the serial number for the product. This is typically applicable to tangible products e.g. Broadband Router."
                            },
                            "productSpecification": {
                              "name": "productSpecification",
                              "type": "object",
                              "properties": {
                                "version": {
                                  "name": "version",
                                  "type": "string",
                                  "description": "Version of the product specification"
                                },
                                "targetProductSchema": {
                                  "name": "targetProductSchema",
                                  "type": "object",
                                  "description": "The reference object to the schema and type of target product which is described by product specification",
                                  "properties": {
                                    "@type": {
                                      "name": "@type",
                                      "type": "string",
                                      "description": "Class type of the target product"
                                    },
                                    "@schemaLocation": {
                                      "name": "@schemaLocation",
                                      "type": "string",
                                      "description": "This field provides a link to the schema describing the target product",
                                      "format": "uri"
                                    }
                                  }
                                }
                              }
                            },
                            "productTerm": {
                              "name": "productTerm",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Description of the productTerm"
                                  },
                                  "duration": {
                                    "name": "duration",
                                    "type": "object",
                                    "description": "Reference to Duration"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the productTerm"
                                  }
                                }
                              }
                            },
                            "realizingResource": {
                              "name": "realizingResource",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Resource reference, for when Resource is used by other entities.",
                                "properties": {}
                              }
                            },
                            "realizingService": {
                              "name": "realizingService",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Service reference, for when Service is used by other entities.",
                                "properties": {}
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                  },
                                  "partyOrPartyRole": {
                                    "name": "partyOrPartyRole",
                                    "type": "union",
                                    "description": "",
                                    "oneOf": [
                                      {
                                        "name": "partyOrPartyRole_variant_0",
                                        "type": "object",
                                        "description": "A Party reference",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "partyId": {
                                            "name": "partyId",
                                            "type": "string",
                                            "description": "The identifier of the engaged party that is linked to the PartyRole object."
                                          },
                                          "partyName": {
                                            "name": "partyName",
                                            "type": "string",
                                            "description": "The name of the engaged party that is linked to the PartyRole object."
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_2",
                                        "type": "object",
                                        "properties": {
                                          "gender": {
                                            "name": "gender",
                                            "type": "string",
                                            "description": "Gender"
                                          },
                                          "placeOfBirth": {
                                            "name": "placeOfBirth",
                                            "type": "string",
                                            "description": "Reference to the place where the individual was born"
                                          },
                                          "countryOfBirth": {
                                            "name": "countryOfBirth",
                                            "type": "string",
                                            "description": "Country where the individual was born"
                                          },
                                          "nationality": {
                                            "name": "nationality",
                                            "type": "string",
                                            "description": "Nationality"
                                          },
                                          "maritalStatus": {
                                            "name": "maritalStatus",
                                            "type": "string",
                                            "description": "Marital status (married, divorced, widow ...)"
                                          },
                                          "birthDate": {
                                            "name": "birthDate",
                                            "type": "string",
                                            "description": "Birth date",
                                            "format": "date-time"
                                          },
                                          "deathDate": {
                                            "name": "deathDate",
                                            "type": "string",
                                            "description": "Date of death",
                                            "format": "date-time"
                                          },
                                          "title": {
                                            "name": "title",
                                            "type": "string",
                                            "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                                          },
                                          "aristocraticTitle": {
                                            "name": "aristocraticTitle",
                                            "type": "string",
                                            "description": "e.g. Baron, Graf, Earl"
                                          },
                                          "generation": {
                                            "name": "generation",
                                            "type": "string",
                                            "description": "e.g.. Sr, Jr, III (the third)"
                                          },
                                          "preferredGivenName": {
                                            "name": "preferredGivenName",
                                            "type": "string",
                                            "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                          },
                                          "familyNamePrefix": {
                                            "name": "familyNamePrefix",
                                            "type": "string",
                                            "description": "Family name prefix"
                                          },
                                          "legalName": {
                                            "name": "legalName",
                                            "type": "string",
                                            "description": "Legal name or birth name (name one has for official purposes)"
                                          },
                                          "middleName": {
                                            "name": "middleName",
                                            "type": "string",
                                            "description": "Middles name or initial"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                                          },
                                          "formattedName": {
                                            "name": "formattedName",
                                            "type": "string",
                                            "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                                          },
                                          "location": {
                                            "name": "location",
                                            "type": "string",
                                            "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Valid values for the lifecycle state of the individual",
                                            "enum": [
                                              "initialized",
                                              "validated",
                                              "deceased"
                                            ]
                                          },
                                          "otherName": {
                                            "name": "otherName",
                                            "type": "array",
                                            "description": "List of other names by which this individual is known",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                              "properties": {
                                                "title": {
                                                  "name": "title",
                                                  "type": "string",
                                                  "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                                },
                                                "aristocraticTitle": {
                                                  "name": "aristocraticTitle",
                                                  "type": "string",
                                                  "description": "e.g. Baron, Graf, Earl, etc."
                                                },
                                                "generation": {
                                                  "name": "generation",
                                                  "type": "string",
                                                  "description": "e.g. Sr, Jr, etc."
                                                },
                                                "givenName": {
                                                  "name": "givenName",
                                                  "type": "string",
                                                  "description": "First name"
                                                },
                                                "preferredGivenName": {
                                                  "name": "preferredGivenName",
                                                  "type": "string",
                                                  "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                                },
                                                "familyNamePrefix": {
                                                  "name": "familyNamePrefix",
                                                  "type": "string",
                                                  "description": "Family name prefix"
                                                },
                                                "familyName": {
                                                  "name": "familyName",
                                                  "type": "string",
                                                  "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                                },
                                                "legalName": {
                                                  "name": "legalName",
                                                  "type": "string",
                                                  "description": "Legal name or birth name (name one has for official purposes)"
                                                },
                                                "middleName": {
                                                  "name": "middleName",
                                                  "type": "string",
                                                  "description": "Middle name or initial"
                                                },
                                                "fullName": {
                                                  "name": "fullName",
                                                  "type": "string",
                                                  "description": "Full name flatten (first, middle, and last names)"
                                                },
                                                "formattedName": {
                                                  "name": "formattedName",
                                                  "type": "string",
                                                  "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "individualIdentification": {
                                            "name": "individualIdentification",
                                            "type": "array",
                                            "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "identificationId": {
                                                  "name": "identificationId",
                                                  "type": "string",
                                                  "description": "Identifier"
                                                },
                                                "issuingAuthority": {
                                                  "name": "issuingAuthority",
                                                  "type": "string",
                                                  "description": "Authority which has issued the identifier, such as: social security, town hall"
                                                },
                                                "issuingDate": {
                                                  "name": "issuingDate",
                                                  "type": "string",
                                                  "description": "Date at which the identifier was issued",
                                                  "format": "date-time"
                                                },
                                                "identificationType": {
                                                  "name": "identificationType",
                                                  "type": "string",
                                                  "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "attachment": {
                                                  "name": "attachment",
                                                  "type": "union",
                                                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                                  "oneOf": [
                                                    {
                                                      "name": "attachment_variant_0",
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "name": "name",
                                                          "type": "string",
                                                          "description": "The name of the attachment"
                                                        },
                                                        "description": {
                                                          "name": "description",
                                                          "type": "string",
                                                          "description": "A narrative text describing the content of the attachment"
                                                        },
                                                        "url": {
                                                          "name": "url",
                                                          "type": "string",
                                                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                                        },
                                                        "content": {
                                                          "name": "content",
                                                          "type": "string",
                                                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                                          "format": "base64"
                                                        },
                                                        "size": {
                                                          "name": "size",
                                                          "type": "object",
                                                          "description": "An amount in a given unit",
                                                          "properties": {
                                                            "amount": {
                                                              "name": "amount",
                                                              "type": "number",
                                                              "description": "Numeric value in a given unit",
                                                              "format": "float"
                                                            },
                                                            "units": {
                                                              "name": "units",
                                                              "type": "string",
                                                              "description": "Unit"
                                                            }
                                                          }
                                                        },
                                                        "validFor": {
                                                          "name": "validFor",
                                                          "type": "object",
                                                          "description": "Reference to TimePeriod"
                                                        },
                                                        "attachmentType": {
                                                          "name": "attachmentType",
                                                          "type": "string",
                                                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                                        },
                                                        "mimeType": {
                                                          "name": "mimeType",
                                                          "type": "string",
                                                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "attachment_variant_1",
                                                      "type": "object",
                                                      "properties": {
                                                        "description": {
                                                          "name": "description",
                                                          "type": "string",
                                                          "description": "A narrative text describing the content of the attachment"
                                                        },
                                                        "url": {
                                                          "name": "url",
                                                          "type": "string",
                                                          "description": "Link to the attachment media/content"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "disability": {
                                            "name": "disability",
                                            "type": "array",
                                            "description": "List of disabilities suffered by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Lack or inadequate strength or ability.",
                                              "properties": {
                                                "disabilityCode": {
                                                  "name": "disabilityCode",
                                                  "type": "string",
                                                  "description": "Code of the disability"
                                                },
                                                "disabilityName": {
                                                  "name": "disabilityName",
                                                  "type": "string",
                                                  "description": "Name of the disability"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "languageAbility": {
                                            "name": "languageAbility",
                                            "type": "array",
                                            "description": "List of national languages known by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Ability of an individual to understand or converse in a language.",
                                              "properties": {
                                                "languageCode": {
                                                  "name": "languageCode",
                                                  "type": "string",
                                                  "description": "Language code (RFC 5646)"
                                                },
                                                "languageName": {
                                                  "name": "languageName",
                                                  "type": "string",
                                                  "description": "Language name"
                                                },
                                                "isFavouriteLanguage": {
                                                  "name": "isFavouriteLanguage",
                                                  "type": "boolean",
                                                  "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                                },
                                                "writingProficiency": {
                                                  "name": "writingProficiency",
                                                  "type": "string",
                                                  "description": "Writing proficiency evaluated for this language"
                                                },
                                                "readingProficiency": {
                                                  "name": "readingProficiency",
                                                  "type": "string",
                                                  "description": "Reading proficiency evaluated for this language"
                                                },
                                                "speakingProficiency": {
                                                  "name": "speakingProficiency",
                                                  "type": "string",
                                                  "description": "Speaking proficiency evaluated for this language"
                                                },
                                                "listeningProficiency": {
                                                  "name": "listeningProficiency",
                                                  "type": "string",
                                                  "description": "Listening proficiency evaluated for this language"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "skill": {
                                            "name": "skill",
                                            "type": "array",
                                            "description": "List of skills exhibited by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                              "properties": {
                                                "skillCode": {
                                                  "name": "skillCode",
                                                  "type": "string",
                                                  "description": "Code of the skill"
                                                },
                                                "skillName": {
                                                  "name": "skillName",
                                                  "type": "string",
                                                  "description": "Name of the skill, such as Java language"
                                                },
                                                "evaluatedLevel": {
                                                  "name": "evaluatedLevel",
                                                  "type": "string",
                                                  "description": "Level of expertise in a skill evaluated for an individual"
                                                },
                                                "comment": {
                                                  "name": "comment",
                                                  "type": "string",
                                                  "description": "A free text comment linked to the evaluation done"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "familyName": {
                                            "name": "familyName",
                                            "type": "string",
                                            "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                          },
                                          "givenName": {
                                            "name": "givenName",
                                            "type": "string",
                                            "description": "First name of the individual"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_3",
                                        "type": "object",
                                        "properties": {
                                          "isLegalEntity": {
                                            "name": "isLegalEntity",
                                            "type": "boolean",
                                            "description": "If value is true, the organization is a legal entity known by a national referential."
                                          },
                                          "isHeadOffice": {
                                            "name": "isHeadOffice",
                                            "type": "boolean",
                                            "description": "If value is true, the organization is the head office"
                                          },
                                          "organizationType": {
                                            "name": "organizationType",
                                            "type": "string",
                                            "description": "Type of Organization (company, department...)"
                                          },
                                          "existsDuring": {
                                            "name": "existsDuring",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "Organization name (department name for example)"
                                          },
                                          "nameType": {
                                            "name": "nameType",
                                            "type": "string",
                                            "description": "Type of the name : Co, Inc, Ltd, etc."
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Valid values for the lifecycle state of the organization",
                                            "enum": [
                                              "initialized",
                                              "validated",
                                              "closed"
                                            ]
                                          },
                                          "otherName": {
                                            "name": "otherName",
                                            "type": "array",
                                            "description": "List of additional names by which the organization is known",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "tradingName": {
                                                  "name": "tradingName",
                                                  "type": "string",
                                                  "description": "The name that the organization trades under"
                                                },
                                                "nameType": {
                                                  "name": "nameType",
                                                  "type": "string",
                                                  "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                                },
                                                "name": {
                                                  "name": "name",
                                                  "type": "string",
                                                  "description": "Organization name (department name for example)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "organizationIdentification": {
                                            "name": "organizationIdentification",
                                            "type": "array",
                                            "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "identificationId": {
                                                  "name": "identificationId",
                                                  "type": "string",
                                                  "description": "Identifier"
                                                },
                                                "issuingAuthority": {
                                                  "name": "issuingAuthority",
                                                  "type": "string",
                                                  "description": "Authority which has issued the identifier (chamber of commerce...)"
                                                },
                                                "issuingDate": {
                                                  "name": "issuingDate",
                                                  "type": "string",
                                                  "description": "Date at which the identifier was issued",
                                                  "format": "date-time"
                                                },
                                                "identificationType": {
                                                  "name": "identificationType",
                                                  "type": "string",
                                                  "description": "Type of identification information used to identify the company in a country or internationally"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "attachment": {
                                                  "name": "attachment",
                                                  "type": "object",
                                                  "description": "Reference to AttachmentRefOrValue"
                                                }
                                              }
                                            }
                                          },
                                          "organizationChildRelationship": {
                                            "name": "organizationChildRelationship",
                                            "type": "array",
                                            "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "relationshipType": {
                                                  "name": "relationshipType",
                                                  "type": "string",
                                                  "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                                },
                                                "organization": {
                                                  "name": "organization",
                                                  "type": "object",
                                                  "properties": {}
                                                }
                                              }
                                            }
                                          },
                                          "organizationParentRelationship": {
                                            "name": "organizationParentRelationship",
                                            "type": "object",
                                            "properties": {
                                              "relationshipType": {
                                                "name": "relationshipType",
                                                "type": "string",
                                                "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                              },
                                              "organization": {
                                                "name": "organization",
                                                "type": "object",
                                                "description": "Reference to OrganizationRef"
                                              }
                                            }
                                          },
                                          "tradingName": {
                                            "name": "tradingName",
                                            "type": "string",
                                            "description": "Name that the organization (unit) trades under"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_4",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A description of the PartyRole."
                                          },
                                          "role": {
                                            "name": "role",
                                            "type": "string",
                                            "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
                                          },
                                          "engagedParty": {
                                            "name": "engagedParty",
                                            "type": "object",
                                            "description": "Reference to PartyRef"
                                          },
                                          "partyRoleSpecification": {
                                            "name": "partyRoleSpecification",
                                            "type": "object",
                                            "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                                            "properties": {}
                                          },
                                          "characteristic": {
                                            "name": "characteristic",
                                            "type": "array",
                                            "description": "Describes the characteristic of a party role.",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to Characteristic"
                                            }
                                          },
                                          "account": {
                                            "name": "account",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Account reference. A account may be a party account or a financial account.",
                                              "properties": {}
                                            }
                                          },
                                          "agreement": {
                                            "name": "agreement",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                              "properties": {}
                                            }
                                          },
                                          "contactMedium": {
                                            "name": "contactMedium",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to ContactMedium"
                                            }
                                          },
                                          "paymentMethod": {
                                            "name": "paymentMethod",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                              "properties": {}
                                            }
                                          },
                                          "creditProfile": {
                                            "name": "creditProfile",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "creditProfileDate": {
                                                  "name": "creditProfileDate",
                                                  "type": "string",
                                                  "description": "The date the profile was established",
                                                  "format": "date-time"
                                                },
                                                "creditRiskRating": {
                                                  "name": "creditRiskRating",
                                                  "type": "integer",
                                                  "description": "This is an integer whose value is used to rate the risk"
                                                },
                                                "creditScore": {
                                                  "name": "creditScore",
                                                  "type": "integer",
                                                  "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "relatedParty": {
                                            "name": "relatedParty",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to RelatedPartyOrPartyRole"
                                            }
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Used to track the lifecycle status of the party role."
                                          },
                                          "statusReason": {
                                            "name": "statusReason",
                                            "type": "string",
                                            "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_5",
                                        "type": "object",
                                        "description": "When business partner is the Supplier ",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_6",
                                        "type": "object",
                                        "description": "When business partner is the BusinessPartner ",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_7",
                                        "type": "object",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_8",
                                        "type": "object",
                                        "properties": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "place": {
                              "name": "place",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string"
                                  },
                                  "place": {
                                    "name": "place",
                                    "type": "union",
                                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place entity and not the PlaceRefOrValue class itself",
                                    "oneOf": [
                                      {
                                        "name": "place_variant_0",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "name": "id",
                                            "type": "string",
                                            "description": "Unique identifier of the geographic location"
                                          },
                                          "href": {
                                            "name": "href",
                                            "type": "string",
                                            "description": "An URI used to access to the geographic location resource"
                                          },
                                          "@type": {
                                            "name": "@type",
                                            "type": "string",
                                            "description": "The name of the GeoJSON structure used in the geometry attribute",
                                            "enum": [
                                              "GeoJsonPoint",
                                              "GeoJsonMultiPoint",
                                              "GeoJsonLineString",
                                              "GeoJsonMultiLineString",
                                              "GeoJsonPolygon"
                                            ]
                                          },
                                          "bbox": {
                                            "name": "bbox",
                                            "type": "array",
                                            "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                                            "items": {
                                              "name": "items",
                                              "type": "number"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "name": "place_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "name": "code",
                                            "type": "string",
                                            "description": "A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]"
                                          },
                                          "creationDate": {
                                            "name": "creationDate",
                                            "type": "string",
                                            "description": "Date and time when the GeographicSite was created",
                                            "format": "date-time"
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "Text describing additional information regarding the site"
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former"
                                          },
                                          "relatedParty": {
                                            "name": "relatedParty",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to RelatedPartyOrPartyRole"
                                            }
                                          },
                                          "externalIdentifier": {
                                            "name": "externalIdentifier",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "owner": {
                                                  "name": "owner",
                                                  "type": "string",
                                                  "description": "Name of the external system that owns the entity."
                                                },
                                                "externalIdentifierType": {
                                                  "name": "externalIdentifierType",
                                                  "type": "string",
                                                  "description": "Type of the identification, typically would be the type of the entity within the external system"
                                                },
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "identification of the entity within the external system."
                                                }
                                              }
                                            }
                                          },
                                          "calendar": {
                                            "name": "calendar",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "day": {
                                                  "name": "day",
                                                  "type": "string",
                                                  "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, ...)"
                                                },
                                                "timeZone": {
                                                  "name": "timeZone",
                                                  "type": "string",
                                                  "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)"
                                                },
                                                "hourPeriod": {
                                                  "name": "hourPeriod",
                                                  "type": "array",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "properties": {
                                                      "endHour": {
                                                        "name": "endHour",
                                                        "type": "string",
                                                        "description": "The time when the status ends applying"
                                                      },
                                                      "startHour": {
                                                        "name": "startHour",
                                                        "type": "string",
                                                        "description": "The time when the status starts applying"
                                                      }
                                                    }
                                                  }
                                                },
                                                "status": {
                                                  "name": "status",
                                                  "type": "string",
                                                  "description": "Indication of the availability of the caledar period (e.g.: available, booked, etc.)"
                                                }
                                              }
                                            }
                                          },
                                          "place": {
                                            "name": "place",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to PlaceRefOrValue"
                                            }
                                          },
                                          "siteRelationship": {
                                            "name": "siteRelationship",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "href": {
                                                  "name": "href",
                                                  "type": "string",
                                                  "description": "Reference of the related geographic site"
                                                },
                                                "role": {
                                                  "name": "role",
                                                  "type": "string",
                                                  "description": "Role of the related site in the relationship"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Unique identifier of the related site entity within the server"
                                                },
                                                "relationshipType": {
                                                  "name": "relationshipType",
                                                  "type": "string",
                                                  "description": "Type of relationship"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "name": "place_variant_2",
                                        "type": "object",
                                        "properties": {
                                          "city": {
                                            "name": "city",
                                            "type": "string",
                                            "description": "City that the address is in"
                                          },
                                          "country": {
                                            "name": "country",
                                            "type": "string",
                                            "description": "Country that the address is in"
                                          },
                                          "locality": {
                                            "name": "locality",
                                            "type": "string",
                                            "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                                          },
                                          "postcode": {
                                            "name": "postcode",
                                            "type": "string",
                                            "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                                          },
                                          "stateOrProvince": {
                                            "name": "stateOrProvince",
                                            "type": "string",
                                            "description": "the State or Province that the address is in"
                                          },
                                          "streetName": {
                                            "name": "streetName",
                                            "type": "string",
                                            "description": "Name of the street or other street type"
                                          },
                                          "streetNr": {
                                            "name": "streetNr",
                                            "type": "string",
                                            "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                                          },
                                          "streetNrLast": {
                                            "name": "streetNrLast",
                                            "type": "string",
                                            "description": "Last number in a range of street numbers allocated to a property"
                                          },
                                          "streetNrLastSuffix": {
                                            "name": "streetNrLastSuffix",
                                            "type": "string",
                                            "description": "Last street number suffix for a ranged address"
                                          },
                                          "streetNrSuffix": {
                                            "name": "streetNrSuffix",
                                            "type": "string",
                                            "description": "the first street number suffix"
                                          },
                                          "streetSuffix": {
                                            "name": "streetSuffix",
                                            "type": "string",
                                            "description": "A modifier denoting a relative direction"
                                          },
                                          "streetType": {
                                            "name": "streetType",
                                            "type": "string",
                                            "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                                          },
                                          "countryCode": {
                                            "name": "countryCode",
                                            "type": "array",
                                            "description": "Country codes are short alphabetic or numeric geographical codes (geocodes) developed to represent countries and dependent areas, for use in data processing and communications. Several different systems have been developed to do this. The term country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes, the E.164 country calling codes.",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "format": {
                                                  "name": "format",
                                                  "type": "string",
                                                  "description": "Standard/Regulatory definition identifier. e.g., ISO 3166-1"
                                                },
                                                "value": {
                                                  "name": "value",
                                                  "type": "string",
                                                  "description": "The value of the resource in the corresponding standard.e.g., a country code value"
                                                }
                                              }
                                            }
                                          },
                                          "externalIdentifier": {
                                            "name": "externalIdentifier",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to ExternalIdentifier"
                                            }
                                          },
                                          "geographicLocation": {
                                            "name": "geographicLocation",
                                            "type": "union",
                                            "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicLocation entity and not the GeographicLocationRefOrValue class itself",
                                            "oneOf": [
                                              {
                                                "name": "geographicLocation_variant_0",
                                                "type": "object",
                                                "description": "Reference to GeographicLocation"
                                              },
                                              {
                                                "name": "geographicLocation_variant_1",
                                                "type": "object",
                                                "properties": {}
                                              }
                                            ]
                                          },
                                          "geographicSubAddress": {
                                            "name": "geographicSubAddress",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "buildingName": {
                                                  "name": "buildingName",
                                                  "type": "string",
                                                  "description": "allows for buildings that have well-known names"
                                                },
                                                "href": {
                                                  "name": "href",
                                                  "type": "string",
                                                  "description": "Link to the subAddress"
                                                },
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Unique Identifier of the subAddress"
                                                },
                                                "levelNumber": {
                                                  "name": "levelNumber",
                                                  "type": "string",
                                                  "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                                                },
                                                "levelType": {
                                                  "name": "levelType",
                                                  "type": "string",
                                                  "description": "describes level types within a building"
                                                },
                                                "name": {
                                                  "name": "name",
                                                  "type": "string",
                                                  "description": "Name of the subAddress to identify it with a meaningful identification"
                                                },
                                                "privateStreetName": {
                                                  "name": "privateStreetName",
                                                  "type": "string",
                                                  "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                                                },
                                                "privateStreetNumber": {
                                                  "name": "privateStreetNumber",
                                                  "type": "string",
                                                  "description": "private streets numbers internal to a private street"
                                                },
                                                "subUnit": {
                                                  "name": "subUnit",
                                                  "type": "array",
                                                  "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "properties": {
                                                      "subUnitNumber": {
                                                        "name": "subUnitNumber",
                                                        "type": "string",
                                                        "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                                                      },
                                                      "subUnitType": {
                                                        "name": "subUnitType",
                                                        "type": "string",
                                                        "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                                                      }
                                                    }
                                                  }
                                                },
                                                "subAddressType": {
                                                  "name": "subAddressType",
                                                  "type": "string",
                                                  "description": "Type of subAddress : it can be a subunit or a private street"
                                                }
                                              }
                                            }
                                          },
                                          "geographicAddressType": {
                                            "name": "geographicAddressType",
                                            "type": "string",
                                            "description": "Classification of the address, e.g., residential, industrial "
                                          }
                                        }
                                      },
                                      {
                                        "name": "place_variant_3",
                                        "type": "object",
                                        "description": "Place reference.",
                                        "properties": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "startDate": {
                              "name": "startDate",
                              "type": "string",
                              "description": "Is the date from which the product starts",
                              "format": "date-time"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Possible values for the status of the product",
                              "enum": [
                                "created",
                                "pendingActive",
                                "cancelled",
                                "active",
                                "pendingTerminate",
                                "terminated",
                                "suspended",
                                "aborted "
                              ]
                            },
                            "terminationDate": {
                              "name": "terminationDate",
                              "type": "string",
                              "description": "Is the date when the product was terminated",
                              "format": "date-time"
                            },
                            "intent": {
                              "name": "intent",
                              "type": "union",
                              "description": "Intent Ref (if Intent already exists) or Value (if Intent be created or its details be presented)",
                              "oneOf": [
                                {
                                  "name": "intent_variant_0",
                                  "type": "object",
                                  "description": "Intent reference, for when Intent is used by other entities",
                                  "properties": {}
                                },
                                {
                                  "name": "intent_variant_1",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "The description of the intent."
                                    },
                                    "validFor": {
                                      "name": "validFor",
                                      "type": "object",
                                      "description": "Reference to TimePeriod"
                                    },
                                    "isBundle": {
                                      "name": "isBundle",
                                      "type": "boolean",
                                      "description": "isBundle determines whether an intent represents a single intent (false), or a bundle of intents(true)."
                                    },
                                    "priority": {
                                      "name": "priority",
                                      "type": "string",
                                      "description": "Can be used by intent owner to prioritize intents in an intent management system"
                                    },
                                    "statusChangeDate": {
                                      "name": "statusChangeDate",
                                      "type": "string",
                                      "description": "A date time( DateTime). The date that the entity status changed to the current one",
                                      "format": "date-time"
                                    },
                                    "context": {
                                      "name": "context",
                                      "type": "string",
                                      "description": "A string used to give a context to the intent"
                                    },
                                    "version": {
                                      "name": "version",
                                      "type": "string",
                                      "description": "A field that identifies the specific version of an instance of an intent."
                                    },
                                    "intentSpecification": {
                                      "name": "intentSpecification",
                                      "type": "object",
                                      "description": "Reference to EntityRef"
                                    },
                                    "intentRelationship": {
                                      "name": "intentRelationship",
                                      "type": "array",
                                      "description": "A list of intents related to this intent",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "A uni-directionmal relationship from this entity to a target entity instance",
                                        "properties": {
                                          "href": {
                                            "name": "href",
                                            "type": "string"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string"
                                          },
                                          "role": {
                                            "name": "role",
                                            "type": "string",
                                            "description": "The association role for this entity"
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "associationSpec": {
                                            "name": "associationSpec",
                                            "type": "object",
                                            "description": "Reference to EntityRef"
                                          },
                                          "@baseType": {
                                            "name": "@baseType",
                                            "type": "string",
                                            "description": "When sub-classing, this defines the super-class"
                                          },
                                          "@schemaLocation": {
                                            "name": "@schemaLocation",
                                            "type": "string",
                                            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                                          },
                                          "relationshipType": {
                                            "name": "relationshipType",
                                            "type": "string",
                                            "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                                          },
                                          "id": {
                                            "name": "id",
                                            "type": "string"
                                          },
                                          "@referredType": {
                                            "name": "@referredType",
                                            "type": "string"
                                          },
                                          "@type": {
                                            "name": "@type",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "characteristic": {
                                      "name": "characteristic",
                                      "type": "array",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "Reference to Characteristic"
                                      }
                                    },
                                    "relatedParty": {
                                      "name": "relatedParty",
                                      "type": "array",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "properties": {
                                          "role": {
                                            "name": "role",
                                            "type": "string",
                                            "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                          },
                                          "partyOrPartyRole": {
                                            "name": "partyOrPartyRole",
                                            "type": "union",
                                            "description": "",
                                            "oneOf": [
                                              {
                                                "name": "partyOrPartyRole_variant_0",
                                                "type": "object",
                                                "description": "Reference to PartyRef"
                                              },
                                              {
                                                "name": "partyOrPartyRole_variant_1",
                                                "type": "object",
                                                "description": "Reference to PartyRoleRef"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "attachment": {
                                      "name": "attachment",
                                      "type": "array",
                                      "description": "Attachments that may be of relevance to this intent, such as picture, document, media",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "Reference to AttachmentRefOrValue"
                                      }
                                    },
                                    "name": {
                                      "name": "name",
                                      "type": "string",
                                      "description": "The name of the intent."
                                    },
                                    "expression": {
                                      "name": "expression",
                                      "type": "object",
                                      "properties": {
                                        "expressionLanguage": {
                                          "name": "expressionLanguage",
                                          "type": "string",
                                          "description": "Possible values for the serialized Expression language of an intent or Intent report",
                                          "enum": [
                                            "Turtle",
                                            "JSON-LD",
                                            "RDF-XML",
                                            "Other"
                                          ]
                                        },
                                        "iri": {
                                          "name": "iri",
                                          "type": "string",
                                          "description": "Internationalized Resource Identifier of the intent Expression"
                                        },
                                        "expressionValue": {
                                          "name": "expressionValue",
                                          "type": "string",
                                          "description": "expression value is the ontology-encoded form of the Intent such as RDF-XML, Turtle, Json-LD,..."
                                        }
                                      }
                                    },
                                    "creationDate": {
                                      "name": "creationDate",
                                      "type": "string",
                                      "description": "Date and time of the creation of this REST resource",
                                      "format": "date-time"
                                    },
                                    "lastUpdate": {
                                      "name": "lastUpdate",
                                      "type": "string",
                                      "description": "Date and time of the last update of this REST resource",
                                      "format": "date-time"
                                    },
                                    "lifecycleStatus": {
                                      "name": "lifecycleStatus",
                                      "type": "string",
                                      "description": "Used to indicate the current lifecycle status of this intent"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "name": "product_variant_1",
                          "type": "object",
                          "description": "A Product reference",
                          "properties": {}
                        }
                      ]
                    },
                    "itemPrice": {
                      "name": "itemPrice",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to CartPrice"
                      }
                    },
                    "productOffering": {
                      "name": "productOffering",
                      "type": "object",
                      "description": "Reference to ProductOfferingRef"
                    },
                    "cartItemRelationship": {
                      "name": "cartItemRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the referred cart item"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of the cart item relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to RelatedPartyOrPartyRole"
                }
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "The date on which the shopping cart was created",
                "format": "date-time"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "The date and time that the shopping cart was last updated",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "entityCatalog": {
    "tableName": "EntityCatalog",
    "endpoints": [
      {
        "operationId": "listEntityCatalog",
        "path": "/entityCatalog",
        "method": "get"
      },
      {
        "operationId": "createEntityCatalog",
        "path": "/entityCatalog",
        "method": "post"
      },
      {
        "operationId": "retrieveEntityCatalog",
        "path": "/entityCatalog/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteEntityCatalog",
        "path": "/entityCatalog/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchEntityCatalog",
        "path": "/entityCatalog/{id}",
        "method": "patch"
      }
    ]
  },
  "entityCategory": {
    "tableName": "EntityCategory",
    "endpoints": [
      {
        "operationId": "listEntityCategory",
        "path": "/entityCategory",
        "method": "get"
      },
      {
        "operationId": "createEntityCategory",
        "path": "/entityCategory",
        "method": "post"
      },
      {
        "operationId": "retrieveEntityCategory",
        "path": "/entityCategory/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteEntityCategory",
        "path": "/entityCategory/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchEntityCategory",
        "path": "/entityCategory/{id}",
        "method": "patch"
      }
    ]
  },
  "entityCatalogItem": {
    "tableName": "EntityCatalogItem",
    "endpoints": [
      {
        "operationId": "listEntityCatalogItem",
        "path": "/entityCatalogItem",
        "method": "get"
      },
      {
        "operationId": "createEntityCatalogItem",
        "path": "/entityCatalogItem",
        "method": "post"
      },
      {
        "operationId": "retrieveEntityCatalogItem",
        "path": "/entityCatalogItem/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteEntityCatalogItem",
        "path": "/entityCatalogItem/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchEntityCatalogItem",
        "path": "/entityCatalogItem/{id}",
        "method": "patch"
      }
    ]
  },
  "entitySpecification": {
    "tableName": "EntitySpecification",
    "endpoints": [
      {
        "operationId": "listEntitySpecification",
        "path": "/entitySpecification",
        "method": "get"
      },
      {
        "operationId": "createEntitySpecification",
        "path": "/entitySpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveEntitySpecification",
        "path": "/entitySpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteEntitySpecification",
        "path": "/entitySpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchEntitySpecification",
        "path": "/entitySpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "associationSpecification": {
    "tableName": "AssociationSpecification",
    "endpoints": [
      {
        "operationId": "listAssociationSpecification",
        "path": "/associationSpecification",
        "method": "get"
      },
      {
        "operationId": "createAssociationSpecification",
        "path": "/associationSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveAssociationSpecification",
        "path": "/associationSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteAssociationSpecification",
        "path": "/associationSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchAssociationSpecification",
        "path": "/associationSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "loyaltyProgramProductSpec": {
    "tableName": "LoyaltyProgramProductSpec",
    "endpoints": [
      {
        "operationId": "listLoyaltyProgramProductSpec",
        "path": "/loyaltyProgramProductSpec",
        "method": "get"
      },
      {
        "operationId": "createLoyaltyProgramProductSpec",
        "path": "/loyaltyProgramProductSpec",
        "method": "post"
      },
      {
        "operationId": "retrieveLoyaltyProgramProductSpec",
        "path": "/loyaltyProgramProductSpec/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteLoyaltyProgramProductSpec",
        "path": "/loyaltyProgramProductSpec/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchLoyaltyProgramProductSpec",
        "path": "/loyaltyProgramProductSpec/{id}",
        "method": "patch"
      }
    ]
  },
  "loyaltyProgramMember": {
    "tableName": "LoyaltyProgramMember",
    "endpoints": [
      {
        "operationId": "listLoyaltyProgramMember",
        "path": "/loyaltyProgramMember",
        "method": "get"
      },
      {
        "operationId": "createLoyaltyProgramMember",
        "path": "/loyaltyProgramMember",
        "method": "post"
      },
      {
        "operationId": "retrieveLoyaltyProgramMember",
        "path": "/loyaltyProgramMember/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteLoyaltyProgramMember",
        "path": "/loyaltyProgramMember/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchLoyaltyProgramMember",
        "path": "/loyaltyProgramMember/{id}",
        "method": "patch"
      }
    ]
  },
  "loyaltyProgramProduct": {
    "tableName": "LoyaltyProgramProduct",
    "endpoints": [
      {
        "operationId": "listLoyaltyProgramProduct",
        "path": "/loyaltyProgramProduct",
        "method": "get"
      },
      {
        "operationId": "createLoyaltyProgramProduct",
        "path": "/loyaltyProgramProduct",
        "method": "post"
      },
      {
        "operationId": "retrieveLoyaltyProgramProduct",
        "path": "/loyaltyProgramProduct/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteLoyaltyProgramProduct",
        "path": "/loyaltyProgramProduct/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchLoyaltyProgramProduct",
        "path": "/loyaltyProgramProduct/{id}",
        "method": "patch"
      }
    ]
  },
  "loyaltyAccount": {
    "tableName": "LoyaltyAccount",
    "endpoints": [
      {
        "operationId": "listLoyaltyAccount",
        "path": "/loyaltyAccount",
        "method": "get"
      },
      {
        "operationId": "createLoyaltyAccount",
        "path": "/loyaltyAccount",
        "method": "post"
      },
      {
        "operationId": "retrieveLoyaltyAccount",
        "path": "/loyaltyAccount/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteLoyaltyAccount",
        "path": "/loyaltyAccount/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchLoyaltyAccount",
        "path": "/loyaltyAccount/{id}",
        "method": "patch"
      }
    ]
  },
  "loyaltyRule": {
    "tableName": "LoyaltyRule",
    "endpoints": [
      {
        "operationId": "listLoyaltyRule",
        "path": "/loyaltyRule",
        "method": "get"
      },
      {
        "operationId": "createLoyaltyRule",
        "path": "/loyaltyRule",
        "method": "post"
      },
      {
        "operationId": "retrieveLoyaltyRule",
        "path": "/loyaltyRule/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteLoyaltyRule",
        "path": "/loyaltyRule/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchLoyaltyRule",
        "path": "/loyaltyRule/{id}",
        "method": "patch"
      }
    ]
  },
  "loyaltyEventType": {
    "tableName": "LoyaltyEventType",
    "endpoints": [
      {
        "operationId": "listLoyaltyEventType",
        "path": "/loyaltyEventType",
        "method": "get"
      },
      {
        "operationId": "createLoyaltyEventType",
        "path": "/loyaltyEventType",
        "method": "post"
      },
      {
        "operationId": "retrieveLoyaltyEventType",
        "path": "/loyaltyEventType/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteLoyaltyEventType",
        "path": "/loyaltyEventType/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchLoyaltyEventType",
        "path": "/loyaltyEventType/{id}",
        "method": "patch"
      }
    ]
  },
  "loyaltyCondition": {
    "tableName": "LoyaltyCondition",
    "endpoints": [
      {
        "operationId": "listLoyaltyCondition",
        "path": "/loyaltyCondition",
        "method": "get"
      },
      {
        "operationId": "createLoyaltyCondition",
        "path": "/loyaltyCondition",
        "method": "post"
      },
      {
        "operationId": "retrieveLoyaltyCondition",
        "path": "/loyaltyCondition/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteLoyaltyCondition",
        "path": "/loyaltyCondition/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchLoyaltyCondition",
        "path": "/loyaltyCondition/{id}",
        "method": "patch"
      }
    ]
  },
  "loyaltyAction": {
    "tableName": "LoyaltyAction",
    "endpoints": [
      {
        "operationId": "listLoyaltyAction",
        "path": "/loyaltyAction",
        "method": "get"
      },
      {
        "operationId": "createLoyaltyAction",
        "path": "/loyaltyAction",
        "method": "post"
      },
      {
        "operationId": "retrieveLoyaltyAction",
        "path": "/loyaltyAction/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteLoyaltyAction",
        "path": "/loyaltyAction/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchLoyaltyAction",
        "path": "/loyaltyAction/{id}",
        "method": "patch"
      }
    ]
  },
  "loyaltyProgramPartner": {
    "tableName": "LoyaltyProgramPartner",
    "endpoints": [
      {
        "operationId": "listLoyaltyProgramPartner",
        "path": "/loyaltyProgramPartner",
        "method": "get"
      },
      {
        "operationId": "createLoyaltyProgramPartner",
        "path": "/loyaltyProgramPartner",
        "method": "post"
      },
      {
        "operationId": "retrieveLoyaltyProgramPartner",
        "path": "/loyaltyProgramPartner/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteLoyaltyProgramPartner",
        "path": "/loyaltyProgramPartner/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchLoyaltyProgramPartner",
        "path": "/loyaltyProgramPartner/{id}",
        "method": "patch"
      }
    ]
  },
  "loyaltyEvent": {
    "tableName": "LoyaltyEvent",
    "endpoints": [
      {
        "operationId": "createLoyaltyEvent",
        "path": "/loyaltyEvent",
        "method": "post"
      }
    ]
  },
  "loyaltyEarn": {
    "tableName": "LoyaltyEarn",
    "endpoints": [
      {
        "operationId": "createLoyaltyEarn",
        "path": "/loyaltyEarn",
        "method": "post"
      }
    ]
  },
  "loyaltyBurn": {
    "tableName": "LoyaltyBurn",
    "endpoints": [
      {
        "operationId": "createLoyaltyBurn",
        "path": "/loyaltyBurn",
        "method": "post"
      }
    ]
  },
  "loyaltyExecutionPoint": {
    "tableName": "LoyaltyExecutionPoint",
    "endpoints": [
      {
        "operationId": "listLoyaltyExecutionPoint",
        "path": "/loyaltyExecutionPoint",
        "method": "get"
      },
      {
        "operationId": "retrieveLoyaltyExecutionPoint",
        "path": "/loyaltyExecutionPoint/{id}",
        "method": "get"
      }
    ]
  },
  "serviceLevelObjective": {
    "tableName": "ServiceLevelObjective",
    "endpoints": [
      {
        "operationId": "listServiceLevelObjective",
        "path": "/serviceLevelObjective",
        "method": "get"
      },
      {
        "operationId": "createServiceLevelObjective",
        "path": "/serviceLevelObjective",
        "method": "post"
      },
      {
        "operationId": "retrieveServiceLevelObjective",
        "path": "/serviceLevelObjective/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteServiceLevelObjective",
        "path": "/serviceLevelObjective/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchServiceLevelObjective",
        "path": "/serviceLevelObjective/{id}",
        "method": "patch"
      }
    ]
  },
  "serviceLevelSpecification": {
    "tableName": "ServiceLevelSpecification",
    "endpoints": [
      {
        "operationId": "listServiceLevelSpecification",
        "path": "/serviceLevelSpecification",
        "method": "get"
      },
      {
        "operationId": "createServiceLevelSpecification",
        "path": "/serviceLevelSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveServiceLevelSpecification",
        "path": "/serviceLevelSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteServiceLevelSpecification",
        "path": "/serviceLevelSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchServiceLevelSpecification",
        "path": "/serviceLevelSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "problemAcknowledgement": {
    "tableName": "ProblemAcknowledgement",
    "endpoints": [
      {
        "operationId": "listProblemAcknowledgement",
        "path": "/problemAcknowledgement",
        "method": "get"
      },
      {
        "operationId": "createProblemAcknowledgement",
        "path": "/problemAcknowledgement",
        "method": "post"
      },
      {
        "operationId": "retrieveProblemAcknowledgement",
        "path": "/problemAcknowledgement/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "ackProblem": {
                "name": "ackProblem",
                "type": "array",
                "description": "The problems that were acknowledged, populated in the output to this task",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {}
                }
              },
              "trackingRecord": {
                "name": "trackingRecord",
                "type": "object",
                "properties": {
                  "description": {
                    "name": "description",
                    "type": "string",
                    "description": "Describes the action being done, such as: ack, clear"
                  },
                  "characteristic": {
                    "name": "characteristic",
                    "type": "array",
                    "description": "A generic list of any type of elements. Used for vendor Extensions or loose element encapsulation from other namespaces",
                    "items": {
                      "name": "items",
                      "type": "object",
                      "properties": {
                        "id": {
                          "name": "id",
                          "type": "string",
                          "description": "Unique identifier of the characteristic"
                        },
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "Name of the characteristic"
                        },
                        "valueType": {
                          "name": "valueType",
                          "type": "string",
                          "description": "Data type of the value of the characteristic"
                        },
                        "characteristicRelationship": {
                          "name": "characteristicRelationship",
                          "type": "array",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "id": {
                                "name": "id",
                                "type": "string",
                                "description": "Unique identifier of the characteristic"
                              },
                              "relationshipType": {
                                "name": "relationshipType",
                                "type": "string",
                                "description": "The type of relationship"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "systemId": {
                    "name": "systemId",
                    "type": "string",
                    "description": "Describes the system Id from which the action was done"
                  },
                  "time": {
                    "name": "time",
                    "type": "string",
                    "description": "Describes the time at which the action was done",
                    "format": "date-time"
                  },
                  "user": {
                    "name": "user",
                    "type": "string",
                    "description": "Describes the user doing the action"
                  },
                  "id": {
                    "name": "id",
                    "type": "string",
                    "description": "Identifier of the TrackingRecord."
                  }
                }
              },
              "problem": {
                "name": "problem",
                "type": "array",
                "description": "The problems to be acknowledged, relevant in the input to this task",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ServiceProblemRef"
                }
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "State of the Problem Acknowledgement task (acknowledged, inProgress, terminatedWithError, done)"
              }
            }
          }
        }
      }
    }
  },
  "problemGroup": {
    "tableName": "ProblemGroup",
    "endpoints": [
      {
        "operationId": "listProblemGroup",
        "path": "/problemGroup",
        "method": "get"
      },
      {
        "operationId": "createProblemGroup",
        "path": "/problemGroup",
        "method": "post"
      },
      {
        "operationId": "retrieveProblemGroup",
        "path": "/problemGroup/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "childProblem": {
                "name": "childProblem",
                "type": "array",
                "description": "List of problems to be grouped under a parent problem",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {}
                }
              },
              "parentProblem": {
                "name": "parentProblem",
                "type": "object",
                "description": "Reference to ServiceProblemRef"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "State of the Problem Group task (acknowledged, inProgress, terminatedWithError, done)"
              }
            }
          }
        }
      }
    }
  },
  "problemUnacknowledgement": {
    "tableName": "ProblemUnacknowledgement",
    "endpoints": [
      {
        "operationId": "listProblemUnacknowledgement",
        "path": "/problemUnacknowledgement",
        "method": "get"
      },
      {
        "operationId": "createProblemUnacknowledgement",
        "path": "/problemUnacknowledgement",
        "method": "post"
      },
      {
        "operationId": "retrieveProblemUnacknowledgement",
        "path": "/problemUnacknowledgement/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "unackProblem": {
                "name": "unackProblem",
                "type": "array",
                "description": "The problems that were unacknowledged, populated in the output to this task",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {}
                }
              },
              "trackingRecord": {
                "name": "trackingRecord",
                "type": "object",
                "properties": {
                  "description": {
                    "name": "description",
                    "type": "string",
                    "description": "Describes the action being done, such as: ack, clear"
                  },
                  "characteristic": {
                    "name": "characteristic",
                    "type": "array",
                    "description": "A generic list of any type of elements. Used for vendor Extensions or loose element encapsulation from other namespaces",
                    "items": {
                      "name": "items",
                      "type": "object",
                      "properties": {
                        "id": {
                          "name": "id",
                          "type": "string",
                          "description": "Unique identifier of the characteristic"
                        },
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "Name of the characteristic"
                        },
                        "valueType": {
                          "name": "valueType",
                          "type": "string",
                          "description": "Data type of the value of the characteristic"
                        },
                        "characteristicRelationship": {
                          "name": "characteristicRelationship",
                          "type": "array",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "id": {
                                "name": "id",
                                "type": "string",
                                "description": "Unique identifier of the characteristic"
                              },
                              "relationshipType": {
                                "name": "relationshipType",
                                "type": "string",
                                "description": "The type of relationship"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "systemId": {
                    "name": "systemId",
                    "type": "string",
                    "description": "Describes the system Id from which the action was done"
                  },
                  "time": {
                    "name": "time",
                    "type": "string",
                    "description": "Describes the time at which the action was done",
                    "format": "date-time"
                  },
                  "user": {
                    "name": "user",
                    "type": "string",
                    "description": "Describes the user doing the action"
                  },
                  "id": {
                    "name": "id",
                    "type": "string",
                    "description": "Identifier of the TrackingRecord."
                  }
                }
              },
              "problem": {
                "name": "problem",
                "type": "array",
                "description": "The problems to be unacknowledged, relevant in the input to this task",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ServiceProblemRef"
                }
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "State of the Problem Unacknowledgement task (acknowledged, inProgress, terminatedWithError, done)"
              }
            }
          }
        }
      }
    }
  },
  "problemUngroup": {
    "tableName": "ProblemUngroup",
    "endpoints": [
      {
        "operationId": "listProblemUngroup",
        "path": "/problemUngroup",
        "method": "get"
      },
      {
        "operationId": "createProblemUngroup",
        "path": "/problemUngroup",
        "method": "post"
      },
      {
        "operationId": "retrieveProblemUngroup",
        "path": "/problemUngroup/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "childProblem": {
                "name": "childProblem",
                "type": "array",
                "description": "List of problems to be ungrouped from a parent problem",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {}
                }
              },
              "parentProblem": {
                "name": "parentProblem",
                "type": "object",
                "description": "Reference to ServiceProblemRef"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "State of the Problem Ungroup task (acknowledged, inProgress, terminatedWithError, done)"
              }
            }
          }
        }
      }
    }
  },
  "serviceProblemEventRecord": {
    "tableName": "ServiceProblemEventRecord",
    "endpoints": [
      {
        "operationId": "listServiceProblemEventRecord",
        "path": "/serviceProblemEventRecord",
        "method": "get"
      },
      {
        "operationId": "retrieveServiceProblemEventRecord",
        "path": "/serviceProblemEventRecord/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "eventTime": {
                "name": "eventTime",
                "type": "string",
                "description": "Time at which the event occurred",
                "format": "date-time"
              },
              "eventType": {
                "name": "eventType",
                "type": "string",
                "description": "Type of the recorded event"
              },
              "recordTime": {
                "name": "recordTime",
                "type": "string",
                "description": "Time at which the record was created",
                "format": "date-time"
              },
              "serviceProblem": {
                "name": "serviceProblem",
                "type": "object",
                "properties": {}
              },
              "notification": {
                "name": "notification",
                "type": "object",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                  },
                  "@baseType": {
                    "name": "@baseType",
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "changeRequest": {
    "tableName": "ChangeRequest",
    "endpoints": [
      {
        "operationId": "listChangeRequest",
        "path": "/changeRequest",
        "method": "get"
      },
      {
        "operationId": "createChangeRequest",
        "path": "/changeRequest",
        "method": "post"
      },
      {
        "operationId": "retrieveChangeRequest",
        "path": "/changeRequest/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteChangeRequest",
        "path": "/changeRequest/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchChangeRequest",
        "path": "/changeRequest/{id}",
        "method": "patch"
      }
    ]
  },
  "bucket": {
    "tableName": "Bucket",
    "endpoints": [
      {
        "operationId": "listBucket",
        "path": "/bucket",
        "method": "get"
      },
      {
        "operationId": "retrieveBucket",
        "path": "/bucket/{id}",
        "method": "get"
      }
    ]
  },
  "topupBalance": {
    "tableName": "TopupBalance",
    "endpoints": [
      {
        "operationId": "listTopupBalance",
        "path": "/topupBalance",
        "method": "get"
      },
      {
        "operationId": "createTopupBalance",
        "path": "/topupBalance",
        "method": "post"
      },
      {
        "operationId": "retrieveTopupBalance",
        "path": "/topupBalance/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTopupBalance",
        "path": "/topupBalance/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTopupBalance",
        "path": "/topupBalance/{id}",
        "method": "patch"
      }
    ]
  },
  "adjustBalance": {
    "tableName": "AdjustBalance",
    "endpoints": [
      {
        "operationId": "listAdjustBalance",
        "path": "/adjustBalance",
        "method": "get"
      },
      {
        "operationId": "createAdjustBalance",
        "path": "/adjustBalance",
        "method": "post"
      },
      {
        "operationId": "retrieveAdjustBalance",
        "path": "/adjustBalance/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteAdjustBalance",
        "path": "/adjustBalance/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchAdjustBalance",
        "path": "/adjustBalance/{id}",
        "method": "patch"
      }
    ]
  },
  "transferBalance": {
    "tableName": "TransferBalance",
    "endpoints": [
      {
        "operationId": "listTransferBalance",
        "path": "/transferBalance",
        "method": "get"
      },
      {
        "operationId": "createTransferBalance",
        "path": "/transferBalance",
        "method": "post"
      },
      {
        "operationId": "retrieveTransferBalance",
        "path": "/transferBalance/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTransferBalance",
        "path": "/transferBalance/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTransferBalance",
        "path": "/transferBalance/{id}",
        "method": "patch"
      }
    ]
  },
  "reserveBalance": {
    "tableName": "ReserveBalance",
    "endpoints": [
      {
        "operationId": "listReserveBalance",
        "path": "/reserveBalance",
        "method": "get"
      },
      {
        "operationId": "createReserveBalance",
        "path": "/reserveBalance",
        "method": "post"
      },
      {
        "operationId": "retrieveReserveBalance",
        "path": "/reserveBalance/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteReserveBalance",
        "path": "/reserveBalance/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchReserveBalance",
        "path": "/reserveBalance/{id}",
        "method": "patch"
      }
    ]
  },
  "accumulatedBalance": {
    "tableName": "AccumulatedBalance",
    "endpoints": [
      {
        "operationId": "listAccumulatedBalance",
        "path": "/accumulatedBalance",
        "method": "get"
      },
      {
        "operationId": "retrieveAccumulatedBalance",
        "path": "/accumulatedBalance/{id}",
        "method": "get"
      }
    ]
  },
  "balanceActionHistory": {
    "tableName": "BalanceActionHistory",
    "endpoints": [
      {
        "operationId": "listBalanceActionHistory",
        "path": "/balanceActionHistory",
        "method": "get"
      },
      {
        "operationId": "retrieveBalanceActionHistory",
        "path": "/balanceActionHistory/{id}",
        "method": "get"
      }
    ]
  },
  "resourceOrder": {
    "tableName": "ResourceOrder",
    "endpoints": [
      {
        "operationId": "listResourceOrder",
        "path": "/resourceOrder",
        "method": "get"
      },
      {
        "operationId": "createResourceOrder",
        "path": "/resourceOrder",
        "method": "post"
      },
      {
        "operationId": "retrieveResourceOrder",
        "path": "/resourceOrder/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteResourceOrder",
        "path": "/resourceOrder/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResourceOrder",
        "path": "/resourceOrder/{id}",
        "method": "patch"
      }
    ]
  },
  "cancelResourceOrder": {
    "tableName": "CancelResourceOrder",
    "endpoints": [
      {
        "operationId": "listCancelResourceOrder",
        "path": "/cancelResourceOrder",
        "method": "get"
      },
      {
        "operationId": "createCancelResourceOrder",
        "path": "/cancelResourceOrder",
        "method": "post"
      },
      {
        "operationId": "retrieveCancelResourceOrder",
        "path": "/cancelResourceOrder/{id}",
        "method": "get"
      }
    ]
  },
  "agreement": {
    "tableName": "Agreement",
    "endpoints": [
      {
        "operationId": "listAgreement",
        "path": "/agreement",
        "method": "get"
      },
      {
        "operationId": "createAgreement",
        "path": "/agreement",
        "method": "post"
      },
      {
        "operationId": "retrieveAgreement",
        "path": "/agreement/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteAgreement",
        "path": "/agreement/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchAgreement",
        "path": "/agreement/{id}",
        "method": "patch"
      }
    ]
  },
  "agreementSpecification": {
    "tableName": "AgreementSpecification",
    "endpoints": [
      {
        "operationId": "listAgreementSpecification",
        "path": "/agreementSpecification",
        "method": "get"
      },
      {
        "operationId": "createAgreementSpecification",
        "path": "/agreementSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveAgreementSpecification",
        "path": "/agreementSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteAgreementSpecification",
        "path": "/agreementSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchAgreementSpecification",
        "path": "/agreementSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "threshold": {
    "tableName": "Threshold",
    "endpoints": [
      {
        "operationId": "thresholdFind",
        "path": "/threshold",
        "method": "get"
      },
      {
        "operationId": "thresholdCreate",
        "path": "/threshold",
        "method": "post"
      },
      {
        "operationId": "thresholdGet",
        "path": "/threshold/{thresholdId}",
        "method": "get"
      },
      {
        "operationId": "thresholdDelete",
        "path": "/threshold/{thresholdId}",
        "method": "delete"
      },
      {
        "operationId": "thresholdPatch",
        "path": "/threshold/{thresholdId}",
        "method": "patch"
      }
    ]
  },
  "thresholdJob": {
    "tableName": "ThresholdJob",
    "endpoints": [
      {
        "operationId": "thresholdJobSuspend",
        "path": "/threshold/{thresholdId}/suspend",
        "method": "post"
      },
      {
        "operationId": "thresholdJobResume",
        "path": "/threshold/{thresholdId}/resume",
        "method": "post"
      },
      {
        "operationId": "thresholdJobFind",
        "path": "/thresholdJob",
        "method": "get"
      },
      {
        "operationId": "thresholdJobCreate",
        "path": "/thresholdJob",
        "method": "post"
      },
      {
        "operationId": "thresholdJobGet",
        "path": "/thresholdJob/{thresholdJobId}",
        "method": "get"
      },
      {
        "operationId": "thresholdJobDelete",
        "path": "/thresholdJob/{thresholdJobId}",
        "method": "delete"
      },
      {
        "operationId": "thresholdJobpatch",
        "path": "/thresholdJob/{thresholdJobId}",
        "method": "patch"
      }
    ]
  },
  "notification": {
    "tableName": "Notification",
    "endpoints": [
      {
        "operationId": "thresholdCreateNotification",
        "path": "/listener/thresholdCreateNotification",
        "method": "post"
      },
      {
        "operationId": "thresholdChangeNotification",
        "path": "/listener/thresholdChangeNotification",
        "method": "post"
      },
      {
        "operationId": "thresholdRuleCreateNotification",
        "path": "/listener/thresholdRuleCreateNotification",
        "method": "post"
      },
      {
        "operationId": "thresholdRuleChangedNotification",
        "path": "/listener/thresholdRuleChangedNotification",
        "method": "post"
      },
      {
        "operationId": "thresholdJobCreateNotification",
        "path": "/listener/thresholdJobCreateNotification",
        "method": "post"
      },
      {
        "operationId": "thresholdJobChangedNotification",
        "path": "/thresholdJobChangedNotification",
        "method": "post"
      },
      {
        "operationId": "thresholdJobSuspendNotification",
        "path": "/thresholdJobSuspendNotification",
        "method": "post"
      },
      {
        "operationId": "thresholdJobResumeNotification",
        "path": "/thresholdJobResumeNotification",
        "method": "post"
      }
    ]
  },
  "thresholdRule": {
    "tableName": "ThresholdRule",
    "endpoints": [
      {
        "operationId": "thresholdRuleFind",
        "path": "/thresholdRule",
        "method": "get"
      },
      {
        "operationId": "thresholdRuleCreate",
        "path": "/thresholdRule",
        "method": "post"
      },
      {
        "operationId": "thresholdRuleGet",
        "path": "/thresholdRule/{thresholdRuleId}",
        "method": "get"
      },
      {
        "operationId": "thresholdRuleDelete",
        "path": "/thresholdRule/{thresholdRuleId}",
        "method": "delete"
      },
      {
        "operationId": "thresholdRulePatch",
        "path": "/thresholdRule/{thresholdRuleId}",
        "method": "patch"
      }
    ]
  },
  "quote": {
    "tableName": "Quote",
    "endpoints": [
      {
        "operationId": "listQuote",
        "path": "/quote",
        "method": "get"
      },
      {
        "operationId": "createQuote",
        "path": "/quote",
        "method": "post"
      },
      {
        "operationId": "retrieveQuote",
        "path": "/quote/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteQuote",
        "path": "/quote/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchQuote",
        "path": "/quote/{id}",
        "method": "patch"
      }
    ]
  },
  "appointment": {
    "tableName": "Appointment",
    "endpoints": [
      {
        "operationId": "listAppointment",
        "path": "/appointment",
        "method": "get"
      },
      {
        "operationId": "createAppointment",
        "path": "/appointment",
        "method": "post"
      },
      {
        "operationId": "retrieveAppointment",
        "path": "/appointment/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteAppointment",
        "path": "/appointment/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchAppointment",
        "path": "/appointment/{id}",
        "method": "patch"
      }
    ]
  },
  "searchTimeSlot": {
    "tableName": "SearchTimeSlot",
    "endpoints": [
      {
        "operationId": "listSearchTimeSlot",
        "path": "/searchTimeSlot",
        "method": "get"
      },
      {
        "operationId": "createSearchTimeSlot",
        "path": "/searchTimeSlot",
        "method": "post"
      },
      {
        "operationId": "retrieveSearchTimeSlot",
        "path": "/searchTimeSlot/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteSearchTimeSlot",
        "path": "/searchTimeSlot/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchSearchTimeSlot",
        "path": "/searchTimeSlot/{id}",
        "method": "patch"
      }
    ]
  },
  "checkServiceQualification": {
    "tableName": "CheckServiceQualification",
    "endpoints": [
      {
        "operationId": "listCheckServiceQualification",
        "path": "/checkServiceQualification",
        "method": "get"
      },
      {
        "operationId": "createCheckServiceQualification",
        "path": "/checkServiceQualification",
        "method": "post"
      },
      {
        "operationId": "retrieveCheckServiceQualification",
        "path": "/checkServiceQualification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteCheckServiceQualification",
        "path": "/checkServiceQualification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchCheckServiceQualification",
        "path": "/checkServiceQualification/{id}",
        "method": "patch"
      }
    ]
  },
  "queryServiceQualification": {
    "tableName": "QueryServiceQualification",
    "endpoints": [
      {
        "operationId": "listQueryServiceQualification",
        "path": "/queryServiceQualification",
        "method": "get"
      },
      {
        "operationId": "createQueryServiceQualification",
        "path": "/queryServiceQualification",
        "method": "post"
      },
      {
        "operationId": "retrieveQueryServiceQualification",
        "path": "/queryServiceQualification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteQueryServiceQualification",
        "path": "/queryServiceQualification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchQueryServiceQualification",
        "path": "/queryServiceQualification/{id}",
        "method": "patch"
      }
    ]
  },
  "partyPrivacyAgreement": {
    "tableName": "PartyPrivacyAgreement",
    "endpoints": [
      {
        "operationId": "listPartyPrivacyAgreement",
        "path": "/partyPrivacyAgreement",
        "method": "get"
      },
      {
        "operationId": "createPartyPrivacyAgreement",
        "path": "/partyPrivacyAgreement",
        "method": "post"
      },
      {
        "operationId": "retrievePartyPrivacyAgreement",
        "path": "/partyPrivacyAgreement/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartyPrivacyAgreement",
        "path": "/partyPrivacyAgreement/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPartyPrivacyAgreement",
        "path": "/partyPrivacyAgreement/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "A human-readable name for the agreement"
              },
              "agreementType": {
                "name": "agreementType",
                "type": "string",
                "description": "The type of the agreement. For example commercial"
              },
              "agreementItem": {
                "name": "agreementItem",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the Agreement item (generally it is a sequence number 01, 02, 03, ...)"
                    },
                    "termOrCondition": {
                      "name": "termOrCondition",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "Text that explains the term or condition of the agreement."
                          },
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique number assigned for reference."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                            "properties": {
                              "startDateTime": {
                                "name": "startDateTime",
                                "type": "string",
                                "description": "Start of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              },
                              "endDateTime": {
                                "name": "endDateTime",
                                "type": "string",
                                "description": "End of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "engagedParty": {
                "name": "engagedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to PartyRefOrPartyRoleRef"
                }
              },
              "agreementPeriod": {
                "name": "agreementPeriod",
                "type": "object",
                "description": "Reference to TimePeriod"
              },
              "completionDate": {
                "name": "completionDate",
                "type": "object",
                "description": "Reference to TimePeriod"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Narrative that explains the agreement and details about the it , such as why the agreement is taking place."
              },
              "relatedDocument": {
                "name": "relatedDocument",
                "type": "array",
                "description": "Documents related to the agreement, suc as signed off contract",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "document": {
                      "name": "document",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "document_variant_0",
                          "type": "object",
                          "properties": {
                            "attachment": {
                              "name": "attachment",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "union",
                                "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                "oneOf": [
                                  {
                                    "name": "items_variant_0",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "name": "name",
                                        "type": "string",
                                        "description": "The name of the attachment"
                                      },
                                      "description": {
                                        "name": "description",
                                        "type": "string",
                                        "description": "A narrative text describing the content of the attachment"
                                      },
                                      "url": {
                                        "name": "url",
                                        "type": "string",
                                        "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                      },
                                      "content": {
                                        "name": "content",
                                        "type": "string",
                                        "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                        "format": "base64"
                                      },
                                      "size": {
                                        "name": "size",
                                        "type": "object",
                                        "description": "An amount in a given unit",
                                        "properties": {
                                          "amount": {
                                            "name": "amount",
                                            "type": "number",
                                            "description": "Numeric value in a given unit",
                                            "format": "float"
                                          },
                                          "units": {
                                            "name": "units",
                                            "type": "string",
                                            "description": "Unit"
                                          }
                                        }
                                      },
                                      "validFor": {
                                        "name": "validFor",
                                        "type": "object",
                                        "description": "Reference to TimePeriod"
                                      },
                                      "attachmentType": {
                                        "name": "attachmentType",
                                        "type": "string",
                                        "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                      },
                                      "mimeType": {
                                        "name": "mimeType",
                                        "type": "string",
                                        "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                      }
                                    }
                                  },
                                  {
                                    "name": "items_variant_1",
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "name": "description",
                                        "type": "string",
                                        "description": "A narrative text describing the content of the attachment"
                                      },
                                      "url": {
                                        "name": "url",
                                        "type": "string",
                                        "description": "Link to the attachment media/content"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "category": {
                              "name": "category",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "version": {
                                    "name": "version",
                                    "type": "string",
                                    "description": "Version of the category"
                                  }
                                }
                              }
                            },
                            "characteristic": {
                              "name": "characteristic",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "creationDate": {
                              "name": "creationDate",
                              "type": "string",
                              "description": "The date and time the document was created. A date and time formatted in compliance with the ISO8601 standard must be used.",
                              "format": "date-time"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "free-text description of the document"
                            },
                            "documentRelationship": {
                              "name": "documentRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "documentSpecification": {
                              "name": "documentSpecification",
                              "type": "object",
                              "properties": {
                                "URL": {
                                  "name": "URL",
                                  "type": "string",
                                  "description": "URL of the Document Specification"
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "a String. Name of the DocumentSpecification"
                                },
                                "version": {
                                  "name": "version",
                                  "type": "string",
                                  "description": "A string, a version of the DocumentSpecification."
                                },
                                "id": {
                                  "name": "id",
                                  "type": "string",
                                  "description": "Indentifier of the DocumentSpecification"
                                }
                              }
                            },
                            "lastUpdate": {
                              "name": "lastUpdate",
                              "type": "string",
                              "description": "The date and time the document was last modified. A date and time formatted in compliance with the ISO8601 standard must be used.",
                              "format": "date-time"
                            },
                            "lifecycleState": {
                              "name": "lifecycleState",
                              "type": "string",
                              "description": "The life cycle state of the document."
                            },
                            "relatedEntity": {
                              "name": "relatedEntity",
                              "type": "object",
                              "properties": {
                                "role": {
                                  "name": "role",
                                  "type": "string"
                                },
                                "entity": {
                                  "name": "entity",
                                  "type": "object",
                                  "description": "Reference to EntityRef"
                                }
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                              }
                            },
                            "documentType": {
                              "name": "documentType",
                              "type": "string",
                              "description": "Name of the document type"
                            },
                            "version": {
                              "name": "version",
                              "type": "string",
                              "description": "A particular form or variety of an artefact that is different from others or from the original. The form represents differences in properties that characterize an artefact, that are not enough to warrant creating a new artefact"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A string used to give a name to the document"
                            }
                          }
                        },
                        {
                          "name": "document_variant_1",
                          "type": "object",
                          "description": "Reference to DocumentRef"
                        }
                      ]
                    }
                  }
                }
              },
              "initialDate": {
                "name": "initialDate",
                "type": "string",
                "description": "Date at which the agreement was initialized",
                "format": "date-time"
              },
              "statementOfIntent": {
                "name": "statementOfIntent",
                "type": "string",
                "description": "An overview and goals of the Agreement"
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "The current status of the agreement. Typical values are: in process, approved and rejected"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "A string identifying the version of the agreement"
              },
              "agreementSpecification": {
                "name": "agreementSpecification",
                "type": "object",
                "properties": {
                  "description": {
                    "name": "description",
                    "type": "string",
                    "description": "A narrative that explains in detail what the agreement specification is about."
                  },
                  "name": {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the agreement specification"
                  }
                }
              },
              "agreementAuthorization": {
                "name": "agreementAuthorization",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "The date associated with the authorization state.",
                      "format": "date-time"
                    },
                    "signatureRepresentation": {
                      "name": "signatureRepresentation",
                      "type": "string",
                      "description": "Indication that represents whether the signature is a physical paper signature or a digital signature."
                    },
                    "state": {
                      "name": "state",
                      "type": "string",
                      "description": "Current status of the authorization, for example in process, approved, rejected."
                    }
                  }
                }
              },
              "characteristic": {
                "name": "characteristic",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to Characteristic"
                }
              },
              "agreementRelationship": {
                "name": "agreementRelationship",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the related agreement"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the agreement"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship such as containment, substitution, dependency, exclusivity"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "partyPrivacyProfile": {
                "name": "partyPrivacyProfile",
                "type": "array",
                "description": "The privacy profiles that are the subject of the agreement",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to Party Privacy Profile resource",
                  "properties": {}
                }
              },
              "partyPrivacyProfileCharacteristic": {
                "name": "partyPrivacyProfileCharacteristic",
                "type": "array",
                "description": "A list of (typically) high criticality characteristics whose chosen privacy rules are included in the agreement",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "characterisitc": {
                      "name": "characterisitc",
                      "type": "object",
                      "description": "Reference to Characteristic"
                    },
                    "relatedParty": {
                      "name": "relatedParty",
                      "type": "array",
                      "description": "A list of parties to which the allowed use of the characteristic applies.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                      }
                    },
                    "privacyUsagePurpose": {
                      "name": "privacyUsagePurpose",
                      "type": "string",
                      "description": "Defines the purpose authorized or refused for the characteristic (e.g. ADMIN, INFORMATION, MARKETING, RESEARCH, etc."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "partyPrivacyProfile": {
    "tableName": "PartyPrivacyProfile",
    "endpoints": [
      {
        "operationId": "listPartyPrivacyProfile",
        "path": "/partyPrivacyProfile",
        "method": "get"
      },
      {
        "operationId": "createPartyPrivacyProfile",
        "path": "/partyPrivacyProfile",
        "method": "post"
      },
      {
        "operationId": "retrievePartyPrivacyProfile",
        "path": "/partyPrivacyProfile/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartyPrivacyProfile",
        "path": "/partyPrivacyProfile/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPartyPrivacyProfile",
        "path": "/partyPrivacyProfile/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "applicableForParty": {
                "name": "applicableForParty",
                "type": "object",
                "properties": {
                  "role": {
                    "name": "role",
                    "type": "string",
                    "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                  },
                  "partyOrPartyRole": {
                    "name": "partyOrPartyRole",
                    "type": "union",
                    "description": "",
                    "oneOf": [
                      {
                        "name": "partyOrPartyRole_variant_0",
                        "type": "object",
                        "description": "A Party reference",
                        "properties": {}
                      },
                      {
                        "name": "partyOrPartyRole_variant_1",
                        "type": "object",
                        "properties": {
                          "partyId": {
                            "name": "partyId",
                            "type": "string",
                            "description": "The identifier of the engaged party that is linked to the PartyRole object."
                          },
                          "partyName": {
                            "name": "partyName",
                            "type": "string",
                            "description": "The name of the engaged party that is linked to the PartyRole object."
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "agreement": {
                "name": "agreement",
                "type": "object",
                "description": "Reference to Party Privacy Agreement resource",
                "properties": {}
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "The date on which the PartyPrivacyProfile was created",
                "format": "date-time"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time when the PartyPrivacyProfile was last updated",
                "format": "date-time"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the privacy profile"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the privacy profile"
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "The status of this profile (for example: created, terminated, etc.)"
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "partyPrivacyProfileSpecification": {
                "name": "partyPrivacyProfileSpecification",
                "type": "object",
                "description": "Reference to Party Privacy Specification resource",
                "properties": {}
              },
              "partyPrivacyProfileCharacteristic": {
                "name": "partyPrivacyProfileCharacteristic",
                "type": "array",
                "description": "List of characteristics of the privacy profile",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "characterisitc": {
                      "name": "characterisitc",
                      "type": "object",
                      "properties": {
                        "id": {
                          "name": "id",
                          "type": "string",
                          "description": "Unique identifier of the characteristic"
                        },
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "Name of the characteristic"
                        },
                        "valueType": {
                          "name": "valueType",
                          "type": "string",
                          "description": "Data type of the value of the characteristic"
                        },
                        "characteristicRelationship": {
                          "name": "characteristicRelationship",
                          "type": "array",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "id": {
                                "name": "id",
                                "type": "string",
                                "description": "Unique identifier of the characteristic"
                              },
                              "relationshipType": {
                                "name": "relationshipType",
                                "type": "string",
                                "description": "The type of relationship"
                              }
                            }
                          }
                        }
                      }
                    },
                    "relatedParty": {
                      "name": "relatedParty",
                      "type": "array",
                      "description": "A list of parties to which the allowed use of the characteristic applies.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                      }
                    },
                    "privacyUsagePurpose": {
                      "name": "privacyUsagePurpose",
                      "type": "string",
                      "description": "Defines the purpose authorized or refused for the characteristic (e.g. ADMIN, INFORMATION, MARKETING, RESEARCH, etc."
                    }
                  }
                }
              },
              "agreedByParty": {
                "name": "agreedByParty",
                "type": "object",
                "description": "Reference to RelatedPartyRefOrPartyRoleRef"
              }
            }
          }
        }
      }
    }
  },
  "partyPrivacyProfileSpecification": {
    "tableName": "PartyPrivacyProfileSpecification",
    "endpoints": [
      {
        "operationId": "listPartyPrivacyProfileSpecification",
        "path": "/partyPrivacyProfileSpecification",
        "method": "get"
      },
      {
        "operationId": "createPartyPrivacyProfileSpecification",
        "path": "/partyPrivacyProfileSpecification",
        "method": "post"
      },
      {
        "operationId": "retrievePartyPrivacyProfileSpecification",
        "path": "/partyPrivacyProfileSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePartyPrivacyProfileSpecification",
        "path": "/partyPrivacyProfileSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPartyPrivacyProfileSpecification",
        "path": "/partyPrivacyProfileSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the specification"
              },
              "applicableRole": {
                "name": "applicableRole",
                "type": "array",
                "description": "A list of roles to which this specification can apply. For example: Shop Agent, Call Center Agent.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "agreementSpecification": {
                      "name": "agreementSpecification",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "A narrative that explains in detail what the agreement specification is about."
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the agreement specification"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time when the specification was last updated",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Lifecycle status of the specification (for example: In Design, Active, Rejected, Retired)"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the specification"
              },
              "productOffering": {
                "name": "productOffering",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the product offering"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "List of parties or party roles involved in the definition or management of the specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "The version of the specification, in case it is desired to maintain multiple versions of profile specifications"
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics of the specification, whose values would typically be supplied when the profile is instantiated",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "Description of the characteristic"
                    },
                    "criticalityLevel": {
                      "name": "criticalityLevel",
                      "type": "string",
                      "description": "Level of criticality for this characteristic of personal identifiable information (e.g. in terms of the damage if this item was breached), such as low, medium, high."
                    },
                    "privacyUsagePurpose": {
                      "name": "privacyUsagePurpose",
                      "type": "string",
                      "description": "Defines the purpose authorized or refused for the characteristic (e.g. ADMIN, INFORMATION, MARKETING, RESEARCH)."
                    },
                    "privacyType": {
                      "name": "privacyType",
                      "type": "string",
                      "description": "Type of privacy (e.g. Internal Purpose, External Purpose, Internal Retention, External Retention)"
                    },
                    "allowedRole": {
                      "name": "allowedRole",
                      "type": "array",
                      "description": "A list of roles in the organization who are allowed access to this characteristic",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to PartyRoleSpecificationRef"
                      }
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "ackAlarm": {
    "tableName": "AckAlarm",
    "endpoints": [
      {
        "operationId": "listAckAlarm",
        "path": "/ackAlarm",
        "method": "get"
      },
      {
        "operationId": "createAckAlarm",
        "path": "/ackAlarm",
        "method": "post"
      },
      {
        "operationId": "retrieveAckAlarm",
        "path": "/ackAlarm/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Current state of the operation task",
                "enum": [
                  "acknowledged",
                  "terminatedWithError",
                  "inProgress",
                  "done",
                  "cancel",
                  "canceled"
                ]
              },
              "ackSystemId": {
                "name": "ackSystemId",
                "type": "string",
                "description": "Name of the acknowledging system"
              },
              "ackTime": {
                "name": "ackTime",
                "type": "string",
                "description": "Time of the acknowledgement",
                "format": "date-time"
              },
              "ackUserId": {
                "name": "ackUserId",
                "type": "string",
                "description": "Name of the acknowledging user"
              },
              "ackedAlarm": {
                "name": "ackedAlarm",
                "type": "array",
                "description": "The successfully acknowledged alarms",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "An alarm defined by reference or value. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Alarm entity and not the AlarmRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "externalAlarmId": {
                          "name": "externalAlarmId",
                          "type": "string",
                          "description": "An identifier of the alarm in the source system."
                        },
                        "state": {
                          "name": "state",
                          "type": "string",
                          "description": "Defines the alarm state during its life cycle (raised, updated, cleared).",
                          "enum": [
                            "raised",
                            "updated",
                            "cleared"
                          ]
                        },
                        "alarmType": {
                          "name": "alarmType",
                          "type": "string",
                          "description": "Categorizes the alarm (X.733 8.1.1, 3GPP TS 32.111-2 Annex A)",
                          "enum": [
                            "communicationsAlarm",
                            "processingErrorAlarm",
                            "environmentalAlarm",
                            "qualityOfServiceAlarm",
                            "equipmentAlarm",
                            "integrityViolation",
                            "operationalViolation",
                            "physicalViolation",
                            "securityService",
                            "mechanismViolation",
                            "timeDomainViolation"
                          ]
                        },
                        "perceivedSeverity": {
                          "name": "perceivedSeverity",
                          "type": "string",
                          "description": "Lists the possible severities that can be allocated to an Alarm. The values are consistent with ITU-T Recommendation X.733.\nOnce an alarm has been cleared, its perceived severity is set to 'cleared' and can no longer be set.",
                          "enum": [
                            "critical",
                            "major",
                            "minor",
                            "warning",
                            "indeterminate",
                            "cleared"
                          ]
                        },
                        "probableCause": {
                          "name": "probableCause",
                          "type": "string",
                          "description": "Provides the probable cause of the alarm. The values are consistent with ITU-T Recommendation X.733 or 3GPP TS 32.111-2 Annex B."
                        },
                        "specificProblem": {
                          "name": "specificProblem",
                          "type": "string",
                          "description": "Provides more specific information about the alarm."
                        },
                        "alarmedObjectType": {
                          "name": "alarmedObjectType",
                          "type": "string",
                          "description": "The type (class) of the managed object associated with the event."
                        },
                        "alarmedObject": {
                          "name": "alarmedObject",
                          "type": "object",
                          "description": "Reference to object which affected by Alarm (AlarmedObject).",
                          "properties": {}
                        },
                        "reportingSystemId": {
                          "name": "reportingSystemId",
                          "type": "string",
                          "description": "Reporting system identity."
                        },
                        "sourceSystemId": {
                          "name": "sourceSystemId",
                          "type": "string",
                          "description": "Source system identity."
                        },
                        "alarmDetails": {
                          "name": "alarmDetails",
                          "type": "string",
                          "description": "Contains further information on the alarm."
                        },
                        "alarmRaisedTime": {
                          "name": "alarmRaisedTime",
                          "type": "string",
                          "description": "Indicates the time (as a date + time) at which the alarm occurred at its source.",
                          "format": "date-time"
                        },
                        "alarmChangedTime": {
                          "name": "alarmChangedTime",
                          "type": "string",
                          "description": "Indicates the last date and time when the alarm is changed on the alarm-owning system. Any change to the alarm whether coming from the alarmed resource, or triggered by a change from the client is changing this time.",
                          "format": "date-time"
                        },
                        "alarmClearedTime": {
                          "name": "alarmClearedTime",
                          "type": "string",
                          "description": "Indicates the time (as a date + time) at which the alarm is cleared at the source. ",
                          "format": "date-time"
                        },
                        "alarmReportingTime": {
                          "name": "alarmReportingTime",
                          "type": "string",
                          "description": "Indicates the time (as a date + time) at which the alarm was reported by the owning OSS. It might be different from the alarmRaisedTime. For instance, if the alarm list is maintained by an EMS, the alarmRaisedtime would be the time the alarm\n  was detected by the NE, while the alarmReportingTime would be the time this alarm was stored in the alarm list of the EMS.",
                          "format": "date-time"
                        },
                        "ackState": {
                          "name": "ackState",
                          "type": "string",
                          "description": "Provides the Acknowledgement State of the alarm (unacknowledged, acknowledged).",
                          "enum": [
                            "unacknowledged",
                            "acknowledged"
                          ]
                        },
                        "ackSystemId": {
                          "name": "ackSystemId",
                          "type": "string",
                          "description": "Provides the name of the system that last changed the ackState of an alarm, i.e. acknowledged or unacknowledged the alarm."
                        },
                        "ackUserId": {
                          "name": "ackUserId",
                          "type": "string",
                          "description": "Provides the id of the user who has last changed the ack state of the alarm, i.e. acknowledged or unacknowledged the alarm."
                        },
                        "affectedService": {
                          "name": "affectedService",
                          "type": "array",
                          "description": "Provides list of affected services.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Service reference, for when Service is used by other entities.",
                            "properties": {}
                          }
                        },
                        "alarmEscalation": {
                          "name": "alarmEscalation",
                          "type": "boolean",
                          "description": "Indicates if this alarm has been escalated or not. "
                        },
                        "clearSystemId": {
                          "name": "clearSystemId",
                          "type": "string",
                          "description": "Provides the id of the system where the user who invoked the alarmCleared operation is located. "
                        },
                        "clearUserId": {
                          "name": "clearUserId",
                          "type": "string",
                          "description": "Provides the id of the user who invoked the alarmCleared operation"
                        },
                        "comment": {
                          "name": "comment",
                          "type": "array",
                          "description": "Provides list of Comments regards Alarm.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "userId": {
                                "name": "userId",
                                "type": "string",
                                "description": "Indicates the user commenting the alarm."
                              },
                              "systemId": {
                                "name": "systemId",
                                "type": "string",
                                "description": "Indicates the system identifier on which the client set the comment."
                              },
                              "time": {
                                "name": "time",
                                "type": "string",
                                "description": "Indicates the time commenting the alarm",
                                "format": "date-time"
                              },
                              "comment": {
                                "name": "comment",
                                "type": "string",
                                "description": "Indicates the text of the comment."
                              }
                            }
                          }
                        },
                        "correlatedAlarm": {
                          "name": "correlatedAlarm",
                          "type": "array",
                          "description": "Provides list of correlated Alarms.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "crossedThresholdInformation": {
                          "name": "crossedThresholdInformation",
                          "type": "object",
                          "description": "Identifies the details of the threshold that has been crossed.",
                          "properties": {
                            "threshold": {
                              "name": "threshold",
                              "type": "object",
                              "properties": {}
                            },
                            "direction": {
                              "name": "direction",
                              "type": "string",
                              "description": "Indicates the threshold crossing direction: up or down."
                            },
                            "granularity": {
                              "name": "granularity",
                              "type": "string",
                              "description": "Indicates the granularity at which the indicator is evaluated for threshold crossing"
                            },
                            "indicatorName": {
                              "name": "indicatorName",
                              "type": "string",
                              "description": "Indicates the name of indicator which crossed the threshold."
                            },
                            "indicatorUnit": {
                              "name": "indicatorUnit",
                              "type": "string",
                              "description": "Indicates the unit of the measurement of the indicator corresponding to the threshold that has been crossed."
                            },
                            "observedValue": {
                              "name": "observedValue",
                              "type": "string",
                              "description": "Indicates the value of the indicator which crossed the threshold."
                            },
                            "thresholdCrossingDescription": {
                              "name": "thresholdCrossingDescription",
                              "type": "string",
                              "description": "Indicates further information on the threshold crossing alarm."
                            }
                          }
                        },
                        "isRootCause": {
                          "name": "isRootCause",
                          "type": "boolean",
                          "description": "Indicates whether the alarm is a root cause alarm.. "
                        },
                        "parentAlarm": {
                          "name": "parentAlarm",
                          "type": "array",
                          "description": "Provides list of parrent Alarms.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Reference to AlarmRef"
                          }
                        },
                        "plannedOutageIndicator": {
                          "name": "plannedOutageIndicator",
                          "type": "string",
                          "description": "Indicates that the Managed Object (related to this alarm) is in planned outage (in planned maintenance, or out-of-service). ",
                          "enum": [
                            "InService",
                            "OutOfService"
                          ]
                        },
                        "proposedRepairedActions": {
                          "name": "proposedRepairedActions",
                          "type": "string",
                          "description": "Indicates proposed repair actions, if known to the system emitting the alarm."
                        },
                        "serviceAffecting": {
                          "name": "serviceAffecting",
                          "type": "boolean",
                          "description": "Indicates whether the alarm affects service or not."
                        },
                        "place": {
                          "name": "place",
                          "type": "array",
                          "description": "List of related places, which are affected by Alarm.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "role": {
                                "name": "role",
                                "type": "string"
                              },
                              "relatedPlace": {
                                "name": "relatedPlace",
                                "type": "object",
                                "properties": {
                                  "externalIdentifier": {
                                    "name": "externalIdentifier",
                                    "type": "array",
                                    "description": "Collection of external identifiers",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "owner": {
                                          "name": "owner",
                                          "type": "string",
                                          "description": "Name of the external system that owns the entity."
                                        },
                                        "externalIdentifierType": {
                                          "name": "externalIdentifierType",
                                          "type": "string",
                                          "description": "Type of the identification, typically would be the type of the entity within the external system"
                                        },
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "identification of the entity within the external system."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "description": "Reference to AlarmRef"
                    }
                  ]
                }
              },
              "alarmPattern": {
                "name": "alarmPattern",
                "type": "array",
                "description": "Alarm patterns to match target alarms. An alarm will match if all of the attributes in any of the patterns compare equal to those attributes of the alarm.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to AlarmRefOrValue"
                }
              }
            }
          }
        }
      }
    }
  },
  "clearAlarm": {
    "tableName": "ClearAlarm",
    "endpoints": [
      {
        "operationId": "listClearAlarm",
        "path": "/clearAlarm",
        "method": "get"
      },
      {
        "operationId": "createClearAlarm",
        "path": "/clearAlarm",
        "method": "post"
      },
      {
        "operationId": "retrieveClearAlarm",
        "path": "/clearAlarm/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Current state of the operation task",
                "enum": [
                  "acknowledged",
                  "terminatedWithError",
                  "inProgress",
                  "done",
                  "cancel",
                  "canceled"
                ]
              },
              "clearSystemId": {
                "name": "clearSystemId",
                "type": "string",
                "description": "Name of the clearing system"
              },
              "clearUserId": {
                "name": "clearUserId",
                "type": "string",
                "description": "Name of the clearing user"
              },
              "alarmClearedTime": {
                "name": "alarmClearedTime",
                "type": "string",
                "description": "Time of the alarm clearing",
                "format": "date-time"
              },
              "alarmPattern": {
                "name": "alarmPattern",
                "type": "array",
                "description": "Alarm patterns to match target alarms. An alarm will match if all of the sttributes in any of the patterns compare equal to those attributes of the alarm.",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "An alarm defined by reference or value. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Alarm entity and not the AlarmRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "externalAlarmId": {
                          "name": "externalAlarmId",
                          "type": "string",
                          "description": "An identifier of the alarm in the source system."
                        },
                        "state": {
                          "name": "state",
                          "type": "string",
                          "description": "Defines the alarm state during its life cycle (raised, updated, cleared).",
                          "enum": [
                            "raised",
                            "updated",
                            "cleared"
                          ]
                        },
                        "alarmType": {
                          "name": "alarmType",
                          "type": "string",
                          "description": "Categorizes the alarm (X.733 8.1.1, 3GPP TS 32.111-2 Annex A)",
                          "enum": [
                            "communicationsAlarm",
                            "processingErrorAlarm",
                            "environmentalAlarm",
                            "qualityOfServiceAlarm",
                            "equipmentAlarm",
                            "integrityViolation",
                            "operationalViolation",
                            "physicalViolation",
                            "securityService",
                            "mechanismViolation",
                            "timeDomainViolation"
                          ]
                        },
                        "perceivedSeverity": {
                          "name": "perceivedSeverity",
                          "type": "string",
                          "description": "Lists the possible severities that can be allocated to an Alarm. The values are consistent with ITU-T Recommendation X.733.\nOnce an alarm has been cleared, its perceived severity is set to 'cleared' and can no longer be set.",
                          "enum": [
                            "critical",
                            "major",
                            "minor",
                            "warning",
                            "indeterminate",
                            "cleared"
                          ]
                        },
                        "probableCause": {
                          "name": "probableCause",
                          "type": "string",
                          "description": "Provides the probable cause of the alarm. The values are consistent with ITU-T Recommendation X.733 or 3GPP TS 32.111-2 Annex B."
                        },
                        "specificProblem": {
                          "name": "specificProblem",
                          "type": "string",
                          "description": "Provides more specific information about the alarm."
                        },
                        "alarmedObjectType": {
                          "name": "alarmedObjectType",
                          "type": "string",
                          "description": "The type (class) of the managed object associated with the event."
                        },
                        "alarmedObject": {
                          "name": "alarmedObject",
                          "type": "object",
                          "description": "Reference to object which affected by Alarm (AlarmedObject).",
                          "properties": {}
                        },
                        "reportingSystemId": {
                          "name": "reportingSystemId",
                          "type": "string",
                          "description": "Reporting system identity."
                        },
                        "sourceSystemId": {
                          "name": "sourceSystemId",
                          "type": "string",
                          "description": "Source system identity."
                        },
                        "alarmDetails": {
                          "name": "alarmDetails",
                          "type": "string",
                          "description": "Contains further information on the alarm."
                        },
                        "alarmRaisedTime": {
                          "name": "alarmRaisedTime",
                          "type": "string",
                          "description": "Indicates the time (as a date + time) at which the alarm occurred at its source.",
                          "format": "date-time"
                        },
                        "alarmChangedTime": {
                          "name": "alarmChangedTime",
                          "type": "string",
                          "description": "Indicates the last date and time when the alarm is changed on the alarm-owning system. Any change to the alarm whether coming from the alarmed resource, or triggered by a change from the client is changing this time.",
                          "format": "date-time"
                        },
                        "alarmClearedTime": {
                          "name": "alarmClearedTime",
                          "type": "string",
                          "description": "Indicates the time (as a date + time) at which the alarm is cleared at the source. ",
                          "format": "date-time"
                        },
                        "alarmReportingTime": {
                          "name": "alarmReportingTime",
                          "type": "string",
                          "description": "Indicates the time (as a date + time) at which the alarm was reported by the owning OSS. It might be different from the alarmRaisedTime. For instance, if the alarm list is maintained by an EMS, the alarmRaisedtime would be the time the alarm\n  was detected by the NE, while the alarmReportingTime would be the time this alarm was stored in the alarm list of the EMS.",
                          "format": "date-time"
                        },
                        "ackState": {
                          "name": "ackState",
                          "type": "string",
                          "description": "Provides the Acknowledgement State of the alarm (unacknowledged, acknowledged).",
                          "enum": [
                            "unacknowledged",
                            "acknowledged"
                          ]
                        },
                        "ackSystemId": {
                          "name": "ackSystemId",
                          "type": "string",
                          "description": "Provides the name of the system that last changed the ackState of an alarm, i.e. acknowledged or unacknowledged the alarm."
                        },
                        "ackUserId": {
                          "name": "ackUserId",
                          "type": "string",
                          "description": "Provides the id of the user who has last changed the ack state of the alarm, i.e. acknowledged or unacknowledged the alarm."
                        },
                        "affectedService": {
                          "name": "affectedService",
                          "type": "array",
                          "description": "Provides list of affected services.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Service reference, for when Service is used by other entities.",
                            "properties": {}
                          }
                        },
                        "alarmEscalation": {
                          "name": "alarmEscalation",
                          "type": "boolean",
                          "description": "Indicates if this alarm has been escalated or not. "
                        },
                        "clearSystemId": {
                          "name": "clearSystemId",
                          "type": "string",
                          "description": "Provides the id of the system where the user who invoked the alarmCleared operation is located. "
                        },
                        "clearUserId": {
                          "name": "clearUserId",
                          "type": "string",
                          "description": "Provides the id of the user who invoked the alarmCleared operation"
                        },
                        "comment": {
                          "name": "comment",
                          "type": "array",
                          "description": "Provides list of Comments regards Alarm.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "userId": {
                                "name": "userId",
                                "type": "string",
                                "description": "Indicates the user commenting the alarm."
                              },
                              "systemId": {
                                "name": "systemId",
                                "type": "string",
                                "description": "Indicates the system identifier on which the client set the comment."
                              },
                              "time": {
                                "name": "time",
                                "type": "string",
                                "description": "Indicates the time commenting the alarm",
                                "format": "date-time"
                              },
                              "comment": {
                                "name": "comment",
                                "type": "string",
                                "description": "Indicates the text of the comment."
                              }
                            }
                          }
                        },
                        "correlatedAlarm": {
                          "name": "correlatedAlarm",
                          "type": "array",
                          "description": "Provides list of correlated Alarms.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "crossedThresholdInformation": {
                          "name": "crossedThresholdInformation",
                          "type": "object",
                          "description": "Identifies the details of the threshold that has been crossed.",
                          "properties": {
                            "threshold": {
                              "name": "threshold",
                              "type": "object",
                              "properties": {}
                            },
                            "direction": {
                              "name": "direction",
                              "type": "string",
                              "description": "Indicates the threshold crossing direction: up or down."
                            },
                            "granularity": {
                              "name": "granularity",
                              "type": "string",
                              "description": "Indicates the granularity at which the indicator is evaluated for threshold crossing"
                            },
                            "indicatorName": {
                              "name": "indicatorName",
                              "type": "string",
                              "description": "Indicates the name of indicator which crossed the threshold."
                            },
                            "indicatorUnit": {
                              "name": "indicatorUnit",
                              "type": "string",
                              "description": "Indicates the unit of the measurement of the indicator corresponding to the threshold that has been crossed."
                            },
                            "observedValue": {
                              "name": "observedValue",
                              "type": "string",
                              "description": "Indicates the value of the indicator which crossed the threshold."
                            },
                            "thresholdCrossingDescription": {
                              "name": "thresholdCrossingDescription",
                              "type": "string",
                              "description": "Indicates further information on the threshold crossing alarm."
                            }
                          }
                        },
                        "isRootCause": {
                          "name": "isRootCause",
                          "type": "boolean",
                          "description": "Indicates whether the alarm is a root cause alarm.. "
                        },
                        "parentAlarm": {
                          "name": "parentAlarm",
                          "type": "array",
                          "description": "Provides list of parrent Alarms.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Reference to AlarmRef"
                          }
                        },
                        "plannedOutageIndicator": {
                          "name": "plannedOutageIndicator",
                          "type": "string",
                          "description": "Indicates that the Managed Object (related to this alarm) is in planned outage (in planned maintenance, or out-of-service). ",
                          "enum": [
                            "InService",
                            "OutOfService"
                          ]
                        },
                        "proposedRepairedActions": {
                          "name": "proposedRepairedActions",
                          "type": "string",
                          "description": "Indicates proposed repair actions, if known to the system emitting the alarm."
                        },
                        "serviceAffecting": {
                          "name": "serviceAffecting",
                          "type": "boolean",
                          "description": "Indicates whether the alarm affects service or not."
                        },
                        "place": {
                          "name": "place",
                          "type": "array",
                          "description": "List of related places, which are affected by Alarm.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "role": {
                                "name": "role",
                                "type": "string"
                              },
                              "relatedPlace": {
                                "name": "relatedPlace",
                                "type": "object",
                                "properties": {
                                  "externalIdentifier": {
                                    "name": "externalIdentifier",
                                    "type": "array",
                                    "description": "Collection of external identifiers",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "owner": {
                                          "name": "owner",
                                          "type": "string",
                                          "description": "Name of the external system that owns the entity."
                                        },
                                        "externalIdentifierType": {
                                          "name": "externalIdentifierType",
                                          "type": "string",
                                          "description": "Type of the identification, typically would be the type of the entity within the external system"
                                        },
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "identification of the entity within the external system."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "description": "Reference to AlarmRef"
                    }
                  ]
                }
              },
              "clearedAlarm": {
                "name": "clearedAlarm",
                "type": "array",
                "description": "The successfully cleared alarms",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to AlarmRefOrValue"
                }
              }
            }
          }
        }
      }
    }
  },
  "commentAlarm": {
    "tableName": "CommentAlarm",
    "endpoints": [
      {
        "operationId": "listCommentAlarm",
        "path": "/commentAlarm",
        "method": "get"
      },
      {
        "operationId": "createCommentAlarm",
        "path": "/commentAlarm",
        "method": "post"
      },
      {
        "operationId": "retrieveCommentAlarm",
        "path": "/commentAlarm/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "A reference to the task"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "The identifier of the task"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Current state of the operation task",
                "enum": [
                  "acknowledged",
                  "terminatedWithError",
                  "inProgress",
                  "done",
                  "cancel",
                  "canceled"
                ]
              },
              "comment": {
                "name": "comment",
                "type": "object",
                "properties": {
                  "userId": {
                    "name": "userId",
                    "type": "string",
                    "description": "Indicates the user commenting the alarm."
                  },
                  "systemId": {
                    "name": "systemId",
                    "type": "string",
                    "description": "Indicates the system identifier on which the client set the comment."
                  },
                  "time": {
                    "name": "time",
                    "type": "string",
                    "description": "Indicates the time commenting the alarm",
                    "format": "date-time"
                  },
                  "comment": {
                    "name": "comment",
                    "type": "string",
                    "description": "Indicates the text of the comment."
                  }
                }
              },
              "alarmPattern": {
                "name": "alarmPattern",
                "type": "array",
                "description": "Alarm patterns to match target alarms. An alarm will match if all of the sttributes in any of the patterns compare equal to those attributes of the alarm.",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "An alarm defined by reference or value. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Alarm entity and not the AlarmRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "externalAlarmId": {
                          "name": "externalAlarmId",
                          "type": "string",
                          "description": "An identifier of the alarm in the source system."
                        },
                        "state": {
                          "name": "state",
                          "type": "string",
                          "description": "Defines the alarm state during its life cycle (raised, updated, cleared).",
                          "enum": [
                            "raised",
                            "updated",
                            "cleared"
                          ]
                        },
                        "alarmType": {
                          "name": "alarmType",
                          "type": "string",
                          "description": "Categorizes the alarm (X.733 8.1.1, 3GPP TS 32.111-2 Annex A)",
                          "enum": [
                            "communicationsAlarm",
                            "processingErrorAlarm",
                            "environmentalAlarm",
                            "qualityOfServiceAlarm",
                            "equipmentAlarm",
                            "integrityViolation",
                            "operationalViolation",
                            "physicalViolation",
                            "securityService",
                            "mechanismViolation",
                            "timeDomainViolation"
                          ]
                        },
                        "perceivedSeverity": {
                          "name": "perceivedSeverity",
                          "type": "string",
                          "description": "Lists the possible severities that can be allocated to an Alarm. The values are consistent with ITU-T Recommendation X.733.\nOnce an alarm has been cleared, its perceived severity is set to 'cleared' and can no longer be set.",
                          "enum": [
                            "critical",
                            "major",
                            "minor",
                            "warning",
                            "indeterminate",
                            "cleared"
                          ]
                        },
                        "probableCause": {
                          "name": "probableCause",
                          "type": "string",
                          "description": "Provides the probable cause of the alarm. The values are consistent with ITU-T Recommendation X.733 or 3GPP TS 32.111-2 Annex B."
                        },
                        "specificProblem": {
                          "name": "specificProblem",
                          "type": "string",
                          "description": "Provides more specific information about the alarm."
                        },
                        "alarmedObjectType": {
                          "name": "alarmedObjectType",
                          "type": "string",
                          "description": "The type (class) of the managed object associated with the event."
                        },
                        "alarmedObject": {
                          "name": "alarmedObject",
                          "type": "object",
                          "description": "Reference to object which affected by Alarm (AlarmedObject).",
                          "properties": {}
                        },
                        "reportingSystemId": {
                          "name": "reportingSystemId",
                          "type": "string",
                          "description": "Reporting system identity."
                        },
                        "sourceSystemId": {
                          "name": "sourceSystemId",
                          "type": "string",
                          "description": "Source system identity."
                        },
                        "alarmDetails": {
                          "name": "alarmDetails",
                          "type": "string",
                          "description": "Contains further information on the alarm."
                        },
                        "alarmRaisedTime": {
                          "name": "alarmRaisedTime",
                          "type": "string",
                          "description": "Indicates the time (as a date + time) at which the alarm occurred at its source.",
                          "format": "date-time"
                        },
                        "alarmChangedTime": {
                          "name": "alarmChangedTime",
                          "type": "string",
                          "description": "Indicates the last date and time when the alarm is changed on the alarm-owning system. Any change to the alarm whether coming from the alarmed resource, or triggered by a change from the client is changing this time.",
                          "format": "date-time"
                        },
                        "alarmClearedTime": {
                          "name": "alarmClearedTime",
                          "type": "string",
                          "description": "Indicates the time (as a date + time) at which the alarm is cleared at the source. ",
                          "format": "date-time"
                        },
                        "alarmReportingTime": {
                          "name": "alarmReportingTime",
                          "type": "string",
                          "description": "Indicates the time (as a date + time) at which the alarm was reported by the owning OSS. It might be different from the alarmRaisedTime. For instance, if the alarm list is maintained by an EMS, the alarmRaisedtime would be the time the alarm\n  was detected by the NE, while the alarmReportingTime would be the time this alarm was stored in the alarm list of the EMS.",
                          "format": "date-time"
                        },
                        "ackState": {
                          "name": "ackState",
                          "type": "string",
                          "description": "Provides the Acknowledgement State of the alarm (unacknowledged, acknowledged).",
                          "enum": [
                            "unacknowledged",
                            "acknowledged"
                          ]
                        },
                        "ackSystemId": {
                          "name": "ackSystemId",
                          "type": "string",
                          "description": "Provides the name of the system that last changed the ackState of an alarm, i.e. acknowledged or unacknowledged the alarm."
                        },
                        "ackUserId": {
                          "name": "ackUserId",
                          "type": "string",
                          "description": "Provides the id of the user who has last changed the ack state of the alarm, i.e. acknowledged or unacknowledged the alarm."
                        },
                        "affectedService": {
                          "name": "affectedService",
                          "type": "array",
                          "description": "Provides list of affected services.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Service reference, for when Service is used by other entities.",
                            "properties": {}
                          }
                        },
                        "alarmEscalation": {
                          "name": "alarmEscalation",
                          "type": "boolean",
                          "description": "Indicates if this alarm has been escalated or not. "
                        },
                        "clearSystemId": {
                          "name": "clearSystemId",
                          "type": "string",
                          "description": "Provides the id of the system where the user who invoked the alarmCleared operation is located. "
                        },
                        "clearUserId": {
                          "name": "clearUserId",
                          "type": "string",
                          "description": "Provides the id of the user who invoked the alarmCleared operation"
                        },
                        "comment": {
                          "name": "comment",
                          "type": "array",
                          "description": "Provides list of Comments regards Alarm.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Reference to Comment"
                          }
                        },
                        "correlatedAlarm": {
                          "name": "correlatedAlarm",
                          "type": "array",
                          "description": "Provides list of correlated Alarms.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "crossedThresholdInformation": {
                          "name": "crossedThresholdInformation",
                          "type": "object",
                          "description": "Identifies the details of the threshold that has been crossed.",
                          "properties": {
                            "threshold": {
                              "name": "threshold",
                              "type": "object",
                              "properties": {}
                            },
                            "direction": {
                              "name": "direction",
                              "type": "string",
                              "description": "Indicates the threshold crossing direction: up or down."
                            },
                            "granularity": {
                              "name": "granularity",
                              "type": "string",
                              "description": "Indicates the granularity at which the indicator is evaluated for threshold crossing"
                            },
                            "indicatorName": {
                              "name": "indicatorName",
                              "type": "string",
                              "description": "Indicates the name of indicator which crossed the threshold."
                            },
                            "indicatorUnit": {
                              "name": "indicatorUnit",
                              "type": "string",
                              "description": "Indicates the unit of the measurement of the indicator corresponding to the threshold that has been crossed."
                            },
                            "observedValue": {
                              "name": "observedValue",
                              "type": "string",
                              "description": "Indicates the value of the indicator which crossed the threshold."
                            },
                            "thresholdCrossingDescription": {
                              "name": "thresholdCrossingDescription",
                              "type": "string",
                              "description": "Indicates further information on the threshold crossing alarm."
                            }
                          }
                        },
                        "isRootCause": {
                          "name": "isRootCause",
                          "type": "boolean",
                          "description": "Indicates whether the alarm is a root cause alarm.. "
                        },
                        "parentAlarm": {
                          "name": "parentAlarm",
                          "type": "array",
                          "description": "Provides list of parrent Alarms.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Reference to AlarmRef"
                          }
                        },
                        "plannedOutageIndicator": {
                          "name": "plannedOutageIndicator",
                          "type": "string",
                          "description": "Indicates that the Managed Object (related to this alarm) is in planned outage (in planned maintenance, or out-of-service). ",
                          "enum": [
                            "InService",
                            "OutOfService"
                          ]
                        },
                        "proposedRepairedActions": {
                          "name": "proposedRepairedActions",
                          "type": "string",
                          "description": "Indicates proposed repair actions, if known to the system emitting the alarm."
                        },
                        "serviceAffecting": {
                          "name": "serviceAffecting",
                          "type": "boolean",
                          "description": "Indicates whether the alarm affects service or not."
                        },
                        "place": {
                          "name": "place",
                          "type": "array",
                          "description": "List of related places, which are affected by Alarm.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "role": {
                                "name": "role",
                                "type": "string"
                              },
                              "relatedPlace": {
                                "name": "relatedPlace",
                                "type": "object",
                                "properties": {
                                  "externalIdentifier": {
                                    "name": "externalIdentifier",
                                    "type": "array",
                                    "description": "Collection of external identifiers",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "owner": {
                                          "name": "owner",
                                          "type": "string",
                                          "description": "Name of the external system that owns the entity."
                                        },
                                        "externalIdentifierType": {
                                          "name": "externalIdentifierType",
                                          "type": "string",
                                          "description": "Type of the identification, typically would be the type of the entity within the external system"
                                        },
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "identification of the entity within the external system."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "description": "Reference to AlarmRef"
                    }
                  ]
                }
              },
              "commentedAlarm": {
                "name": "commentedAlarm",
                "type": "array",
                "description": "The successfully commented alarms",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to AlarmRefOrValue"
                }
              }
            }
          }
        }
      }
    }
  },
  "groupAlarm": {
    "tableName": "GroupAlarm",
    "endpoints": [
      {
        "operationId": "listGroupAlarm",
        "path": "/groupAlarm",
        "method": "get"
      },
      {
        "operationId": "createGroupAlarm",
        "path": "/groupAlarm",
        "method": "post"
      },
      {
        "operationId": "retrieveGroupAlarm",
        "path": "/groupAlarm/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "A reference to the task"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "The identifier of the task"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Current state of the operation task",
                "enum": [
                  "acknowledged",
                  "terminatedWithError",
                  "inProgress",
                  "done",
                  "cancel",
                  "canceled"
                ]
              },
              "sourceSystemId": {
                "name": "sourceSystemId",
                "type": "string",
                "description": "Source system identifier"
              },
              "alarmChangedTime": {
                "name": "alarmChangedTime",
                "type": "string",
                "description": "Time of the correlation",
                "format": "date-time"
              },
              "parentAlarm": {
                "name": "parentAlarm",
                "type": "union",
                "description": "An alarm defined by reference or value. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Alarm entity and not the AlarmRefOrValue class itself",
                "oneOf": [
                  {
                    "name": "parentAlarm_variant_0",
                    "type": "object",
                    "properties": {
                      "externalAlarmId": {
                        "name": "externalAlarmId",
                        "type": "string",
                        "description": "An identifier of the alarm in the source system."
                      },
                      "state": {
                        "name": "state",
                        "type": "string",
                        "description": "Defines the alarm state during its life cycle (raised, updated, cleared).",
                        "enum": [
                          "raised",
                          "updated",
                          "cleared"
                        ]
                      },
                      "alarmType": {
                        "name": "alarmType",
                        "type": "string",
                        "description": "Categorizes the alarm (X.733 8.1.1, 3GPP TS 32.111-2 Annex A)",
                        "enum": [
                          "communicationsAlarm",
                          "processingErrorAlarm",
                          "environmentalAlarm",
                          "qualityOfServiceAlarm",
                          "equipmentAlarm",
                          "integrityViolation",
                          "operationalViolation",
                          "physicalViolation",
                          "securityService",
                          "mechanismViolation",
                          "timeDomainViolation"
                        ]
                      },
                      "perceivedSeverity": {
                        "name": "perceivedSeverity",
                        "type": "string",
                        "description": "Lists the possible severities that can be allocated to an Alarm. The values are consistent with ITU-T Recommendation X.733.\nOnce an alarm has been cleared, its perceived severity is set to 'cleared' and can no longer be set.",
                        "enum": [
                          "critical",
                          "major",
                          "minor",
                          "warning",
                          "indeterminate",
                          "cleared"
                        ]
                      },
                      "probableCause": {
                        "name": "probableCause",
                        "type": "string",
                        "description": "Provides the probable cause of the alarm. The values are consistent with ITU-T Recommendation X.733 or 3GPP TS 32.111-2 Annex B."
                      },
                      "specificProblem": {
                        "name": "specificProblem",
                        "type": "string",
                        "description": "Provides more specific information about the alarm."
                      },
                      "alarmedObjectType": {
                        "name": "alarmedObjectType",
                        "type": "string",
                        "description": "The type (class) of the managed object associated with the event."
                      },
                      "alarmedObject": {
                        "name": "alarmedObject",
                        "type": "object",
                        "description": "Reference to object which affected by Alarm (AlarmedObject).",
                        "properties": {}
                      },
                      "reportingSystemId": {
                        "name": "reportingSystemId",
                        "type": "string",
                        "description": "Reporting system identity."
                      },
                      "sourceSystemId": {
                        "name": "sourceSystemId",
                        "type": "string",
                        "description": "Source system identity."
                      },
                      "alarmDetails": {
                        "name": "alarmDetails",
                        "type": "string",
                        "description": "Contains further information on the alarm."
                      },
                      "alarmRaisedTime": {
                        "name": "alarmRaisedTime",
                        "type": "string",
                        "description": "Indicates the time (as a date + time) at which the alarm occurred at its source.",
                        "format": "date-time"
                      },
                      "alarmChangedTime": {
                        "name": "alarmChangedTime",
                        "type": "string",
                        "description": "Indicates the last date and time when the alarm is changed on the alarm-owning system. Any change to the alarm whether coming from the alarmed resource, or triggered by a change from the client is changing this time.",
                        "format": "date-time"
                      },
                      "alarmClearedTime": {
                        "name": "alarmClearedTime",
                        "type": "string",
                        "description": "Indicates the time (as a date + time) at which the alarm is cleared at the source. ",
                        "format": "date-time"
                      },
                      "alarmReportingTime": {
                        "name": "alarmReportingTime",
                        "type": "string",
                        "description": "Indicates the time (as a date + time) at which the alarm was reported by the owning OSS. It might be different from the alarmRaisedTime. For instance, if the alarm list is maintained by an EMS, the alarmRaisedtime would be the time the alarm\n  was detected by the NE, while the alarmReportingTime would be the time this alarm was stored in the alarm list of the EMS.",
                        "format": "date-time"
                      },
                      "ackState": {
                        "name": "ackState",
                        "type": "string",
                        "description": "Provides the Acknowledgement State of the alarm (unacknowledged, acknowledged).",
                        "enum": [
                          "unacknowledged",
                          "acknowledged"
                        ]
                      },
                      "ackSystemId": {
                        "name": "ackSystemId",
                        "type": "string",
                        "description": "Provides the name of the system that last changed the ackState of an alarm, i.e. acknowledged or unacknowledged the alarm."
                      },
                      "ackUserId": {
                        "name": "ackUserId",
                        "type": "string",
                        "description": "Provides the id of the user who has last changed the ack state of the alarm, i.e. acknowledged or unacknowledged the alarm."
                      },
                      "affectedService": {
                        "name": "affectedService",
                        "type": "array",
                        "description": "Provides list of affected services.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Service reference, for when Service is used by other entities.",
                          "properties": {}
                        }
                      },
                      "alarmEscalation": {
                        "name": "alarmEscalation",
                        "type": "boolean",
                        "description": "Indicates if this alarm has been escalated or not. "
                      },
                      "clearSystemId": {
                        "name": "clearSystemId",
                        "type": "string",
                        "description": "Provides the id of the system where the user who invoked the alarmCleared operation is located. "
                      },
                      "clearUserId": {
                        "name": "clearUserId",
                        "type": "string",
                        "description": "Provides the id of the user who invoked the alarmCleared operation"
                      },
                      "comment": {
                        "name": "comment",
                        "type": "array",
                        "description": "Provides list of Comments regards Alarm.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "userId": {
                              "name": "userId",
                              "type": "string",
                              "description": "Indicates the user commenting the alarm."
                            },
                            "systemId": {
                              "name": "systemId",
                              "type": "string",
                              "description": "Indicates the system identifier on which the client set the comment."
                            },
                            "time": {
                              "name": "time",
                              "type": "string",
                              "description": "Indicates the time commenting the alarm",
                              "format": "date-time"
                            },
                            "comment": {
                              "name": "comment",
                              "type": "string",
                              "description": "Indicates the text of the comment."
                            }
                          }
                        }
                      },
                      "correlatedAlarm": {
                        "name": "correlatedAlarm",
                        "type": "array",
                        "description": "Provides list of correlated Alarms.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {}
                        }
                      },
                      "crossedThresholdInformation": {
                        "name": "crossedThresholdInformation",
                        "type": "object",
                        "description": "Identifies the details of the threshold that has been crossed.",
                        "properties": {
                          "threshold": {
                            "name": "threshold",
                            "type": "object",
                            "properties": {}
                          },
                          "direction": {
                            "name": "direction",
                            "type": "string",
                            "description": "Indicates the threshold crossing direction: up or down."
                          },
                          "granularity": {
                            "name": "granularity",
                            "type": "string",
                            "description": "Indicates the granularity at which the indicator is evaluated for threshold crossing"
                          },
                          "indicatorName": {
                            "name": "indicatorName",
                            "type": "string",
                            "description": "Indicates the name of indicator which crossed the threshold."
                          },
                          "indicatorUnit": {
                            "name": "indicatorUnit",
                            "type": "string",
                            "description": "Indicates the unit of the measurement of the indicator corresponding to the threshold that has been crossed."
                          },
                          "observedValue": {
                            "name": "observedValue",
                            "type": "string",
                            "description": "Indicates the value of the indicator which crossed the threshold."
                          },
                          "thresholdCrossingDescription": {
                            "name": "thresholdCrossingDescription",
                            "type": "string",
                            "description": "Indicates further information on the threshold crossing alarm."
                          }
                        }
                      },
                      "isRootCause": {
                        "name": "isRootCause",
                        "type": "boolean",
                        "description": "Indicates whether the alarm is a root cause alarm.. "
                      },
                      "parentAlarm": {
                        "name": "parentAlarm",
                        "type": "array",
                        "description": "Provides list of parrent Alarms.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to AlarmRef"
                        }
                      },
                      "plannedOutageIndicator": {
                        "name": "plannedOutageIndicator",
                        "type": "string",
                        "description": "Indicates that the Managed Object (related to this alarm) is in planned outage (in planned maintenance, or out-of-service). ",
                        "enum": [
                          "InService",
                          "OutOfService"
                        ]
                      },
                      "proposedRepairedActions": {
                        "name": "proposedRepairedActions",
                        "type": "string",
                        "description": "Indicates proposed repair actions, if known to the system emitting the alarm."
                      },
                      "serviceAffecting": {
                        "name": "serviceAffecting",
                        "type": "boolean",
                        "description": "Indicates whether the alarm affects service or not."
                      },
                      "place": {
                        "name": "place",
                        "type": "array",
                        "description": "List of related places, which are affected by Alarm.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "role": {
                              "name": "role",
                              "type": "string"
                            },
                            "relatedPlace": {
                              "name": "relatedPlace",
                              "type": "object",
                              "properties": {
                                "externalIdentifier": {
                                  "name": "externalIdentifier",
                                  "type": "array",
                                  "description": "Collection of external identifiers",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "owner": {
                                        "name": "owner",
                                        "type": "string",
                                        "description": "Name of the external system that owns the entity."
                                      },
                                      "externalIdentifierType": {
                                        "name": "externalIdentifierType",
                                        "type": "string",
                                        "description": "Type of the identification, typically would be the type of the entity within the external system"
                                      },
                                      "id": {
                                        "name": "id",
                                        "type": "string",
                                        "description": "identification of the entity within the external system."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "name": "parentAlarm_variant_1",
                    "type": "object",
                    "description": "Reference to AlarmRef"
                  }
                ]
              },
              "correlatedAlarm": {
                "name": "correlatedAlarm",
                "type": "array",
                "description": "Correlated alarms",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to AlarmRefOrValue"
                }
              },
              "groupedAlarm": {
                "name": "groupedAlarm",
                "type": "array",
                "description": "The successfully correlated alarms",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to AlarmRefOrValue"
                }
              }
            }
          }
        }
      }
    }
  },
  "unAckAlarm": {
    "tableName": "UnAckAlarm",
    "endpoints": [
      {
        "operationId": "listUnAckAlarm",
        "path": "/unAckAlarm",
        "method": "get"
      },
      {
        "operationId": "createUnAckAlarm",
        "path": "/unAckAlarm",
        "method": "post"
      },
      {
        "operationId": "retrieveUnAckAlarm",
        "path": "/unAckAlarm/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "A reference to the task"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "The identifier of the task"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Current state of the operation task",
                "enum": [
                  "acknowledged",
                  "terminatedWithError",
                  "inProgress",
                  "done",
                  "cancel",
                  "canceled"
                ]
              },
              "ackSystemId": {
                "name": "ackSystemId",
                "type": "string",
                "description": "Name of the unacknowledging system"
              },
              "ackUserId": {
                "name": "ackUserId",
                "type": "string",
                "description": "Name of the unacknowledging user"
              },
              "ackTime": {
                "name": "ackTime",
                "type": "string",
                "description": "Time of the unacknowledgement",
                "format": "date-time"
              },
              "alarmPattern": {
                "name": "alarmPattern",
                "type": "array",
                "description": "Alarm patterns to match target alarms. An alarm will match if all of the sttributes in any of the patterns compare equal to those attributes of the alarm.",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "An alarm defined by reference or value. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Alarm entity and not the AlarmRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "externalAlarmId": {
                          "name": "externalAlarmId",
                          "type": "string",
                          "description": "An identifier of the alarm in the source system."
                        },
                        "state": {
                          "name": "state",
                          "type": "string",
                          "description": "Defines the alarm state during its life cycle (raised, updated, cleared).",
                          "enum": [
                            "raised",
                            "updated",
                            "cleared"
                          ]
                        },
                        "alarmType": {
                          "name": "alarmType",
                          "type": "string",
                          "description": "Categorizes the alarm (X.733 8.1.1, 3GPP TS 32.111-2 Annex A)",
                          "enum": [
                            "communicationsAlarm",
                            "processingErrorAlarm",
                            "environmentalAlarm",
                            "qualityOfServiceAlarm",
                            "equipmentAlarm",
                            "integrityViolation",
                            "operationalViolation",
                            "physicalViolation",
                            "securityService",
                            "mechanismViolation",
                            "timeDomainViolation"
                          ]
                        },
                        "perceivedSeverity": {
                          "name": "perceivedSeverity",
                          "type": "string",
                          "description": "Lists the possible severities that can be allocated to an Alarm. The values are consistent with ITU-T Recommendation X.733.\nOnce an alarm has been cleared, its perceived severity is set to 'cleared' and can no longer be set.",
                          "enum": [
                            "critical",
                            "major",
                            "minor",
                            "warning",
                            "indeterminate",
                            "cleared"
                          ]
                        },
                        "probableCause": {
                          "name": "probableCause",
                          "type": "string",
                          "description": "Provides the probable cause of the alarm. The values are consistent with ITU-T Recommendation X.733 or 3GPP TS 32.111-2 Annex B."
                        },
                        "specificProblem": {
                          "name": "specificProblem",
                          "type": "string",
                          "description": "Provides more specific information about the alarm."
                        },
                        "alarmedObjectType": {
                          "name": "alarmedObjectType",
                          "type": "string",
                          "description": "The type (class) of the managed object associated with the event."
                        },
                        "alarmedObject": {
                          "name": "alarmedObject",
                          "type": "object",
                          "description": "Reference to object which affected by Alarm (AlarmedObject).",
                          "properties": {}
                        },
                        "reportingSystemId": {
                          "name": "reportingSystemId",
                          "type": "string",
                          "description": "Reporting system identity."
                        },
                        "sourceSystemId": {
                          "name": "sourceSystemId",
                          "type": "string",
                          "description": "Source system identity."
                        },
                        "alarmDetails": {
                          "name": "alarmDetails",
                          "type": "string",
                          "description": "Contains further information on the alarm."
                        },
                        "alarmRaisedTime": {
                          "name": "alarmRaisedTime",
                          "type": "string",
                          "description": "Indicates the time (as a date + time) at which the alarm occurred at its source.",
                          "format": "date-time"
                        },
                        "alarmChangedTime": {
                          "name": "alarmChangedTime",
                          "type": "string",
                          "description": "Indicates the last date and time when the alarm is changed on the alarm-owning system. Any change to the alarm whether coming from the alarmed resource, or triggered by a change from the client is changing this time.",
                          "format": "date-time"
                        },
                        "alarmClearedTime": {
                          "name": "alarmClearedTime",
                          "type": "string",
                          "description": "Indicates the time (as a date + time) at which the alarm is cleared at the source. ",
                          "format": "date-time"
                        },
                        "alarmReportingTime": {
                          "name": "alarmReportingTime",
                          "type": "string",
                          "description": "Indicates the time (as a date + time) at which the alarm was reported by the owning OSS. It might be different from the alarmRaisedTime. For instance, if the alarm list is maintained by an EMS, the alarmRaisedtime would be the time the alarm\n  was detected by the NE, while the alarmReportingTime would be the time this alarm was stored in the alarm list of the EMS.",
                          "format": "date-time"
                        },
                        "ackState": {
                          "name": "ackState",
                          "type": "string",
                          "description": "Provides the Acknowledgement State of the alarm (unacknowledged, acknowledged).",
                          "enum": [
                            "unacknowledged",
                            "acknowledged"
                          ]
                        },
                        "ackSystemId": {
                          "name": "ackSystemId",
                          "type": "string",
                          "description": "Provides the name of the system that last changed the ackState of an alarm, i.e. acknowledged or unacknowledged the alarm."
                        },
                        "ackUserId": {
                          "name": "ackUserId",
                          "type": "string",
                          "description": "Provides the id of the user who has last changed the ack state of the alarm, i.e. acknowledged or unacknowledged the alarm."
                        },
                        "affectedService": {
                          "name": "affectedService",
                          "type": "array",
                          "description": "Provides list of affected services.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Service reference, for when Service is used by other entities.",
                            "properties": {}
                          }
                        },
                        "alarmEscalation": {
                          "name": "alarmEscalation",
                          "type": "boolean",
                          "description": "Indicates if this alarm has been escalated or not. "
                        },
                        "clearSystemId": {
                          "name": "clearSystemId",
                          "type": "string",
                          "description": "Provides the id of the system where the user who invoked the alarmCleared operation is located. "
                        },
                        "clearUserId": {
                          "name": "clearUserId",
                          "type": "string",
                          "description": "Provides the id of the user who invoked the alarmCleared operation"
                        },
                        "comment": {
                          "name": "comment",
                          "type": "array",
                          "description": "Provides list of Comments regards Alarm.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "userId": {
                                "name": "userId",
                                "type": "string",
                                "description": "Indicates the user commenting the alarm."
                              },
                              "systemId": {
                                "name": "systemId",
                                "type": "string",
                                "description": "Indicates the system identifier on which the client set the comment."
                              },
                              "time": {
                                "name": "time",
                                "type": "string",
                                "description": "Indicates the time commenting the alarm",
                                "format": "date-time"
                              },
                              "comment": {
                                "name": "comment",
                                "type": "string",
                                "description": "Indicates the text of the comment."
                              }
                            }
                          }
                        },
                        "correlatedAlarm": {
                          "name": "correlatedAlarm",
                          "type": "array",
                          "description": "Provides list of correlated Alarms.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "crossedThresholdInformation": {
                          "name": "crossedThresholdInformation",
                          "type": "object",
                          "description": "Identifies the details of the threshold that has been crossed.",
                          "properties": {
                            "threshold": {
                              "name": "threshold",
                              "type": "object",
                              "properties": {}
                            },
                            "direction": {
                              "name": "direction",
                              "type": "string",
                              "description": "Indicates the threshold crossing direction: up or down."
                            },
                            "granularity": {
                              "name": "granularity",
                              "type": "string",
                              "description": "Indicates the granularity at which the indicator is evaluated for threshold crossing"
                            },
                            "indicatorName": {
                              "name": "indicatorName",
                              "type": "string",
                              "description": "Indicates the name of indicator which crossed the threshold."
                            },
                            "indicatorUnit": {
                              "name": "indicatorUnit",
                              "type": "string",
                              "description": "Indicates the unit of the measurement of the indicator corresponding to the threshold that has been crossed."
                            },
                            "observedValue": {
                              "name": "observedValue",
                              "type": "string",
                              "description": "Indicates the value of the indicator which crossed the threshold."
                            },
                            "thresholdCrossingDescription": {
                              "name": "thresholdCrossingDescription",
                              "type": "string",
                              "description": "Indicates further information on the threshold crossing alarm."
                            }
                          }
                        },
                        "isRootCause": {
                          "name": "isRootCause",
                          "type": "boolean",
                          "description": "Indicates whether the alarm is a root cause alarm.. "
                        },
                        "parentAlarm": {
                          "name": "parentAlarm",
                          "type": "array",
                          "description": "Provides list of parrent Alarms.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Reference to AlarmRef"
                          }
                        },
                        "plannedOutageIndicator": {
                          "name": "plannedOutageIndicator",
                          "type": "string",
                          "description": "Indicates that the Managed Object (related to this alarm) is in planned outage (in planned maintenance, or out-of-service). ",
                          "enum": [
                            "InService",
                            "OutOfService"
                          ]
                        },
                        "proposedRepairedActions": {
                          "name": "proposedRepairedActions",
                          "type": "string",
                          "description": "Indicates proposed repair actions, if known to the system emitting the alarm."
                        },
                        "serviceAffecting": {
                          "name": "serviceAffecting",
                          "type": "boolean",
                          "description": "Indicates whether the alarm affects service or not."
                        },
                        "place": {
                          "name": "place",
                          "type": "array",
                          "description": "List of related places, which are affected by Alarm.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "role": {
                                "name": "role",
                                "type": "string"
                              },
                              "relatedPlace": {
                                "name": "relatedPlace",
                                "type": "object",
                                "properties": {
                                  "externalIdentifier": {
                                    "name": "externalIdentifier",
                                    "type": "array",
                                    "description": "Collection of external identifiers",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "owner": {
                                          "name": "owner",
                                          "type": "string",
                                          "description": "Name of the external system that owns the entity."
                                        },
                                        "externalIdentifierType": {
                                          "name": "externalIdentifierType",
                                          "type": "string",
                                          "description": "Type of the identification, typically would be the type of the entity within the external system"
                                        },
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "identification of the entity within the external system."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "description": "Reference to AlarmRef"
                    }
                  ]
                }
              },
              "unAckedAlarm": {
                "name": "unAckedAlarm",
                "type": "array",
                "description": "The successfully unacknowledged alarms",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to AlarmRefOrValue"
                }
              }
            }
          }
        }
      }
    }
  },
  "unGroupAlarm": {
    "tableName": "UnGroupAlarm",
    "endpoints": [
      {
        "operationId": "listUnGroupAlarm",
        "path": "/unGroupAlarm",
        "method": "get"
      },
      {
        "operationId": "createUnGroupAlarm",
        "path": "/unGroupAlarm",
        "method": "post"
      },
      {
        "operationId": "retrieveUnGroupAlarm",
        "path": "/unGroupAlarm/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "A reference to the task"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "The identifier of the task"
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Current state of the operation task",
                "enum": [
                  "acknowledged",
                  "terminatedWithError",
                  "inProgress",
                  "done",
                  "cancel",
                  "canceled"
                ]
              },
              "sourceSystemId": {
                "name": "sourceSystemId",
                "type": "string",
                "description": "Source system identifier"
              },
              "alarmChangedTime": {
                "name": "alarmChangedTime",
                "type": "string",
                "description": "Time of the uncorrelation",
                "format": "date-time"
              },
              "parentAlarm": {
                "name": "parentAlarm",
                "type": "union",
                "description": "An alarm defined by reference or value. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Alarm entity and not the AlarmRefOrValue class itself",
                "oneOf": [
                  {
                    "name": "parentAlarm_variant_0",
                    "type": "object",
                    "properties": {
                      "externalAlarmId": {
                        "name": "externalAlarmId",
                        "type": "string",
                        "description": "An identifier of the alarm in the source system."
                      },
                      "state": {
                        "name": "state",
                        "type": "string",
                        "description": "Defines the alarm state during its life cycle (raised, updated, cleared).",
                        "enum": [
                          "raised",
                          "updated",
                          "cleared"
                        ]
                      },
                      "alarmType": {
                        "name": "alarmType",
                        "type": "string",
                        "description": "Categorizes the alarm (X.733 8.1.1, 3GPP TS 32.111-2 Annex A)",
                        "enum": [
                          "communicationsAlarm",
                          "processingErrorAlarm",
                          "environmentalAlarm",
                          "qualityOfServiceAlarm",
                          "equipmentAlarm",
                          "integrityViolation",
                          "operationalViolation",
                          "physicalViolation",
                          "securityService",
                          "mechanismViolation",
                          "timeDomainViolation"
                        ]
                      },
                      "perceivedSeverity": {
                        "name": "perceivedSeverity",
                        "type": "string",
                        "description": "Lists the possible severities that can be allocated to an Alarm. The values are consistent with ITU-T Recommendation X.733.\nOnce an alarm has been cleared, its perceived severity is set to 'cleared' and can no longer be set.",
                        "enum": [
                          "critical",
                          "major",
                          "minor",
                          "warning",
                          "indeterminate",
                          "cleared"
                        ]
                      },
                      "probableCause": {
                        "name": "probableCause",
                        "type": "string",
                        "description": "Provides the probable cause of the alarm. The values are consistent with ITU-T Recommendation X.733 or 3GPP TS 32.111-2 Annex B."
                      },
                      "specificProblem": {
                        "name": "specificProblem",
                        "type": "string",
                        "description": "Provides more specific information about the alarm."
                      },
                      "alarmedObjectType": {
                        "name": "alarmedObjectType",
                        "type": "string",
                        "description": "The type (class) of the managed object associated with the event."
                      },
                      "alarmedObject": {
                        "name": "alarmedObject",
                        "type": "object",
                        "description": "Reference to object which affected by Alarm (AlarmedObject).",
                        "properties": {}
                      },
                      "reportingSystemId": {
                        "name": "reportingSystemId",
                        "type": "string",
                        "description": "Reporting system identity."
                      },
                      "sourceSystemId": {
                        "name": "sourceSystemId",
                        "type": "string",
                        "description": "Source system identity."
                      },
                      "alarmDetails": {
                        "name": "alarmDetails",
                        "type": "string",
                        "description": "Contains further information on the alarm."
                      },
                      "alarmRaisedTime": {
                        "name": "alarmRaisedTime",
                        "type": "string",
                        "description": "Indicates the time (as a date + time) at which the alarm occurred at its source.",
                        "format": "date-time"
                      },
                      "alarmChangedTime": {
                        "name": "alarmChangedTime",
                        "type": "string",
                        "description": "Indicates the last date and time when the alarm is changed on the alarm-owning system. Any change to the alarm whether coming from the alarmed resource, or triggered by a change from the client is changing this time.",
                        "format": "date-time"
                      },
                      "alarmClearedTime": {
                        "name": "alarmClearedTime",
                        "type": "string",
                        "description": "Indicates the time (as a date + time) at which the alarm is cleared at the source. ",
                        "format": "date-time"
                      },
                      "alarmReportingTime": {
                        "name": "alarmReportingTime",
                        "type": "string",
                        "description": "Indicates the time (as a date + time) at which the alarm was reported by the owning OSS. It might be different from the alarmRaisedTime. For instance, if the alarm list is maintained by an EMS, the alarmRaisedtime would be the time the alarm\n  was detected by the NE, while the alarmReportingTime would be the time this alarm was stored in the alarm list of the EMS.",
                        "format": "date-time"
                      },
                      "ackState": {
                        "name": "ackState",
                        "type": "string",
                        "description": "Provides the Acknowledgement State of the alarm (unacknowledged, acknowledged).",
                        "enum": [
                          "unacknowledged",
                          "acknowledged"
                        ]
                      },
                      "ackSystemId": {
                        "name": "ackSystemId",
                        "type": "string",
                        "description": "Provides the name of the system that last changed the ackState of an alarm, i.e. acknowledged or unacknowledged the alarm."
                      },
                      "ackUserId": {
                        "name": "ackUserId",
                        "type": "string",
                        "description": "Provides the id of the user who has last changed the ack state of the alarm, i.e. acknowledged or unacknowledged the alarm."
                      },
                      "affectedService": {
                        "name": "affectedService",
                        "type": "array",
                        "description": "Provides list of affected services.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Service reference, for when Service is used by other entities.",
                          "properties": {}
                        }
                      },
                      "alarmEscalation": {
                        "name": "alarmEscalation",
                        "type": "boolean",
                        "description": "Indicates if this alarm has been escalated or not. "
                      },
                      "clearSystemId": {
                        "name": "clearSystemId",
                        "type": "string",
                        "description": "Provides the id of the system where the user who invoked the alarmCleared operation is located. "
                      },
                      "clearUserId": {
                        "name": "clearUserId",
                        "type": "string",
                        "description": "Provides the id of the user who invoked the alarmCleared operation"
                      },
                      "comment": {
                        "name": "comment",
                        "type": "array",
                        "description": "Provides list of Comments regards Alarm.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "userId": {
                              "name": "userId",
                              "type": "string",
                              "description": "Indicates the user commenting the alarm."
                            },
                            "systemId": {
                              "name": "systemId",
                              "type": "string",
                              "description": "Indicates the system identifier on which the client set the comment."
                            },
                            "time": {
                              "name": "time",
                              "type": "string",
                              "description": "Indicates the time commenting the alarm",
                              "format": "date-time"
                            },
                            "comment": {
                              "name": "comment",
                              "type": "string",
                              "description": "Indicates the text of the comment."
                            }
                          }
                        }
                      },
                      "correlatedAlarm": {
                        "name": "correlatedAlarm",
                        "type": "array",
                        "description": "Provides list of correlated Alarms.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {}
                        }
                      },
                      "crossedThresholdInformation": {
                        "name": "crossedThresholdInformation",
                        "type": "object",
                        "description": "Identifies the details of the threshold that has been crossed.",
                        "properties": {
                          "threshold": {
                            "name": "threshold",
                            "type": "object",
                            "properties": {}
                          },
                          "direction": {
                            "name": "direction",
                            "type": "string",
                            "description": "Indicates the threshold crossing direction: up or down."
                          },
                          "granularity": {
                            "name": "granularity",
                            "type": "string",
                            "description": "Indicates the granularity at which the indicator is evaluated for threshold crossing"
                          },
                          "indicatorName": {
                            "name": "indicatorName",
                            "type": "string",
                            "description": "Indicates the name of indicator which crossed the threshold."
                          },
                          "indicatorUnit": {
                            "name": "indicatorUnit",
                            "type": "string",
                            "description": "Indicates the unit of the measurement of the indicator corresponding to the threshold that has been crossed."
                          },
                          "observedValue": {
                            "name": "observedValue",
                            "type": "string",
                            "description": "Indicates the value of the indicator which crossed the threshold."
                          },
                          "thresholdCrossingDescription": {
                            "name": "thresholdCrossingDescription",
                            "type": "string",
                            "description": "Indicates further information on the threshold crossing alarm."
                          }
                        }
                      },
                      "isRootCause": {
                        "name": "isRootCause",
                        "type": "boolean",
                        "description": "Indicates whether the alarm is a root cause alarm.. "
                      },
                      "parentAlarm": {
                        "name": "parentAlarm",
                        "type": "array",
                        "description": "Provides list of parrent Alarms.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to AlarmRef"
                        }
                      },
                      "plannedOutageIndicator": {
                        "name": "plannedOutageIndicator",
                        "type": "string",
                        "description": "Indicates that the Managed Object (related to this alarm) is in planned outage (in planned maintenance, or out-of-service). ",
                        "enum": [
                          "InService",
                          "OutOfService"
                        ]
                      },
                      "proposedRepairedActions": {
                        "name": "proposedRepairedActions",
                        "type": "string",
                        "description": "Indicates proposed repair actions, if known to the system emitting the alarm."
                      },
                      "serviceAffecting": {
                        "name": "serviceAffecting",
                        "type": "boolean",
                        "description": "Indicates whether the alarm affects service or not."
                      },
                      "place": {
                        "name": "place",
                        "type": "array",
                        "description": "List of related places, which are affected by Alarm.",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "role": {
                              "name": "role",
                              "type": "string"
                            },
                            "relatedPlace": {
                              "name": "relatedPlace",
                              "type": "object",
                              "properties": {
                                "externalIdentifier": {
                                  "name": "externalIdentifier",
                                  "type": "array",
                                  "description": "Collection of external identifiers",
                                  "items": {
                                    "name": "items",
                                    "type": "object",
                                    "properties": {
                                      "owner": {
                                        "name": "owner",
                                        "type": "string",
                                        "description": "Name of the external system that owns the entity."
                                      },
                                      "externalIdentifierType": {
                                        "name": "externalIdentifierType",
                                        "type": "string",
                                        "description": "Type of the identification, typically would be the type of the entity within the external system"
                                      },
                                      "id": {
                                        "name": "id",
                                        "type": "string",
                                        "description": "identification of the entity within the external system."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "name": "parentAlarm_variant_1",
                    "type": "object",
                    "description": "Reference to AlarmRef"
                  }
                ]
              },
              "correlatedAlarm": {
                "name": "correlatedAlarm",
                "type": "array",
                "description": "Correlated alarms",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to AlarmRefOrValue"
                }
              },
              "unGroupedAlarm": {
                "name": "unGroupedAlarm",
                "type": "array",
                "description": "The successfully uncorrelated alarms",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to AlarmRefOrValue"
                }
              }
            }
          }
        }
      }
    }
  },
  "serviceOrder": {
    "tableName": "ServiceOrder",
    "endpoints": [
      {
        "operationId": "listServiceOrder",
        "path": "/serviceOrder",
        "method": "get"
      },
      {
        "operationId": "createServiceOrder",
        "path": "/serviceOrder",
        "method": "post"
      },
      {
        "operationId": "retrieveServiceOrder",
        "path": "/serviceOrder/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteServiceOrder",
        "path": "/serviceOrder/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchServiceOrder",
        "path": "/serviceOrder/{id}",
        "method": "patch"
      }
    ]
  },
  "cancelServiceOrder": {
    "tableName": "CancelServiceOrder",
    "endpoints": [
      {
        "operationId": "listCancelServiceOrder",
        "path": "/cancelServiceOrder",
        "method": "get"
      },
      {
        "operationId": "createCancelServiceOrder",
        "path": "/cancelServiceOrder",
        "method": "post"
      },
      {
        "operationId": "retrieveCancelServiceOrder",
        "path": "/cancelServiceOrder/{id}",
        "method": "get"
      }
    ]
  },
  "product": {
    "tableName": "Product",
    "endpoints": [
      {
        "operationId": "listProduct",
        "path": "/product",
        "method": "get"
      },
      {
        "operationId": "createProduct",
        "path": "/product",
        "method": "post"
      },
      {
        "operationId": "retrieveProduct",
        "path": "/product/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProduct",
        "path": "/product/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchProduct",
        "path": "/product/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "agreementItem": {
                "name": "agreementItem",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "agreementName": {
                      "name": "agreementName",
                      "type": "string",
                      "description": "Name of the related entity."
                    },
                    "agreementHref": {
                      "name": "agreementHref",
                      "type": "string",
                      "description": "Reference of the related entity."
                    },
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string",
                      "description": "The actual type of the target instance when needed for disambiguation."
                    },
                    "agreementId": {
                      "name": "agreementId",
                      "type": "string",
                      "description": "Unique identifier of a related entity."
                    },
                    "agreementItemId": {
                      "name": "agreementItemId",
                      "type": "string",
                      "description": "Id of an item of a Agreement"
                    }
                  }
                }
              },
              "billingAccount": {
                "name": "billingAccount",
                "type": "object",
                "properties": {
                  "ratingType": {
                    "name": "ratingType",
                    "type": "string",
                    "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                  }
                }
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date and time when the product was created",
                "format": "date-time"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Is the description of the product. It could be copied from the description of the Product Offering."
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "If true, the product is a ProductBundle which is an instantiation of a BundledProductOffering. If false, the product is a ProductComponent which is an instantiation of a SimpleProductOffering."
              },
              "isCustomerVisible": {
                "name": "isCustomerVisible",
                "type": "boolean",
                "description": "If true, the product is visible by the customer."
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the product. It could be the same as the name of the product offering"
              },
              "orderDate": {
                "name": "orderDate",
                "type": "string",
                "description": "Is the date when the product was ordered",
                "format": "date-time"
              },
              "productCharacteristic": {
                "name": "productCharacteristic",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "productOffering": {
                "name": "productOffering",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "Version of the product offering"
                  }
                }
              },
              "productOrderItem": {
                "name": "productOrderItem",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "orderItemAction": {
                      "name": "orderItemAction",
                      "type": "string",
                      "description": "action to be performed on the entity managed by the item",
                      "enum": [
                        "add",
                        "modify",
                        "delete",
                        "noChange"
                      ]
                    },
                    "orderHref": {
                      "name": "orderHref",
                      "type": "string",
                      "description": "Reference of the related entity."
                    },
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string",
                      "description": "The actual type of the target instance when needed for disambiguation."
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the  Order"
                    },
                    "orderId": {
                      "name": "orderId",
                      "type": "string",
                      "description": "Unique identifier of a related  Order."
                    },
                    "orderItemId": {
                      "name": "orderItemId",
                      "type": "string",
                      "description": "Id of an item of a prduct order"
                    }
                  }
                }
              },
              "product": {
                "name": "product",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product entity and not the ProductRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "description": "Reference to Product"
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "description": "A Product reference",
                      "properties": {}
                    }
                  ]
                }
              },
              "productPrice": {
                "name": "productPrice",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "Description of the Product price"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the Product price"
                    },
                    "productOfferingPrice": {
                      "name": "productOfferingPrice",
                      "type": "object",
                      "properties": {
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "Version of the product offering price"
                        }
                      }
                    },
                    "recurringChargePeriod": {
                      "name": "recurringChargePeriod",
                      "type": "string",
                      "description": "Used for recurring charge to indicate period (month, week, etc..)."
                    },
                    "unitOfMeasure": {
                      "name": "unitOfMeasure",
                      "type": "string",
                      "description": "Unit of Measure if price depending on it (Gb, SMS volume, etc..)"
                    },
                    "price": {
                      "name": "price",
                      "type": "object",
                      "properties": {
                        "dutyFreeAmount": {
                          "name": "dutyFreeAmount",
                          "type": "object",
                          "description": "A base / value business entity used to represent money",
                          "properties": {
                            "unit": {
                              "name": "unit",
                              "type": "string",
                              "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                            },
                            "value": {
                              "name": "value",
                              "type": "number",
                              "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                              "format": "float"
                            }
                          }
                        },
                        "percentage": {
                          "name": "percentage",
                          "type": "number",
                          "description": "Percentage to apply for ProdOfferPriceAlteration",
                          "format": "float"
                        },
                        "taxIncludedAmount": {
                          "name": "taxIncludedAmount",
                          "type": "object",
                          "description": "Reference to Money"
                        },
                        "taxRate": {
                          "name": "taxRate",
                          "type": "number",
                          "description": "Tax rate",
                          "format": "float"
                        }
                      }
                    },
                    "priceAlteration": {
                      "name": "priceAlteration",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "applicationDuration": {
                            "name": "applicationDuration",
                            "type": "integer",
                            "description": "Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge)"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "A narrative that explains in detail the semantics of this order item price alteration"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the order item price alteration"
                          },
                          "productOfferingPrice": {
                            "name": "productOfferingPrice",
                            "type": "object",
                            "description": "Reference to ProductOfferingPriceRef"
                          },
                          "priceType": {
                            "name": "priceType",
                            "type": "string",
                            "description": "A category that describes the price such as recurring, one time and usage."
                          },
                          "priority": {
                            "name": "priority",
                            "type": "integer",
                            "description": "Priority level for applying this alteration among all the defined alterations on the order item price"
                          },
                          "recurringChargePeriod": {
                            "name": "recurringChargePeriod",
                            "type": "string",
                            "description": "Could be month, week..."
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "Could be minutes, GB..."
                          },
                          "price": {
                            "name": "price",
                            "type": "object",
                            "description": "Reference to Price"
                          }
                        }
                      }
                    },
                    "priceType": {
                      "name": "priceType",
                      "type": "string",
                      "description": "indicate if the price is for recurrent or no-recurrent charge"
                    }
                  }
                }
              },
              "productRelationship": {
                "name": "productRelationship",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Id of the related product"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Relationship type as relies on, bundles, etc..."
                    }
                  }
                }
              },
              "productSerialNumber": {
                "name": "productSerialNumber",
                "type": "string",
                "description": "Is the serial number for the product. This is typically applicable to tangible products e.g. Broadband Router."
              },
              "productSpecification": {
                "name": "productSpecification",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "Version of the product specification"
                  },
                  "targetProductSchema": {
                    "name": "targetProductSchema",
                    "type": "object",
                    "description": "The reference object to the schema and type of target product which is described by product specification",
                    "properties": {
                      "@type": {
                        "name": "@type",
                        "type": "string",
                        "description": "Class type of the target product"
                      },
                      "@schemaLocation": {
                        "name": "@schemaLocation",
                        "type": "string",
                        "description": "This field provides a link to the schema describing the target product",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "productTerm": {
                "name": "productTerm",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "Description of the productTerm"
                    },
                    "duration": {
                      "name": "duration",
                      "type": "object",
                      "description": "A time interval in a given unit of time",
                      "properties": {
                        "amount": {
                          "name": "amount",
                          "type": "integer",
                          "description": "Time interval (number of seconds, minutes, hours, etc.)"
                        },
                        "units": {
                          "name": "units",
                          "type": "string",
                          "description": "Unit of time (seconds, minutes, hours, etc.)"
                        }
                      }
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                      "properties": {
                        "startDateTime": {
                          "name": "startDateTime",
                          "type": "string",
                          "description": "Start of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        },
                        "endDateTime": {
                          "name": "endDateTime",
                          "type": "string",
                          "description": "End of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        }
                      }
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the productTerm"
                    }
                  }
                }
              },
              "realizingResource": {
                "name": "realizingResource",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Resource reference, for when Resource is used by other entities.",
                  "properties": {}
                }
              },
              "realizingService": {
                "name": "realizingService",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Service reference, for when Service is used by other entities.",
                  "properties": {}
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "properties": {
                            "gender": {
                              "name": "gender",
                              "type": "string",
                              "description": "Gender"
                            },
                            "placeOfBirth": {
                              "name": "placeOfBirth",
                              "type": "string",
                              "description": "Reference to the place where the individual was born"
                            },
                            "countryOfBirth": {
                              "name": "countryOfBirth",
                              "type": "string",
                              "description": "Country where the individual was born"
                            },
                            "nationality": {
                              "name": "nationality",
                              "type": "string",
                              "description": "Nationality"
                            },
                            "maritalStatus": {
                              "name": "maritalStatus",
                              "type": "string",
                              "description": "Marital status (married, divorced, widow ...)"
                            },
                            "birthDate": {
                              "name": "birthDate",
                              "type": "string",
                              "description": "Birth date",
                              "format": "date-time"
                            },
                            "deathDate": {
                              "name": "deathDate",
                              "type": "string",
                              "description": "Date of death",
                              "format": "date-time"
                            },
                            "title": {
                              "name": "title",
                              "type": "string",
                              "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                            },
                            "aristocraticTitle": {
                              "name": "aristocraticTitle",
                              "type": "string",
                              "description": "e.g. Baron, Graf, Earl"
                            },
                            "generation": {
                              "name": "generation",
                              "type": "string",
                              "description": "e.g.. Sr, Jr, III (the third)"
                            },
                            "preferredGivenName": {
                              "name": "preferredGivenName",
                              "type": "string",
                              "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                            },
                            "familyNamePrefix": {
                              "name": "familyNamePrefix",
                              "type": "string",
                              "description": "Family name prefix"
                            },
                            "legalName": {
                              "name": "legalName",
                              "type": "string",
                              "description": "Legal name or birth name (name one has for official purposes)"
                            },
                            "middleName": {
                              "name": "middleName",
                              "type": "string",
                              "description": "Middles name or initial"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                            },
                            "formattedName": {
                              "name": "formattedName",
                              "type": "string",
                              "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                            },
                            "location": {
                              "name": "location",
                              "type": "string",
                              "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Valid values for the lifecycle state of the individual",
                              "enum": [
                                "initialized",
                                "validated",
                                "deceased"
                              ]
                            },
                            "otherName": {
                              "name": "otherName",
                              "type": "array",
                              "description": "List of other names by which this individual is known",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                "properties": {
                                  "title": {
                                    "name": "title",
                                    "type": "string",
                                    "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                  },
                                  "aristocraticTitle": {
                                    "name": "aristocraticTitle",
                                    "type": "string",
                                    "description": "e.g. Baron, Graf, Earl, etc."
                                  },
                                  "generation": {
                                    "name": "generation",
                                    "type": "string",
                                    "description": "e.g. Sr, Jr, etc."
                                  },
                                  "givenName": {
                                    "name": "givenName",
                                    "type": "string",
                                    "description": "First name"
                                  },
                                  "preferredGivenName": {
                                    "name": "preferredGivenName",
                                    "type": "string",
                                    "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                  },
                                  "familyNamePrefix": {
                                    "name": "familyNamePrefix",
                                    "type": "string",
                                    "description": "Family name prefix"
                                  },
                                  "familyName": {
                                    "name": "familyName",
                                    "type": "string",
                                    "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                  },
                                  "legalName": {
                                    "name": "legalName",
                                    "type": "string",
                                    "description": "Legal name or birth name (name one has for official purposes)"
                                  },
                                  "middleName": {
                                    "name": "middleName",
                                    "type": "string",
                                    "description": "Middle name or initial"
                                  },
                                  "fullName": {
                                    "name": "fullName",
                                    "type": "string",
                                    "description": "Full name flatten (first, middle, and last names)"
                                  },
                                  "formattedName": {
                                    "name": "formattedName",
                                    "type": "string",
                                    "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "individualIdentification": {
                              "name": "individualIdentification",
                              "type": "array",
                              "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "identificationId": {
                                    "name": "identificationId",
                                    "type": "string",
                                    "description": "Identifier"
                                  },
                                  "issuingAuthority": {
                                    "name": "issuingAuthority",
                                    "type": "string",
                                    "description": "Authority which has issued the identifier, such as: social security, town hall"
                                  },
                                  "issuingDate": {
                                    "name": "issuingDate",
                                    "type": "string",
                                    "description": "Date at which the identifier was issued",
                                    "format": "date-time"
                                  },
                                  "identificationType": {
                                    "name": "identificationType",
                                    "type": "string",
                                    "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "union",
                                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                    "oneOf": [
                                      {
                                        "name": "attachment_variant_0",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "The name of the attachment"
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A narrative text describing the content of the attachment"
                                          },
                                          "url": {
                                            "name": "url",
                                            "type": "string",
                                            "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                          },
                                          "content": {
                                            "name": "content",
                                            "type": "string",
                                            "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                            "format": "base64"
                                          },
                                          "size": {
                                            "name": "size",
                                            "type": "object",
                                            "description": "An amount in a given unit",
                                            "properties": {
                                              "amount": {
                                                "name": "amount",
                                                "type": "number",
                                                "description": "Numeric value in a given unit",
                                                "format": "float"
                                              },
                                              "units": {
                                                "name": "units",
                                                "type": "string",
                                                "description": "Unit"
                                              }
                                            }
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "attachmentType": {
                                            "name": "attachmentType",
                                            "type": "string",
                                            "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                          },
                                          "mimeType": {
                                            "name": "mimeType",
                                            "type": "string",
                                            "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                          }
                                        }
                                      },
                                      {
                                        "name": "attachment_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A narrative text describing the content of the attachment"
                                          },
                                          "url": {
                                            "name": "url",
                                            "type": "string",
                                            "description": "Link to the attachment media/content"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "disability": {
                              "name": "disability",
                              "type": "array",
                              "description": "List of disabilities suffered by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Lack or inadequate strength or ability.",
                                "properties": {
                                  "disabilityCode": {
                                    "name": "disabilityCode",
                                    "type": "string",
                                    "description": "Code of the disability"
                                  },
                                  "disabilityName": {
                                    "name": "disabilityName",
                                    "type": "string",
                                    "description": "Name of the disability"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "languageAbility": {
                              "name": "languageAbility",
                              "type": "array",
                              "description": "List of national languages known by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Ability of an individual to understand or converse in a language.",
                                "properties": {
                                  "languageCode": {
                                    "name": "languageCode",
                                    "type": "string",
                                    "description": "Language code (RFC 5646)"
                                  },
                                  "languageName": {
                                    "name": "languageName",
                                    "type": "string",
                                    "description": "Language name"
                                  },
                                  "isFavouriteLanguage": {
                                    "name": "isFavouriteLanguage",
                                    "type": "boolean",
                                    "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                  },
                                  "writingProficiency": {
                                    "name": "writingProficiency",
                                    "type": "string",
                                    "description": "Writing proficiency evaluated for this language"
                                  },
                                  "readingProficiency": {
                                    "name": "readingProficiency",
                                    "type": "string",
                                    "description": "Reading proficiency evaluated for this language"
                                  },
                                  "speakingProficiency": {
                                    "name": "speakingProficiency",
                                    "type": "string",
                                    "description": "Speaking proficiency evaluated for this language"
                                  },
                                  "listeningProficiency": {
                                    "name": "listeningProficiency",
                                    "type": "string",
                                    "description": "Listening proficiency evaluated for this language"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "skill": {
                              "name": "skill",
                              "type": "array",
                              "description": "List of skills exhibited by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                "properties": {
                                  "skillCode": {
                                    "name": "skillCode",
                                    "type": "string",
                                    "description": "Code of the skill"
                                  },
                                  "skillName": {
                                    "name": "skillName",
                                    "type": "string",
                                    "description": "Name of the skill, such as Java language"
                                  },
                                  "evaluatedLevel": {
                                    "name": "evaluatedLevel",
                                    "type": "string",
                                    "description": "Level of expertise in a skill evaluated for an individual"
                                  },
                                  "comment": {
                                    "name": "comment",
                                    "type": "string",
                                    "description": "A free text comment linked to the evaluation done"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "familyName": {
                              "name": "familyName",
                              "type": "string",
                              "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                            },
                            "givenName": {
                              "name": "givenName",
                              "type": "string",
                              "description": "First name of the individual"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "properties": {
                            "isLegalEntity": {
                              "name": "isLegalEntity",
                              "type": "boolean",
                              "description": "If value is true, the organization is a legal entity known by a national referential."
                            },
                            "isHeadOffice": {
                              "name": "isHeadOffice",
                              "type": "boolean",
                              "description": "If value is true, the organization is the head office"
                            },
                            "organizationType": {
                              "name": "organizationType",
                              "type": "string",
                              "description": "Type of Organization (company, department...)"
                            },
                            "existsDuring": {
                              "name": "existsDuring",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Organization name (department name for example)"
                            },
                            "nameType": {
                              "name": "nameType",
                              "type": "string",
                              "description": "Type of the name : Co, Inc, Ltd, etc."
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Valid values for the lifecycle state of the organization",
                              "enum": [
                                "initialized",
                                "validated",
                                "closed"
                              ]
                            },
                            "otherName": {
                              "name": "otherName",
                              "type": "array",
                              "description": "List of additional names by which the organization is known",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "tradingName": {
                                    "name": "tradingName",
                                    "type": "string",
                                    "description": "The name that the organization trades under"
                                  },
                                  "nameType": {
                                    "name": "nameType",
                                    "type": "string",
                                    "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Organization name (department name for example)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "organizationIdentification": {
                              "name": "organizationIdentification",
                              "type": "array",
                              "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "identificationId": {
                                    "name": "identificationId",
                                    "type": "string",
                                    "description": "Identifier"
                                  },
                                  "issuingAuthority": {
                                    "name": "issuingAuthority",
                                    "type": "string",
                                    "description": "Authority which has issued the identifier (chamber of commerce...)"
                                  },
                                  "issuingDate": {
                                    "name": "issuingDate",
                                    "type": "string",
                                    "description": "Date at which the identifier was issued",
                                    "format": "date-time"
                                  },
                                  "identificationType": {
                                    "name": "identificationType",
                                    "type": "string",
                                    "description": "Type of identification information used to identify the company in a country or internationally"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "organizationChildRelationship": {
                              "name": "organizationChildRelationship",
                              "type": "array",
                              "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                  },
                                  "organization": {
                                    "name": "organization",
                                    "type": "object",
                                    "properties": {}
                                  }
                                }
                              }
                            },
                            "organizationParentRelationship": {
                              "name": "organizationParentRelationship",
                              "type": "object",
                              "properties": {
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                },
                                "organization": {
                                  "name": "organization",
                                  "type": "object",
                                  "description": "Reference to OrganizationRef"
                                }
                              }
                            },
                            "tradingName": {
                              "name": "tradingName",
                              "type": "string",
                              "description": "Name that the organization (unit) trades under"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_4",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A description of the PartyRole."
                            },
                            "role": {
                              "name": "role",
                              "type": "string",
                              "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
                            },
                            "engagedParty": {
                              "name": "engagedParty",
                              "type": "object",
                              "description": "Reference to PartyRef"
                            },
                            "partyRoleSpecification": {
                              "name": "partyRoleSpecification",
                              "type": "object",
                              "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                              "properties": {}
                            },
                            "characteristic": {
                              "name": "characteristic",
                              "type": "array",
                              "description": "Describes the characteristic of a party role.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to Characteristic"
                              }
                            },
                            "account": {
                              "name": "account",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Account reference. A account may be a party account or a financial account.",
                                "properties": {}
                              }
                            },
                            "agreement": {
                              "name": "agreement",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                "properties": {}
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier for this contact medium."
                                  },
                                  "preferred": {
                                    "name": "preferred",
                                    "type": "boolean",
                                    "description": "If true, indicates that is the preferred contact medium"
                                  },
                                  "contactType": {
                                    "name": "contactType",
                                    "type": "string",
                                    "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "paymentMethod": {
                              "name": "paymentMethod",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                "properties": {}
                              }
                            },
                            "creditProfile": {
                              "name": "creditProfile",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditProfileDate": {
                                    "name": "creditProfileDate",
                                    "type": "string",
                                    "description": "The date the profile was established",
                                    "format": "date-time"
                                  },
                                  "creditRiskRating": {
                                    "name": "creditRiskRating",
                                    "type": "integer",
                                    "description": "This is an integer whose value is used to rate the risk"
                                  },
                                  "creditScore": {
                                    "name": "creditScore",
                                    "type": "integer",
                                    "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Used to track the lifecycle status of the party role."
                            },
                            "statusReason": {
                              "name": "statusReason",
                              "type": "string",
                              "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_5",
                          "type": "object",
                          "description": "When business partner is the Supplier ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_6",
                          "type": "object",
                          "description": "When business partner is the BusinessPartner ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_7",
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_8",
                          "type": "object",
                          "properties": {}
                        }
                      ]
                    }
                  }
                }
              },
              "place": {
                "name": "place",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "place": {
                      "name": "place",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place entity and not the PlaceRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "place_variant_0",
                          "type": "object",
                          "properties": {
                            "id": {
                              "name": "id",
                              "type": "string",
                              "description": "Unique identifier of the geographic location"
                            },
                            "href": {
                              "name": "href",
                              "type": "string",
                              "description": "An URI used to access to the geographic location resource"
                            },
                            "@type": {
                              "name": "@type",
                              "type": "string",
                              "description": "The name of the GeoJSON structure used in the geometry attribute",
                              "enum": [
                                "GeoJsonPoint",
                                "GeoJsonMultiPoint",
                                "GeoJsonLineString",
                                "GeoJsonMultiLineString",
                                "GeoJsonPolygon"
                              ]
                            },
                            "bbox": {
                              "name": "bbox",
                              "type": "array",
                              "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                              "items": {
                                "name": "items",
                                "type": "number"
                              }
                            }
                          }
                        },
                        {
                          "name": "place_variant_1",
                          "type": "object",
                          "properties": {
                            "code": {
                              "name": "code",
                              "type": "string",
                              "description": "A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]"
                            },
                            "creationDate": {
                              "name": "creationDate",
                              "type": "string",
                              "description": "Date and time when the GeographicSite was created",
                              "format": "date-time"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Text describing additional information regarding the site"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former"
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "externalIdentifier": {
                              "name": "externalIdentifier",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "owner": {
                                    "name": "owner",
                                    "type": "string",
                                    "description": "Name of the external system that owns the entity."
                                  },
                                  "externalIdentifierType": {
                                    "name": "externalIdentifierType",
                                    "type": "string",
                                    "description": "Type of the identification, typically would be the type of the entity within the external system"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "identification of the entity within the external system."
                                  }
                                }
                              }
                            },
                            "calendar": {
                              "name": "calendar",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "day": {
                                    "name": "day",
                                    "type": "string",
                                    "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, ...)"
                                  },
                                  "timeZone": {
                                    "name": "timeZone",
                                    "type": "string",
                                    "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)"
                                  },
                                  "hourPeriod": {
                                    "name": "hourPeriod",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "endHour": {
                                          "name": "endHour",
                                          "type": "string",
                                          "description": "The time when the status ends applying"
                                        },
                                        "startHour": {
                                          "name": "startHour",
                                          "type": "string",
                                          "description": "The time when the status starts applying"
                                        }
                                      }
                                    }
                                  },
                                  "status": {
                                    "name": "status",
                                    "type": "string",
                                    "description": "Indication of the availability of the caledar period (e.g.: available, booked, etc.)"
                                  }
                                }
                              }
                            },
                            "place": {
                              "name": "place",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to PlaceRefOrValue"
                              }
                            },
                            "siteRelationship": {
                              "name": "siteRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Reference of the related geographic site"
                                  },
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role of the related site in the relationship"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the related site entity within the server"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Type of relationship"
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "name": "place_variant_2",
                          "type": "object",
                          "properties": {
                            "city": {
                              "name": "city",
                              "type": "string",
                              "description": "City that the address is in"
                            },
                            "country": {
                              "name": "country",
                              "type": "string",
                              "description": "Country that the address is in"
                            },
                            "locality": {
                              "name": "locality",
                              "type": "string",
                              "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                            },
                            "postcode": {
                              "name": "postcode",
                              "type": "string",
                              "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                            },
                            "stateOrProvince": {
                              "name": "stateOrProvince",
                              "type": "string",
                              "description": "the State or Province that the address is in"
                            },
                            "streetName": {
                              "name": "streetName",
                              "type": "string",
                              "description": "Name of the street or other street type"
                            },
                            "streetNr": {
                              "name": "streetNr",
                              "type": "string",
                              "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                            },
                            "streetNrLast": {
                              "name": "streetNrLast",
                              "type": "string",
                              "description": "Last number in a range of street numbers allocated to a property"
                            },
                            "streetNrLastSuffix": {
                              "name": "streetNrLastSuffix",
                              "type": "string",
                              "description": "Last street number suffix for a ranged address"
                            },
                            "streetNrSuffix": {
                              "name": "streetNrSuffix",
                              "type": "string",
                              "description": "the first street number suffix"
                            },
                            "streetSuffix": {
                              "name": "streetSuffix",
                              "type": "string",
                              "description": "A modifier denoting a relative direction"
                            },
                            "streetType": {
                              "name": "streetType",
                              "type": "string",
                              "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                            },
                            "countryCode": {
                              "name": "countryCode",
                              "type": "array",
                              "description": "Country codes are short alphabetic or numeric geographical codes (geocodes) developed to represent countries and dependent areas, for use in data processing and communications. Several different systems have been developed to do this. The term country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes, the E.164 country calling codes.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "format": {
                                    "name": "format",
                                    "type": "string",
                                    "description": "Standard/Regulatory definition identifier. e.g., ISO 3166-1"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "The value of the resource in the corresponding standard.e.g., a country code value"
                                  }
                                }
                              }
                            },
                            "externalIdentifier": {
                              "name": "externalIdentifier",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ExternalIdentifier"
                              }
                            },
                            "geographicLocation": {
                              "name": "geographicLocation",
                              "type": "union",
                              "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicLocation entity and not the GeographicLocationRefOrValue class itself",
                              "oneOf": [
                                {
                                  "name": "geographicLocation_variant_0",
                                  "type": "object",
                                  "description": "Reference to GeographicLocation"
                                },
                                {
                                  "name": "geographicLocation_variant_1",
                                  "type": "object",
                                  "properties": {}
                                }
                              ]
                            },
                            "geographicSubAddress": {
                              "name": "geographicSubAddress",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "buildingName": {
                                    "name": "buildingName",
                                    "type": "string",
                                    "description": "allows for buildings that have well-known names"
                                  },
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Link to the subAddress"
                                  },
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique Identifier of the subAddress"
                                  },
                                  "levelNumber": {
                                    "name": "levelNumber",
                                    "type": "string",
                                    "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                                  },
                                  "levelType": {
                                    "name": "levelType",
                                    "type": "string",
                                    "description": "describes level types within a building"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the subAddress to identify it with a meaningful identification"
                                  },
                                  "privateStreetName": {
                                    "name": "privateStreetName",
                                    "type": "string",
                                    "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                                  },
                                  "privateStreetNumber": {
                                    "name": "privateStreetNumber",
                                    "type": "string",
                                    "description": "private streets numbers internal to a private street"
                                  },
                                  "subUnit": {
                                    "name": "subUnit",
                                    "type": "array",
                                    "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "subUnitNumber": {
                                          "name": "subUnitNumber",
                                          "type": "string",
                                          "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                                        },
                                        "subUnitType": {
                                          "name": "subUnitType",
                                          "type": "string",
                                          "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                                        }
                                      }
                                    }
                                  },
                                  "subAddressType": {
                                    "name": "subAddressType",
                                    "type": "string",
                                    "description": "Type of subAddress : it can be a subunit or a private street"
                                  }
                                }
                              }
                            },
                            "geographicAddressType": {
                              "name": "geographicAddressType",
                              "type": "string",
                              "description": "Classification of the address, e.g., residential, industrial "
                            }
                          }
                        },
                        {
                          "name": "place_variant_3",
                          "type": "object",
                          "description": "Place reference.",
                          "properties": {}
                        }
                      ]
                    }
                  }
                }
              },
              "startDate": {
                "name": "startDate",
                "type": "string",
                "description": "Is the date from which the product starts",
                "format": "date-time"
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Possible values for the status of the product",
                "enum": [
                  "created",
                  "pendingActive",
                  "cancelled",
                  "active",
                  "pendingTerminate",
                  "terminated",
                  "suspended",
                  "aborted "
                ]
              },
              "terminationDate": {
                "name": "terminationDate",
                "type": "string",
                "description": "Is the date when the product was terminated",
                "format": "date-time"
              },
              "intent": {
                "name": "intent",
                "type": "union",
                "description": "Intent Ref (if Intent already exists) or Value (if Intent be created or its details be presented)",
                "oneOf": [
                  {
                    "name": "intent_variant_0",
                    "type": "object",
                    "description": "Intent reference, for when Intent is used by other entities",
                    "properties": {}
                  },
                  {
                    "name": "intent_variant_1",
                    "type": "object",
                    "properties": {
                      "description": {
                        "name": "description",
                        "type": "string",
                        "description": "The description of the intent."
                      },
                      "validFor": {
                        "name": "validFor",
                        "type": "object",
                        "description": "Reference to TimePeriod"
                      },
                      "isBundle": {
                        "name": "isBundle",
                        "type": "boolean",
                        "description": "isBundle determines whether an intent represents a single intent (false), or a bundle of intents(true)."
                      },
                      "priority": {
                        "name": "priority",
                        "type": "string",
                        "description": "Can be used by intent owner to prioritize intents in an intent management system"
                      },
                      "statusChangeDate": {
                        "name": "statusChangeDate",
                        "type": "string",
                        "description": "A date time( DateTime). The date that the entity status changed to the current one",
                        "format": "date-time"
                      },
                      "context": {
                        "name": "context",
                        "type": "string",
                        "description": "A string used to give a context to the intent"
                      },
                      "version": {
                        "name": "version",
                        "type": "string",
                        "description": "A field that identifies the specific version of an instance of an intent."
                      },
                      "intentSpecification": {
                        "name": "intentSpecification",
                        "type": "object",
                        "description": "Reference to EntityRef"
                      },
                      "intentRelationship": {
                        "name": "intentRelationship",
                        "type": "array",
                        "description": "A list of intents related to this intent",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "A uni-directionmal relationship from this entity to a target entity instance",
                          "properties": {
                            "href": {
                              "name": "href",
                              "type": "string"
                            },
                            "name": {
                              "name": "name",
                              "type": "string"
                            },
                            "role": {
                              "name": "role",
                              "type": "string",
                              "description": "The association role for this entity"
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "associationSpec": {
                              "name": "associationSpec",
                              "type": "object",
                              "description": "Reference to EntityRef"
                            },
                            "@baseType": {
                              "name": "@baseType",
                              "type": "string",
                              "description": "When sub-classing, this defines the super-class"
                            },
                            "@schemaLocation": {
                              "name": "@schemaLocation",
                              "type": "string",
                              "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                            },
                            "relationshipType": {
                              "name": "relationshipType",
                              "type": "string",
                              "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                            },
                            "id": {
                              "name": "id",
                              "type": "string"
                            },
                            "@referredType": {
                              "name": "@referredType",
                              "type": "string"
                            },
                            "@type": {
                              "name": "@type",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "characteristic": {
                        "name": "characteristic",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to Characteristic"
                        }
                      },
                      "relatedParty": {
                        "name": "relatedParty",
                        "type": "array",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "properties": {
                            "role": {
                              "name": "role",
                              "type": "string",
                              "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                            },
                            "partyOrPartyRole": {
                              "name": "partyOrPartyRole",
                              "type": "union",
                              "description": "",
                              "oneOf": [
                                {
                                  "name": "partyOrPartyRole_variant_0",
                                  "type": "object",
                                  "description": "Reference to PartyRef"
                                },
                                {
                                  "name": "partyOrPartyRole_variant_1",
                                  "type": "object",
                                  "description": "Reference to PartyRoleRef"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "attachment": {
                        "name": "attachment",
                        "type": "array",
                        "description": "Attachments that may be of relevance to this intent, such as picture, document, media",
                        "items": {
                          "name": "items",
                          "type": "object",
                          "description": "Reference to AttachmentRefOrValue"
                        }
                      },
                      "name": {
                        "name": "name",
                        "type": "string",
                        "description": "The name of the intent."
                      },
                      "expression": {
                        "name": "expression",
                        "type": "object",
                        "properties": {
                          "expressionLanguage": {
                            "name": "expressionLanguage",
                            "type": "string",
                            "description": "Possible values for the serialized Expression language of an intent or Intent report",
                            "enum": [
                              "Turtle",
                              "JSON-LD",
                              "RDF-XML",
                              "Other"
                            ]
                          },
                          "iri": {
                            "name": "iri",
                            "type": "string",
                            "description": "Internationalized Resource Identifier of the intent Expression"
                          },
                          "expressionValue": {
                            "name": "expressionValue",
                            "type": "string",
                            "description": "expression value is the ontology-encoded form of the Intent such as RDF-XML, Turtle, Json-LD,..."
                          }
                        }
                      },
                      "creationDate": {
                        "name": "creationDate",
                        "type": "string",
                        "description": "Date and time of the creation of this REST resource",
                        "format": "date-time"
                      },
                      "lastUpdate": {
                        "name": "lastUpdate",
                        "type": "string",
                        "description": "Date and time of the last update of this REST resource",
                        "format": "date-time"
                      },
                      "lifecycleStatus": {
                        "name": "lifecycleStatus",
                        "type": "string",
                        "description": "Used to indicate the current lifecycle status of this intent"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "usage": {
    "tableName": "Usage",
    "endpoints": [
      {
        "operationId": "listUsage",
        "path": "/usage",
        "method": "get"
      },
      {
        "operationId": "createUsage",
        "path": "/usage",
        "method": "post"
      },
      {
        "operationId": "retrieveUsage",
        "path": "/usage/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteUsage",
        "path": "/usage/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchUsage",
        "path": "/usage/{id}",
        "method": "patch"
      }
    ]
  },
  "usageSpecification": {
    "tableName": "UsageSpecification",
    "endpoints": [
      {
        "operationId": "listUsageSpecification",
        "path": "/usageSpecification",
        "method": "get"
      },
      {
        "operationId": "createUsageSpecification",
        "path": "/usageSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveUsageSpecification",
        "path": "/usageSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteUsageSpecification",
        "path": "/usageSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchUsageSpecification",
        "path": "/usageSpecification/{id}",
        "method": "patch"
      }
    ]
  },
  "resourceCandidate": {
    "tableName": "ResourceCandidate",
    "endpoints": [
      {
        "operationId": "listResourceCandidate",
        "path": "/resourceCandidate",
        "method": "get"
      },
      {
        "operationId": "createResourceCandidate",
        "path": "/resourceCandidate",
        "method": "post"
      },
      {
        "operationId": "retrieveResourceCandidate",
        "path": "/resourceCandidate/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteResourceCandidate",
        "path": "/resourceCandidate/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResourceCandidate",
        "path": "/resourceCandidate/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of this REST resource"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "the version of resource candidate"
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of this REST resource",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of the resource candidate."
              },
              "category": {
                "name": "category",
                "type": "array",
                "description": "The categories in which this candidate is exposed",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Category version"
                    }
                  }
                }
              },
              "resourceSpecification": {
                "name": "resourceSpecification",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "Resource Specification version"
                  }
                }
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "resourceCatalog": {
    "tableName": "ResourceCatalog",
    "endpoints": [
      {
        "operationId": "listResourceCatalog",
        "path": "/resourceCatalog",
        "method": "get"
      },
      {
        "operationId": "createResourceCatalog",
        "path": "/resourceCatalog",
        "method": "post"
      },
      {
        "operationId": "retrieveResourceCatalog",
        "path": "/resourceCatalog/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteResourceCatalog",
        "path": "/resourceCatalog/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResourceCatalog",
        "path": "/resourceCatalog/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of this catalog"
              },
              "catalogType": {
                "name": "catalogType",
                "type": "string",
                "description": "Type of this Catalog, like Product, Service, Resource etc."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Catalog version"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "List of parties involved in this catalog",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the catalog"
              },
              "category": {
                "name": "category",
                "type": "array",
                "description": "List of root categories contained in this catalog",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Category version"
                    }
                  }
                }
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "resourceCategory": {
    "tableName": "ResourceCategory",
    "endpoints": [
      {
        "operationId": "listResourceCategory",
        "path": "/resourceCategory",
        "method": "get"
      },
      {
        "operationId": "createResourceCategory",
        "path": "/resourceCategory",
        "method": "post"
      },
      {
        "operationId": "retrieveResourceCategory",
        "path": "/resourceCategory/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteResourceCategory",
        "path": "/resourceCategory/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchResourceCategory",
        "path": "/resourceCategory/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the category"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "The name of the Category"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Category version"
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update",
                "format": "date-time"
              },
              "parentId": {
                "name": "parentId",
                "type": "string",
                "description": "Unique identifier of the parent category"
              },
              "isRoot": {
                "name": "isRoot",
                "type": "boolean",
                "description": "If true, this Boolean indicates that the category is a root of categories"
              },
              "category": {
                "name": "category",
                "type": "array",
                "description": "The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other (sub-)categories and/or product offerings.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Category version"
                    }
                  }
                }
              },
              "resourceSpecification": {
                "name": "resourceSpecification",
                "type": "array",
                "description": "List of resource specifications accessible via this category",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Resource Specification version"
                    }
                  }
                }
              },
              "resourceCandidate": {
                "name": "resourceCandidate",
                "type": "array",
                "description": "List of resource candidates accessible via this category",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "the version of resource candidate"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "List of parties involved in this category",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "individual": {
    "tableName": "Individual",
    "endpoints": [
      {
        "operationId": "listIndividual",
        "path": "/individual",
        "method": "get"
      },
      {
        "operationId": "createIndividual",
        "path": "/individual",
        "method": "post"
      },
      {
        "operationId": "retrieveIndividual",
        "path": "/individual/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteIndividual",
        "path": "/individual/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchIndividual",
        "path": "/individual/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "externalReference": {
                "name": "externalReference",
                "type": "array",
                "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              },
              "partyCharacteristic": {
                "name": "partyCharacteristic",
                "type": "array",
                "description": "List of additional characteristics that a Party can take on.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "taxExemptionCertificate": {
                "name": "taxExemptionCertificate",
                "type": "array",
                "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the tax exemption within list of the exemptions"
                    },
                    "taxDefinition": {
                      "name": "taxDefinition",
                      "type": "array",
                      "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the tax."
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Tax name."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                            "properties": {
                              "startDateTime": {
                                "name": "startDateTime",
                                "type": "string",
                                "description": "Start of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              },
                              "endDateTime": {
                                "name": "endDateTime",
                                "type": "string",
                                "description": "End of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              }
                            }
                          },
                          "jurisdictionName": {
                            "name": "jurisdictionName",
                            "type": "string",
                            "description": "Name of the jurisdiction that levies the tax"
                          },
                          "jurisdictionLevel": {
                            "name": "jurisdictionLevel",
                            "type": "string",
                            "description": "Level of the jurisdiction that levies the tax"
                          },
                          "taxType": {
                            "name": "taxType",
                            "type": "string",
                            "description": "Type of the tax."
                          }
                        }
                      }
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "certificateNumber": {
                      "name": "certificateNumber",
                      "type": "string",
                      "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                    },
                    "issuingJurisdiction": {
                      "name": "issuingJurisdiction",
                      "type": "string",
                      "description": "Name of the jurisdiction that issued the exemption"
                    },
                    "reason": {
                      "name": "reason",
                      "type": "string",
                      "description": "Reason for the tax exemption"
                    },
                    "attachment": {
                      "name": "attachment",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "attachment_variant_0",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the attachment"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                              "name": "url",
                              "type": "string",
                              "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                            },
                            "content": {
                              "name": "content",
                              "type": "string",
                              "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                              "format": "base64"
                            },
                            "size": {
                              "name": "size",
                              "type": "object",
                              "description": "An amount in a given unit",
                              "properties": {
                                "amount": {
                                  "name": "amount",
                                  "type": "number",
                                  "description": "Numeric value in a given unit",
                                  "format": "float"
                                },
                                "units": {
                                  "name": "units",
                                  "type": "string",
                                  "description": "Unit"
                                }
                              }
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "attachmentType": {
                              "name": "attachmentType",
                              "type": "string",
                              "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                            },
                            "mimeType": {
                              "name": "mimeType",
                              "type": "string",
                              "description": "a technical characterization of the attachment content format using IETF Mime Types"
                            }
                          }
                        },
                        {
                          "name": "attachment_variant_1",
                          "type": "object",
                          "properties": {
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                              "name": "url",
                              "type": "string",
                              "description": "Link to the attachment media/content"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "creditRating": {
                "name": "creditRating",
                "type": "array",
                "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "creditAgencyName": {
                      "name": "creditAgencyName",
                      "type": "string",
                      "description": "Name of the credit agency giving the score"
                    },
                    "creditAgencyType": {
                      "name": "creditAgencyType",
                      "type": "string",
                      "description": "Type of the credit agency giving the score"
                    },
                    "ratingReference": {
                      "name": "ratingReference",
                      "type": "string",
                      "description": "Reference corresponding to the credit rating"
                    },
                    "ratingScore": {
                      "name": "ratingScore",
                      "type": "integer",
                      "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                      "format": "int32"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "List of parties and/or party roles related to this party",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "description": "Reference to Individual"
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "properties": {
                            "isLegalEntity": {
                              "name": "isLegalEntity",
                              "type": "boolean",
                              "description": "If value is true, the organization is a legal entity known by a national referential."
                            },
                            "isHeadOffice": {
                              "name": "isHeadOffice",
                              "type": "boolean",
                              "description": "If value is true, the organization is the head office"
                            },
                            "organizationType": {
                              "name": "organizationType",
                              "type": "string",
                              "description": "Type of Organization (company, department...)"
                            },
                            "existsDuring": {
                              "name": "existsDuring",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Organization name (department name for example)"
                            },
                            "nameType": {
                              "name": "nameType",
                              "type": "string",
                              "description": "Type of the name : Co, Inc, Ltd, etc."
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Valid values for the lifecycle state of the organization",
                              "enum": [
                                "initialized",
                                "validated",
                                "closed"
                              ]
                            },
                            "otherName": {
                              "name": "otherName",
                              "type": "array",
                              "description": "List of additional names by which the organization is known",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "tradingName": {
                                    "name": "tradingName",
                                    "type": "string",
                                    "description": "The name that the organization trades under"
                                  },
                                  "nameType": {
                                    "name": "nameType",
                                    "type": "string",
                                    "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Organization name (department name for example)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "organizationIdentification": {
                              "name": "organizationIdentification",
                              "type": "array",
                              "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "identificationId": {
                                    "name": "identificationId",
                                    "type": "string",
                                    "description": "Identifier"
                                  },
                                  "issuingAuthority": {
                                    "name": "issuingAuthority",
                                    "type": "string",
                                    "description": "Authority which has issued the identifier (chamber of commerce...)"
                                  },
                                  "issuingDate": {
                                    "name": "issuingDate",
                                    "type": "string",
                                    "description": "Date at which the identifier was issued",
                                    "format": "date-time"
                                  },
                                  "identificationType": {
                                    "name": "identificationType",
                                    "type": "string",
                                    "description": "Type of identification information used to identify the company in a country or internationally"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "organizationChildRelationship": {
                              "name": "organizationChildRelationship",
                              "type": "array",
                              "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                  },
                                  "organization": {
                                    "name": "organization",
                                    "type": "object",
                                    "properties": {}
                                  }
                                }
                              }
                            },
                            "organizationParentRelationship": {
                              "name": "organizationParentRelationship",
                              "type": "object",
                              "properties": {
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                },
                                "organization": {
                                  "name": "organization",
                                  "type": "object",
                                  "description": "Reference to OrganizationRef"
                                }
                              }
                            },
                            "tradingName": {
                              "name": "tradingName",
                              "type": "string",
                              "description": "Name that the organization (unit) trades under"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_4",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A description of the PartyRole."
                            },
                            "role": {
                              "name": "role",
                              "type": "string",
                              "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
                            },
                            "engagedParty": {
                              "name": "engagedParty",
                              "type": "object",
                              "description": "Reference to PartyRef"
                            },
                            "partyRoleSpecification": {
                              "name": "partyRoleSpecification",
                              "type": "object",
                              "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                              "properties": {}
                            },
                            "characteristic": {
                              "name": "characteristic",
                              "type": "array",
                              "description": "Describes the characteristic of a party role.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to Characteristic"
                              }
                            },
                            "account": {
                              "name": "account",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Account reference. A account may be a party account or a financial account.",
                                "properties": {}
                              }
                            },
                            "agreement": {
                              "name": "agreement",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                "properties": {}
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier for this contact medium."
                                  },
                                  "preferred": {
                                    "name": "preferred",
                                    "type": "boolean",
                                    "description": "If true, indicates that is the preferred contact medium"
                                  },
                                  "contactType": {
                                    "name": "contactType",
                                    "type": "string",
                                    "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "paymentMethod": {
                              "name": "paymentMethod",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                "properties": {}
                              }
                            },
                            "creditProfile": {
                              "name": "creditProfile",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditProfileDate": {
                                    "name": "creditProfileDate",
                                    "type": "string",
                                    "description": "The date the profile was established",
                                    "format": "date-time"
                                  },
                                  "creditRiskRating": {
                                    "name": "creditRiskRating",
                                    "type": "integer",
                                    "description": "This is an integer whose value is used to rate the risk"
                                  },
                                  "creditScore": {
                                    "name": "creditScore",
                                    "type": "integer",
                                    "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Used to track the lifecycle status of the party role."
                            },
                            "statusReason": {
                              "name": "statusReason",
                              "type": "string",
                              "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_5",
                          "type": "object",
                          "description": "When business partner is the Supplier ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_6",
                          "type": "object",
                          "description": "When business partner is the BusinessPartner ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_7",
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_8",
                          "type": "object",
                          "properties": {}
                        }
                      ]
                    }
                  }
                }
              },
              "contactMedium": {
                "name": "contactMedium",
                "type": "array",
                "description": "List of means for contacting the party, e.g. mobile phone, email address",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ContactMedium"
                }
              },
              "gender": {
                "name": "gender",
                "type": "string",
                "description": "Gender"
              },
              "placeOfBirth": {
                "name": "placeOfBirth",
                "type": "string",
                "description": "Reference to the place where the individual was born"
              },
              "countryOfBirth": {
                "name": "countryOfBirth",
                "type": "string",
                "description": "Country where the individual was born"
              },
              "nationality": {
                "name": "nationality",
                "type": "string",
                "description": "Nationality"
              },
              "maritalStatus": {
                "name": "maritalStatus",
                "type": "string",
                "description": "Marital status (married, divorced, widow ...)"
              },
              "birthDate": {
                "name": "birthDate",
                "type": "string",
                "description": "Birth date",
                "format": "date-time"
              },
              "deathDate": {
                "name": "deathDate",
                "type": "string",
                "description": "Date of death",
                "format": "date-time"
              },
              "title": {
                "name": "title",
                "type": "string",
                "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
              },
              "aristocraticTitle": {
                "name": "aristocraticTitle",
                "type": "string",
                "description": "e.g. Baron, Graf, Earl"
              },
              "generation": {
                "name": "generation",
                "type": "string",
                "description": "e.g.. Sr, Jr, III (the third)"
              },
              "preferredGivenName": {
                "name": "preferredGivenName",
                "type": "string",
                "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
              },
              "familyNamePrefix": {
                "name": "familyNamePrefix",
                "type": "string",
                "description": "Family name prefix"
              },
              "legalName": {
                "name": "legalName",
                "type": "string",
                "description": "Legal name or birth name (name one has for official purposes)"
              },
              "middleName": {
                "name": "middleName",
                "type": "string",
                "description": "Middles name or initial"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
              },
              "formattedName": {
                "name": "formattedName",
                "type": "string",
                "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
              },
              "location": {
                "name": "location",
                "type": "string",
                "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Valid values for the lifecycle state of the individual",
                "enum": [
                  "initialized",
                  "validated",
                  "deceased"
                ]
              },
              "otherName": {
                "name": "otherName",
                "type": "array",
                "description": "List of other names by which this individual is known",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                  "properties": {
                    "title": {
                      "name": "title",
                      "type": "string",
                      "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                    },
                    "aristocraticTitle": {
                      "name": "aristocraticTitle",
                      "type": "string",
                      "description": "e.g. Baron, Graf, Earl, etc."
                    },
                    "generation": {
                      "name": "generation",
                      "type": "string",
                      "description": "e.g. Sr, Jr, etc."
                    },
                    "givenName": {
                      "name": "givenName",
                      "type": "string",
                      "description": "First name"
                    },
                    "preferredGivenName": {
                      "name": "preferredGivenName",
                      "type": "string",
                      "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                    },
                    "familyNamePrefix": {
                      "name": "familyNamePrefix",
                      "type": "string",
                      "description": "Family name prefix"
                    },
                    "familyName": {
                      "name": "familyName",
                      "type": "string",
                      "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                    },
                    "legalName": {
                      "name": "legalName",
                      "type": "string",
                      "description": "Legal name or birth name (name one has for official purposes)"
                    },
                    "middleName": {
                      "name": "middleName",
                      "type": "string",
                      "description": "Middle name or initial"
                    },
                    "fullName": {
                      "name": "fullName",
                      "type": "string",
                      "description": "Full name flatten (first, middle, and last names)"
                    },
                    "formattedName": {
                      "name": "formattedName",
                      "type": "string",
                      "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "individualIdentification": {
                "name": "individualIdentification",
                "type": "array",
                "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "identificationId": {
                      "name": "identificationId",
                      "type": "string",
                      "description": "Identifier"
                    },
                    "issuingAuthority": {
                      "name": "issuingAuthority",
                      "type": "string",
                      "description": "Authority which has issued the identifier, such as: social security, town hall"
                    },
                    "issuingDate": {
                      "name": "issuingDate",
                      "type": "string",
                      "description": "Date at which the identifier was issued",
                      "format": "date-time"
                    },
                    "identificationType": {
                      "name": "identificationType",
                      "type": "string",
                      "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "attachment": {
                      "name": "attachment",
                      "type": "object",
                      "description": "Reference to AttachmentRefOrValue"
                    }
                  }
                }
              },
              "disability": {
                "name": "disability",
                "type": "array",
                "description": "List of disabilities suffered by the individual",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Lack or inadequate strength or ability.",
                  "properties": {
                    "disabilityCode": {
                      "name": "disabilityCode",
                      "type": "string",
                      "description": "Code of the disability"
                    },
                    "disabilityName": {
                      "name": "disabilityName",
                      "type": "string",
                      "description": "Name of the disability"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "languageAbility": {
                "name": "languageAbility",
                "type": "array",
                "description": "List of national languages known by the individual",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Ability of an individual to understand or converse in a language.",
                  "properties": {
                    "languageCode": {
                      "name": "languageCode",
                      "type": "string",
                      "description": "Language code (RFC 5646)"
                    },
                    "languageName": {
                      "name": "languageName",
                      "type": "string",
                      "description": "Language name"
                    },
                    "isFavouriteLanguage": {
                      "name": "isFavouriteLanguage",
                      "type": "boolean",
                      "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                    },
                    "writingProficiency": {
                      "name": "writingProficiency",
                      "type": "string",
                      "description": "Writing proficiency evaluated for this language"
                    },
                    "readingProficiency": {
                      "name": "readingProficiency",
                      "type": "string",
                      "description": "Reading proficiency evaluated for this language"
                    },
                    "speakingProficiency": {
                      "name": "speakingProficiency",
                      "type": "string",
                      "description": "Speaking proficiency evaluated for this language"
                    },
                    "listeningProficiency": {
                      "name": "listeningProficiency",
                      "type": "string",
                      "description": "Listening proficiency evaluated for this language"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "skill": {
                "name": "skill",
                "type": "array",
                "description": "List of skills exhibited by the individual",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                  "properties": {
                    "skillCode": {
                      "name": "skillCode",
                      "type": "string",
                      "description": "Code of the skill"
                    },
                    "skillName": {
                      "name": "skillName",
                      "type": "string",
                      "description": "Name of the skill, such as Java language"
                    },
                    "evaluatedLevel": {
                      "name": "evaluatedLevel",
                      "type": "string",
                      "description": "Level of expertise in a skill evaluated for an individual"
                    },
                    "comment": {
                      "name": "comment",
                      "type": "string",
                      "description": "A free text comment linked to the evaluation done"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "familyName": {
                "name": "familyName",
                "type": "string",
                "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
              },
              "givenName": {
                "name": "givenName",
                "type": "string",
                "description": "First name of the individual"
              }
            }
          }
        }
      }
    }
  },
  "organization": {
    "tableName": "Organization",
    "endpoints": [
      {
        "operationId": "listOrganization",
        "path": "/organization",
        "method": "get"
      },
      {
        "operationId": "createOrganization",
        "path": "/organization",
        "method": "post"
      },
      {
        "operationId": "retrieveOrganization",
        "path": "/organization/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteOrganization",
        "path": "/organization/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchOrganization",
        "path": "/organization/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "externalReference": {
                "name": "externalReference",
                "type": "array",
                "description": "List of identifiers of the Party in an external system, for example when party information is imported from a commerce system",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              },
              "partyCharacteristic": {
                "name": "partyCharacteristic",
                "type": "array",
                "description": "List of additional characteristics that a Party can take on.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "taxExemptionCertificate": {
                "name": "taxExemptionCertificate",
                "type": "array",
                "description": "List of tax exemptions granted to the party. For example, a war veteran might have partial exemption from state tax and a full exemption from federal tax",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the tax exemption within list of the exemptions"
                    },
                    "taxDefinition": {
                      "name": "taxDefinition",
                      "type": "array",
                      "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the tax."
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Tax name."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                            "properties": {
                              "startDateTime": {
                                "name": "startDateTime",
                                "type": "string",
                                "description": "Start of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              },
                              "endDateTime": {
                                "name": "endDateTime",
                                "type": "string",
                                "description": "End of the time period, using IETC-RFC-3339 format",
                                "format": "date-time"
                              }
                            }
                          },
                          "jurisdictionName": {
                            "name": "jurisdictionName",
                            "type": "string",
                            "description": "Name of the jurisdiction that levies the tax"
                          },
                          "jurisdictionLevel": {
                            "name": "jurisdictionLevel",
                            "type": "string",
                            "description": "Level of the jurisdiction that levies the tax"
                          },
                          "taxType": {
                            "name": "taxType",
                            "type": "string",
                            "description": "Type of the tax."
                          }
                        }
                      }
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "certificateNumber": {
                      "name": "certificateNumber",
                      "type": "string",
                      "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                    },
                    "issuingJurisdiction": {
                      "name": "issuingJurisdiction",
                      "type": "string",
                      "description": "Name of the jurisdiction that issued the exemption"
                    },
                    "reason": {
                      "name": "reason",
                      "type": "string",
                      "description": "Reason for the tax exemption"
                    },
                    "attachment": {
                      "name": "attachment",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "attachment_variant_0",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "The name of the attachment"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                              "name": "url",
                              "type": "string",
                              "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                            },
                            "content": {
                              "name": "content",
                              "type": "string",
                              "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                              "format": "base64"
                            },
                            "size": {
                              "name": "size",
                              "type": "object",
                              "description": "An amount in a given unit",
                              "properties": {
                                "amount": {
                                  "name": "amount",
                                  "type": "number",
                                  "description": "Numeric value in a given unit",
                                  "format": "float"
                                },
                                "units": {
                                  "name": "units",
                                  "type": "string",
                                  "description": "Unit"
                                }
                              }
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "attachmentType": {
                              "name": "attachmentType",
                              "type": "string",
                              "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                            },
                            "mimeType": {
                              "name": "mimeType",
                              "type": "string",
                              "description": "a technical characterization of the attachment content format using IETF Mime Types"
                            }
                          }
                        },
                        {
                          "name": "attachment_variant_1",
                          "type": "object",
                          "properties": {
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A narrative text describing the content of the attachment"
                            },
                            "url": {
                              "name": "url",
                              "type": "string",
                              "description": "Link to the attachment media/content"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "creditRating": {
                "name": "creditRating",
                "type": "array",
                "description": "List of credit profiles and scores for the party, typically received from an external credit broker",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "creditAgencyName": {
                      "name": "creditAgencyName",
                      "type": "string",
                      "description": "Name of the credit agency giving the score"
                    },
                    "creditAgencyType": {
                      "name": "creditAgencyType",
                      "type": "string",
                      "description": "Type of the credit agency giving the score"
                    },
                    "ratingReference": {
                      "name": "ratingReference",
                      "type": "string",
                      "description": "Reference corresponding to the credit rating"
                    },
                    "ratingScore": {
                      "name": "ratingScore",
                      "type": "integer",
                      "description": "A measure of a party's creditworthiness calculated on the basis of a combination of factors such as their income and credit history",
                      "format": "int32"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "List of parties and/or party roles related to this party",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "properties": {
                            "gender": {
                              "name": "gender",
                              "type": "string",
                              "description": "Gender"
                            },
                            "placeOfBirth": {
                              "name": "placeOfBirth",
                              "type": "string",
                              "description": "Reference to the place where the individual was born"
                            },
                            "countryOfBirth": {
                              "name": "countryOfBirth",
                              "type": "string",
                              "description": "Country where the individual was born"
                            },
                            "nationality": {
                              "name": "nationality",
                              "type": "string",
                              "description": "Nationality"
                            },
                            "maritalStatus": {
                              "name": "maritalStatus",
                              "type": "string",
                              "description": "Marital status (married, divorced, widow ...)"
                            },
                            "birthDate": {
                              "name": "birthDate",
                              "type": "string",
                              "description": "Birth date",
                              "format": "date-time"
                            },
                            "deathDate": {
                              "name": "deathDate",
                              "type": "string",
                              "description": "Date of death",
                              "format": "date-time"
                            },
                            "title": {
                              "name": "title",
                              "type": "string",
                              "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                            },
                            "aristocraticTitle": {
                              "name": "aristocraticTitle",
                              "type": "string",
                              "description": "e.g. Baron, Graf, Earl"
                            },
                            "generation": {
                              "name": "generation",
                              "type": "string",
                              "description": "e.g.. Sr, Jr, III (the third)"
                            },
                            "preferredGivenName": {
                              "name": "preferredGivenName",
                              "type": "string",
                              "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                            },
                            "familyNamePrefix": {
                              "name": "familyNamePrefix",
                              "type": "string",
                              "description": "Family name prefix"
                            },
                            "legalName": {
                              "name": "legalName",
                              "type": "string",
                              "description": "Legal name or birth name (name one has for official purposes)"
                            },
                            "middleName": {
                              "name": "middleName",
                              "type": "string",
                              "description": "Middles name or initial"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                            },
                            "formattedName": {
                              "name": "formattedName",
                              "type": "string",
                              "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                            },
                            "location": {
                              "name": "location",
                              "type": "string",
                              "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Valid values for the lifecycle state of the individual",
                              "enum": [
                                "initialized",
                                "validated",
                                "deceased"
                              ]
                            },
                            "otherName": {
                              "name": "otherName",
                              "type": "array",
                              "description": "List of other names by which this individual is known",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                "properties": {
                                  "title": {
                                    "name": "title",
                                    "type": "string",
                                    "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                  },
                                  "aristocraticTitle": {
                                    "name": "aristocraticTitle",
                                    "type": "string",
                                    "description": "e.g. Baron, Graf, Earl, etc."
                                  },
                                  "generation": {
                                    "name": "generation",
                                    "type": "string",
                                    "description": "e.g. Sr, Jr, etc."
                                  },
                                  "givenName": {
                                    "name": "givenName",
                                    "type": "string",
                                    "description": "First name"
                                  },
                                  "preferredGivenName": {
                                    "name": "preferredGivenName",
                                    "type": "string",
                                    "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                  },
                                  "familyNamePrefix": {
                                    "name": "familyNamePrefix",
                                    "type": "string",
                                    "description": "Family name prefix"
                                  },
                                  "familyName": {
                                    "name": "familyName",
                                    "type": "string",
                                    "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                  },
                                  "legalName": {
                                    "name": "legalName",
                                    "type": "string",
                                    "description": "Legal name or birth name (name one has for official purposes)"
                                  },
                                  "middleName": {
                                    "name": "middleName",
                                    "type": "string",
                                    "description": "Middle name or initial"
                                  },
                                  "fullName": {
                                    "name": "fullName",
                                    "type": "string",
                                    "description": "Full name flatten (first, middle, and last names)"
                                  },
                                  "formattedName": {
                                    "name": "formattedName",
                                    "type": "string",
                                    "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "individualIdentification": {
                              "name": "individualIdentification",
                              "type": "array",
                              "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "identificationId": {
                                    "name": "identificationId",
                                    "type": "string",
                                    "description": "Identifier"
                                  },
                                  "issuingAuthority": {
                                    "name": "issuingAuthority",
                                    "type": "string",
                                    "description": "Authority which has issued the identifier, such as: social security, town hall"
                                  },
                                  "issuingDate": {
                                    "name": "issuingDate",
                                    "type": "string",
                                    "description": "Date at which the identifier was issued",
                                    "format": "date-time"
                                  },
                                  "identificationType": {
                                    "name": "identificationType",
                                    "type": "string",
                                    "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "disability": {
                              "name": "disability",
                              "type": "array",
                              "description": "List of disabilities suffered by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Lack or inadequate strength or ability.",
                                "properties": {
                                  "disabilityCode": {
                                    "name": "disabilityCode",
                                    "type": "string",
                                    "description": "Code of the disability"
                                  },
                                  "disabilityName": {
                                    "name": "disabilityName",
                                    "type": "string",
                                    "description": "Name of the disability"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "languageAbility": {
                              "name": "languageAbility",
                              "type": "array",
                              "description": "List of national languages known by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Ability of an individual to understand or converse in a language.",
                                "properties": {
                                  "languageCode": {
                                    "name": "languageCode",
                                    "type": "string",
                                    "description": "Language code (RFC 5646)"
                                  },
                                  "languageName": {
                                    "name": "languageName",
                                    "type": "string",
                                    "description": "Language name"
                                  },
                                  "isFavouriteLanguage": {
                                    "name": "isFavouriteLanguage",
                                    "type": "boolean",
                                    "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                  },
                                  "writingProficiency": {
                                    "name": "writingProficiency",
                                    "type": "string",
                                    "description": "Writing proficiency evaluated for this language"
                                  },
                                  "readingProficiency": {
                                    "name": "readingProficiency",
                                    "type": "string",
                                    "description": "Reading proficiency evaluated for this language"
                                  },
                                  "speakingProficiency": {
                                    "name": "speakingProficiency",
                                    "type": "string",
                                    "description": "Speaking proficiency evaluated for this language"
                                  },
                                  "listeningProficiency": {
                                    "name": "listeningProficiency",
                                    "type": "string",
                                    "description": "Listening proficiency evaluated for this language"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "skill": {
                              "name": "skill",
                              "type": "array",
                              "description": "List of skills exhibited by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                "properties": {
                                  "skillCode": {
                                    "name": "skillCode",
                                    "type": "string",
                                    "description": "Code of the skill"
                                  },
                                  "skillName": {
                                    "name": "skillName",
                                    "type": "string",
                                    "description": "Name of the skill, such as Java language"
                                  },
                                  "evaluatedLevel": {
                                    "name": "evaluatedLevel",
                                    "type": "string",
                                    "description": "Level of expertise in a skill evaluated for an individual"
                                  },
                                  "comment": {
                                    "name": "comment",
                                    "type": "string",
                                    "description": "A free text comment linked to the evaluation done"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "familyName": {
                              "name": "familyName",
                              "type": "string",
                              "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                            },
                            "givenName": {
                              "name": "givenName",
                              "type": "string",
                              "description": "First name of the individual"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "description": "Reference to Organization"
                        },
                        {
                          "name": "partyOrPartyRole_variant_4",
                          "type": "object",
                          "properties": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "A description of the PartyRole."
                            },
                            "role": {
                              "name": "role",
                              "type": "string",
                              "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
                            },
                            "engagedParty": {
                              "name": "engagedParty",
                              "type": "object",
                              "description": "Reference to PartyRef"
                            },
                            "partyRoleSpecification": {
                              "name": "partyRoleSpecification",
                              "type": "object",
                              "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                              "properties": {}
                            },
                            "characteristic": {
                              "name": "characteristic",
                              "type": "array",
                              "description": "Describes the characteristic of a party role.",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to Characteristic"
                              }
                            },
                            "account": {
                              "name": "account",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Account reference. A account may be a party account or a financial account.",
                                "properties": {}
                              }
                            },
                            "agreement": {
                              "name": "agreement",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                                "properties": {}
                              }
                            },
                            "contactMedium": {
                              "name": "contactMedium",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Identifier for this contact medium."
                                  },
                                  "preferred": {
                                    "name": "preferred",
                                    "type": "boolean",
                                    "description": "If true, indicates that is the preferred contact medium"
                                  },
                                  "contactType": {
                                    "name": "contactType",
                                    "type": "string",
                                    "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "paymentMethod": {
                              "name": "paymentMethod",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                "properties": {}
                              }
                            },
                            "creditProfile": {
                              "name": "creditProfile",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "creditProfileDate": {
                                    "name": "creditProfileDate",
                                    "type": "string",
                                    "description": "The date the profile was established",
                                    "format": "date-time"
                                  },
                                  "creditRiskRating": {
                                    "name": "creditRiskRating",
                                    "type": "integer",
                                    "description": "This is an integer whose value is used to rate the risk"
                                  },
                                  "creditScore": {
                                    "name": "creditScore",
                                    "type": "integer",
                                    "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to RelatedPartyOrPartyRole"
                              }
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Used to track the lifecycle status of the party role."
                            },
                            "statusReason": {
                              "name": "statusReason",
                              "type": "string",
                              "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                            },
                            "validFor": {
                              "name": "validFor",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_5",
                          "type": "object",
                          "description": "When business partner is the Supplier ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_6",
                          "type": "object",
                          "description": "When business partner is the BusinessPartner ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_7",
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_8",
                          "type": "object",
                          "properties": {}
                        }
                      ]
                    }
                  }
                }
              },
              "contactMedium": {
                "name": "contactMedium",
                "type": "array",
                "description": "List of means for contacting the party, e.g. mobile phone, email address",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ContactMedium"
                }
              },
              "isLegalEntity": {
                "name": "isLegalEntity",
                "type": "boolean",
                "description": "If value is true, the organization is a legal entity known by a national referential."
              },
              "isHeadOffice": {
                "name": "isHeadOffice",
                "type": "boolean",
                "description": "If value is true, the organization is the head office"
              },
              "organizationType": {
                "name": "organizationType",
                "type": "string",
                "description": "Type of Organization (company, department...)"
              },
              "existsDuring": {
                "name": "existsDuring",
                "type": "object",
                "description": "Reference to TimePeriod"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Organization name (department name for example)"
              },
              "nameType": {
                "name": "nameType",
                "type": "string",
                "description": "Type of the name : Co, Inc, Ltd, etc."
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Valid values for the lifecycle state of the organization",
                "enum": [
                  "initialized",
                  "validated",
                  "closed"
                ]
              },
              "otherName": {
                "name": "otherName",
                "type": "array",
                "description": "List of additional names by which the organization is known",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "tradingName": {
                      "name": "tradingName",
                      "type": "string",
                      "description": "The name that the organization trades under"
                    },
                    "nameType": {
                      "name": "nameType",
                      "type": "string",
                      "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Organization name (department name for example)"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "organizationIdentification": {
                "name": "organizationIdentification",
                "type": "array",
                "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "identificationId": {
                      "name": "identificationId",
                      "type": "string",
                      "description": "Identifier"
                    },
                    "issuingAuthority": {
                      "name": "issuingAuthority",
                      "type": "string",
                      "description": "Authority which has issued the identifier (chamber of commerce...)"
                    },
                    "issuingDate": {
                      "name": "issuingDate",
                      "type": "string",
                      "description": "Date at which the identifier was issued",
                      "format": "date-time"
                    },
                    "identificationType": {
                      "name": "identificationType",
                      "type": "string",
                      "description": "Type of identification information used to identify the company in a country or internationally"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "attachment": {
                      "name": "attachment",
                      "type": "object",
                      "description": "Reference to AttachmentRefOrValue"
                    }
                  }
                }
              },
              "organizationChildRelationship": {
                "name": "organizationChildRelationship",
                "type": "array",
                "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                    },
                    "organization": {
                      "name": "organization",
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              },
              "organizationParentRelationship": {
                "name": "organizationParentRelationship",
                "type": "object",
                "properties": {
                  "relationshipType": {
                    "name": "relationshipType",
                    "type": "string",
                    "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                  },
                  "organization": {
                    "name": "organization",
                    "type": "object",
                    "description": "Reference to OrganizationRef"
                  }
                }
              },
              "tradingName": {
                "name": "tradingName",
                "type": "string",
                "description": "Name that the organization (unit) trades under"
              }
            }
          }
        }
      }
    }
  },
  "customer": {
    "tableName": "Customer",
    "endpoints": [
      {
        "operationId": "listCustomer",
        "path": "/customer",
        "method": "get"
      },
      {
        "operationId": "createCustomer",
        "path": "/customer",
        "method": "post"
      },
      {
        "operationId": "retrieveCustomer",
        "path": "/customer/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteCustomer",
        "path": "/customer/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchCustomer",
        "path": "/customer/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "A description of the PartyRole."
              },
              "role": {
                "name": "role",
                "type": "string",
                "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
              },
              "engagedParty": {
                "name": "engagedParty",
                "type": "object",
                "description": "A Party reference",
                "properties": {}
              },
              "partyRoleSpecification": {
                "name": "partyRoleSpecification",
                "type": "object",
                "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                "properties": {}
              },
              "characteristic": {
                "name": "characteristic",
                "type": "array",
                "description": "Describes the characteristic of a party role.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "description": "Collection of characteristic relationships",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "account": {
                "name": "account",
                "type": "array",
                "description": "Collection of accounts",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Account reference. A account may be a party account or a financial account.",
                  "properties": {}
                }
              },
              "agreement": {
                "name": "agreement",
                "type": "array",
                "description": "Collection of agreements",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                  "properties": {}
                }
              },
              "contactMedium": {
                "name": "contactMedium",
                "type": "array",
                "description": "Collection of contact mediums",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier for this contact medium."
                    },
                    "preferred": {
                      "name": "preferred",
                      "type": "boolean",
                      "description": "If true, indicates that is the preferred contact medium"
                    },
                    "contactType": {
                      "name": "contactType",
                      "type": "string",
                      "description": "Type of the contact medium to qualify it like pro email / personal email. This is not used to define the contact medium used."
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                      "properties": {
                        "startDateTime": {
                          "name": "startDateTime",
                          "type": "string",
                          "description": "Start of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        },
                        "endDateTime": {
                          "name": "endDateTime",
                          "type": "string",
                          "description": "End of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              },
              "paymentMethod": {
                "name": "paymentMethod",
                "type": "array",
                "description": "Collection of payment methods",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                  "properties": {}
                }
              },
              "creditProfile": {
                "name": "creditProfile",
                "type": "array",
                "description": "Collection of credit profiles",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "creditProfileDate": {
                      "name": "creditProfileDate",
                      "type": "string",
                      "description": "The date the profile was established",
                      "format": "date-time"
                    },
                    "creditRiskRating": {
                      "name": "creditRiskRating",
                      "type": "integer",
                      "description": "This is an integer whose value is used to rate the risk"
                    },
                    "creditScore": {
                      "name": "creditScore",
                      "type": "integer",
                      "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Collection of related parties",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "Reference to PartyRef"
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_2",
                          "type": "object",
                          "properties": {
                            "gender": {
                              "name": "gender",
                              "type": "string",
                              "description": "Gender"
                            },
                            "placeOfBirth": {
                              "name": "placeOfBirth",
                              "type": "string",
                              "description": "Reference to the place where the individual was born"
                            },
                            "countryOfBirth": {
                              "name": "countryOfBirth",
                              "type": "string",
                              "description": "Country where the individual was born"
                            },
                            "nationality": {
                              "name": "nationality",
                              "type": "string",
                              "description": "Nationality"
                            },
                            "maritalStatus": {
                              "name": "maritalStatus",
                              "type": "string",
                              "description": "Marital status (married, divorced, widow ...)"
                            },
                            "birthDate": {
                              "name": "birthDate",
                              "type": "string",
                              "description": "Birth date",
                              "format": "date-time"
                            },
                            "deathDate": {
                              "name": "deathDate",
                              "type": "string",
                              "description": "Date of death",
                              "format": "date-time"
                            },
                            "title": {
                              "name": "title",
                              "type": "string",
                              "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                            },
                            "aristocraticTitle": {
                              "name": "aristocraticTitle",
                              "type": "string",
                              "description": "e.g. Baron, Graf, Earl"
                            },
                            "generation": {
                              "name": "generation",
                              "type": "string",
                              "description": "e.g.. Sr, Jr, III (the third)"
                            },
                            "preferredGivenName": {
                              "name": "preferredGivenName",
                              "type": "string",
                              "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                            },
                            "familyNamePrefix": {
                              "name": "familyNamePrefix",
                              "type": "string",
                              "description": "Family name prefix"
                            },
                            "legalName": {
                              "name": "legalName",
                              "type": "string",
                              "description": "Legal name or birth name (name one has for official purposes)"
                            },
                            "middleName": {
                              "name": "middleName",
                              "type": "string",
                              "description": "Middles name or initial"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                            },
                            "formattedName": {
                              "name": "formattedName",
                              "type": "string",
                              "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                            },
                            "location": {
                              "name": "location",
                              "type": "string",
                              "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Valid values for the lifecycle state of the individual",
                              "enum": [
                                "initialized",
                                "validated",
                                "deceased"
                              ]
                            },
                            "otherName": {
                              "name": "otherName",
                              "type": "array",
                              "description": "List of other names by which this individual is known",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                "properties": {
                                  "title": {
                                    "name": "title",
                                    "type": "string",
                                    "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                  },
                                  "aristocraticTitle": {
                                    "name": "aristocraticTitle",
                                    "type": "string",
                                    "description": "e.g. Baron, Graf, Earl, etc."
                                  },
                                  "generation": {
                                    "name": "generation",
                                    "type": "string",
                                    "description": "e.g. Sr, Jr, etc."
                                  },
                                  "givenName": {
                                    "name": "givenName",
                                    "type": "string",
                                    "description": "First name"
                                  },
                                  "preferredGivenName": {
                                    "name": "preferredGivenName",
                                    "type": "string",
                                    "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                  },
                                  "familyNamePrefix": {
                                    "name": "familyNamePrefix",
                                    "type": "string",
                                    "description": "Family name prefix"
                                  },
                                  "familyName": {
                                    "name": "familyName",
                                    "type": "string",
                                    "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                  },
                                  "legalName": {
                                    "name": "legalName",
                                    "type": "string",
                                    "description": "Legal name or birth name (name one has for official purposes)"
                                  },
                                  "middleName": {
                                    "name": "middleName",
                                    "type": "string",
                                    "description": "Middle name or initial"
                                  },
                                  "fullName": {
                                    "name": "fullName",
                                    "type": "string",
                                    "description": "Full name flatten (first, middle, and last names)"
                                  },
                                  "formattedName": {
                                    "name": "formattedName",
                                    "type": "string",
                                    "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "individualIdentification": {
                              "name": "individualIdentification",
                              "type": "array",
                              "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "identificationId": {
                                    "name": "identificationId",
                                    "type": "string",
                                    "description": "Identifier"
                                  },
                                  "issuingAuthority": {
                                    "name": "issuingAuthority",
                                    "type": "string",
                                    "description": "Authority which has issued the identifier, such as: social security, town hall"
                                  },
                                  "issuingDate": {
                                    "name": "issuingDate",
                                    "type": "string",
                                    "description": "Date at which the identifier was issued",
                                    "format": "date-time"
                                  },
                                  "identificationType": {
                                    "name": "identificationType",
                                    "type": "string",
                                    "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "union",
                                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                    "oneOf": [
                                      {
                                        "name": "attachment_variant_0",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "The name of the attachment"
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A narrative text describing the content of the attachment"
                                          },
                                          "url": {
                                            "name": "url",
                                            "type": "string",
                                            "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                          },
                                          "content": {
                                            "name": "content",
                                            "type": "string",
                                            "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                            "format": "base64"
                                          },
                                          "size": {
                                            "name": "size",
                                            "type": "object",
                                            "description": "An amount in a given unit",
                                            "properties": {
                                              "amount": {
                                                "name": "amount",
                                                "type": "number",
                                                "description": "Numeric value in a given unit",
                                                "format": "float"
                                              },
                                              "units": {
                                                "name": "units",
                                                "type": "string",
                                                "description": "Unit"
                                              }
                                            }
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "attachmentType": {
                                            "name": "attachmentType",
                                            "type": "string",
                                            "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                          },
                                          "mimeType": {
                                            "name": "mimeType",
                                            "type": "string",
                                            "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                          }
                                        }
                                      },
                                      {
                                        "name": "attachment_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A narrative text describing the content of the attachment"
                                          },
                                          "url": {
                                            "name": "url",
                                            "type": "string",
                                            "description": "Link to the attachment media/content"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "disability": {
                              "name": "disability",
                              "type": "array",
                              "description": "List of disabilities suffered by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Lack or inadequate strength or ability.",
                                "properties": {
                                  "disabilityCode": {
                                    "name": "disabilityCode",
                                    "type": "string",
                                    "description": "Code of the disability"
                                  },
                                  "disabilityName": {
                                    "name": "disabilityName",
                                    "type": "string",
                                    "description": "Name of the disability"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "languageAbility": {
                              "name": "languageAbility",
                              "type": "array",
                              "description": "List of national languages known by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Ability of an individual to understand or converse in a language.",
                                "properties": {
                                  "languageCode": {
                                    "name": "languageCode",
                                    "type": "string",
                                    "description": "Language code (RFC 5646)"
                                  },
                                  "languageName": {
                                    "name": "languageName",
                                    "type": "string",
                                    "description": "Language name"
                                  },
                                  "isFavouriteLanguage": {
                                    "name": "isFavouriteLanguage",
                                    "type": "boolean",
                                    "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                  },
                                  "writingProficiency": {
                                    "name": "writingProficiency",
                                    "type": "string",
                                    "description": "Writing proficiency evaluated for this language"
                                  },
                                  "readingProficiency": {
                                    "name": "readingProficiency",
                                    "type": "string",
                                    "description": "Reading proficiency evaluated for this language"
                                  },
                                  "speakingProficiency": {
                                    "name": "speakingProficiency",
                                    "type": "string",
                                    "description": "Speaking proficiency evaluated for this language"
                                  },
                                  "listeningProficiency": {
                                    "name": "listeningProficiency",
                                    "type": "string",
                                    "description": "Listening proficiency evaluated for this language"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "skill": {
                              "name": "skill",
                              "type": "array",
                              "description": "List of skills exhibited by the individual",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                "properties": {
                                  "skillCode": {
                                    "name": "skillCode",
                                    "type": "string",
                                    "description": "Code of the skill"
                                  },
                                  "skillName": {
                                    "name": "skillName",
                                    "type": "string",
                                    "description": "Name of the skill, such as Java language"
                                  },
                                  "evaluatedLevel": {
                                    "name": "evaluatedLevel",
                                    "type": "string",
                                    "description": "Level of expertise in a skill evaluated for an individual"
                                  },
                                  "comment": {
                                    "name": "comment",
                                    "type": "string",
                                    "description": "A free text comment linked to the evaluation done"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "familyName": {
                              "name": "familyName",
                              "type": "string",
                              "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                            },
                            "givenName": {
                              "name": "givenName",
                              "type": "string",
                              "description": "First name of the individual"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_3",
                          "type": "object",
                          "properties": {
                            "isLegalEntity": {
                              "name": "isLegalEntity",
                              "type": "boolean",
                              "description": "If value is true, the organization is a legal entity known by a national referential."
                            },
                            "isHeadOffice": {
                              "name": "isHeadOffice",
                              "type": "boolean",
                              "description": "If value is true, the organization is the head office"
                            },
                            "organizationType": {
                              "name": "organizationType",
                              "type": "string",
                              "description": "Type of Organization (company, department...)"
                            },
                            "existsDuring": {
                              "name": "existsDuring",
                              "type": "object",
                              "description": "Reference to TimePeriod"
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Organization name (department name for example)"
                            },
                            "nameType": {
                              "name": "nameType",
                              "type": "string",
                              "description": "Type of the name : Co, Inc, Ltd, etc."
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Valid values for the lifecycle state of the organization",
                              "enum": [
                                "initialized",
                                "validated",
                                "closed"
                              ]
                            },
                            "otherName": {
                              "name": "otherName",
                              "type": "array",
                              "description": "List of additional names by which the organization is known",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "tradingName": {
                                    "name": "tradingName",
                                    "type": "string",
                                    "description": "The name that the organization trades under"
                                  },
                                  "nameType": {
                                    "name": "nameType",
                                    "type": "string",
                                    "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Organization name (department name for example)"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  }
                                }
                              }
                            },
                            "organizationIdentification": {
                              "name": "organizationIdentification",
                              "type": "array",
                              "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "identificationId": {
                                    "name": "identificationId",
                                    "type": "string",
                                    "description": "Identifier"
                                  },
                                  "issuingAuthority": {
                                    "name": "issuingAuthority",
                                    "type": "string",
                                    "description": "Authority which has issued the identifier (chamber of commerce...)"
                                  },
                                  "issuingDate": {
                                    "name": "issuingDate",
                                    "type": "string",
                                    "description": "Date at which the identifier was issued",
                                    "format": "date-time"
                                  },
                                  "identificationType": {
                                    "name": "identificationType",
                                    "type": "string",
                                    "description": "Type of identification information used to identify the company in a country or internationally"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "Reference to TimePeriod"
                                  },
                                  "attachment": {
                                    "name": "attachment",
                                    "type": "object",
                                    "description": "Reference to AttachmentRefOrValue"
                                  }
                                }
                              }
                            },
                            "organizationChildRelationship": {
                              "name": "organizationChildRelationship",
                              "type": "array",
                              "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                  },
                                  "organization": {
                                    "name": "organization",
                                    "type": "object",
                                    "properties": {}
                                  }
                                }
                              }
                            },
                            "organizationParentRelationship": {
                              "name": "organizationParentRelationship",
                              "type": "object",
                              "properties": {
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                },
                                "organization": {
                                  "name": "organization",
                                  "type": "object",
                                  "description": "Reference to OrganizationRef"
                                }
                              }
                            },
                            "tradingName": {
                              "name": "tradingName",
                              "type": "string",
                              "description": "Name that the organization (unit) trades under"
                            }
                          }
                        },
                        {
                          "name": "partyOrPartyRole_variant_4",
                          "type": "object",
                          "description": "Reference to PartyRole"
                        },
                        {
                          "name": "partyOrPartyRole_variant_5",
                          "type": "object",
                          "description": "When business partner is the Supplier ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_6",
                          "type": "object",
                          "description": "When business partner is the BusinessPartner ",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_7",
                          "type": "object",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_8",
                          "type": "object",
                          "properties": {}
                        }
                      ]
                    }
                  }
                }
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Used to track the lifecycle status of the party role."
              },
              "statusReason": {
                "name": "statusReason",
                "type": "string",
                "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "Reference to TimePeriod"
              }
            }
          }
        }
      }
    }
  },
  "measurementCollectionJob": {
    "tableName": "MeasurementCollectionJob",
    "endpoints": [
      {
        "operationId": "listMeasurementCollectionJob",
        "path": "/measurementCollectionJob",
        "method": "get"
      },
      {
        "operationId": "createMeasurementCollectionJob",
        "path": "/measurementCollectionJob",
        "method": "post"
      },
      {
        "operationId": "retrieveMeasurementCollectionJob",
        "path": "/measurementCollectionJob/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteMeasurementCollectionJob",
        "path": "/measurementCollectionJob/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchMeasurementCollectionJob",
        "path": "/measurementCollectionJob/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "adminState": {
                "name": "adminState",
                "type": "string",
                "description": "This is enumeration for Administrative state",
                "enum": [
                  "locked",
                  "unlocked"
                ]
              },
              "creationTime": {
                "name": "creationTime",
                "type": "string",
                "description": "The measurement job creation time.",
                "format": "date-time"
              },
              "executionState": {
                "name": "executionState",
                "type": "string",
                "description": "Possible values for the state of the execution",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "pending",
                  "inProgress",
                  "cancelled",
                  "completed",
                  "failed"
                ]
              },
              "fileTransferData": {
                "name": "fileTransferData",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "transportProtocol": {
                      "name": "transportProtocol",
                      "type": "string"
                    },
                    "fileLocation": {
                      "name": "fileLocation",
                      "type": "string",
                      "format": "uri"
                    },
                    "fileFormat": {
                      "name": "fileFormat",
                      "type": "string"
                    },
                    "compressionType": {
                      "name": "compressionType",
                      "type": "object",
                      "description": "File compression type.",
                      "properties": {
                        "compressionEnumType": {
                          "name": "compressionEnumType",
                          "type": "string",
                          "description": "Enumeration of supported compressions. All extensions allowed.",
                          "enum": [
                            "no_compression",
                            "gzip",
                            "vendor_ext",
                            "minor_ext"
                          ]
                        }
                      }
                    },
                    "retentionPeriod": {
                      "name": "retentionPeriod",
                      "type": "object",
                      "description": "A time interval in a given unit of time",
                      "properties": {
                        "amount": {
                          "name": "amount",
                          "type": "integer",
                          "description": "Time interval (number of seconds, minutes, hours, etc.)"
                        },
                        "units": {
                          "name": "units",
                          "type": "string",
                          "description": "Unit of time (seconds, minutes, hours, etc.)"
                        }
                      }
                    },
                    "packingType": {
                      "name": "packingType",
                      "type": "object",
                      "description": "Specify if the output file(s) are to be packed.",
                      "properties": {
                        "packingEnumType": {
                          "name": "packingEnumType",
                          "type": "string",
                          "description": "Enumeration of supported packing/packaging. All extensions allowed.",
                          "enum": [
                            "NO_PACKING",
                            "GZIP",
                            "TAR",
                            "VENDOR_EXT",
                            "MINOR_EXT"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "dataAccessEndpoint": {
                "name": "dataAccessEndpoint",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "uri": {
                      "name": "uri",
                      "type": "string",
                      "description": "URI for using the data access API",
                      "format": "uri"
                    },
                    "uriQueryFilter": {
                      "name": "uriQueryFilter",
                      "type": "object",
                      "properties": {
                        "mappings": {
                          "name": "mappings",
                          "type": "array",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "definition of a field used for filtering template with the associated attributes.",
                            "properties": {
                              "filterTemplate": {
                                "name": "filterTemplate",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of this DataFilterTemplate"
                                  },
                                  "href": {
                                    "name": "href",
                                    "type": "string",
                                    "description": "Hyperlink reference to this DataFilterTemplate",
                                    "format": "uri"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name given to this DataFilterTemplate"
                                  },
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Description of this DataFilterTemplate"
                                  }
                                }
                              },
                              "stringArray": {
                                "name": "stringArray",
                                "type": "object",
                                "properties": {
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the attribute"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "array",
                                    "description": "an array of field names",
                                    "items": {
                                      "name": "items",
                                      "type": "string",
                                      "description": "a field/attribute name"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "apiType": {
                      "name": "apiType",
                      "type": "string"
                    }
                  }
                }
              },
              "jobId": {
                "name": "jobId",
                "type": "string",
                "description": "The ID of the management job."
              },
              "jobPriority": {
                "name": "jobPriority",
                "type": "integer",
                "description": "The priority of the management job. The way the management application will use the JobPriority to schedule job execution is application specific and outside the scope. Integer, limited to a range of 1 to 10."
              },
              "lastModifiedTime": {
                "name": "lastModifiedTime",
                "type": "string",
                "description": "The last time that a measurement job was modified.",
                "format": "date-time"
              },
              "scheduleDefinition": {
                "name": "scheduleDefinition",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the schedule definition"
                    },
                    "scheduleDefinitionStartTime": {
                      "name": "scheduleDefinitionStartTime",
                      "type": "string",
                      "description": "The Start time of the Schedule Definition",
                      "format": "date-time"
                    },
                    "scheduleDefinitionEndTime": {
                      "name": "scheduleDefinitionEndTime",
                      "type": "string",
                      "description": "The End time of the Schedule Definition. If the attribute is empty the Schedule run forever, not having a time constraint.",
                      "format": "date-time"
                    },
                    "recurringFrequency": {
                      "name": "recurringFrequency",
                      "type": "string",
                      "description": "A recurring frequency to run a job within day that is included in schedule definition, for example: every 5 minutes, 15 minute, 30 minutes, 1 hour"
                    },
                    "excludedDate": {
                      "name": "excludedDate",
                      "type": "array",
                      "description": "A list of specific dates that should be excluded from the Schedule Definition.",
                      "items": {
                        "name": "items",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "scheduleDefinitionHourRange": {
                      "name": "scheduleDefinitionHourRange",
                      "type": "string",
                      "description": "A list of time ranges within a specific day that the schedule will be active on, for example 08:00-12:00, 16:00-19:00."
                    },
                    "WeeklyScheduledDefinition": {
                      "name": "WeeklyScheduledDefinition",
                      "type": "array",
                      "description": "The weekly schedule is used to define a schedule that is based on the days of the week, e.g. a schedule that will be active only on Monday and Tuesday.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "dates": {
                            "name": "dates",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "monthlyScheduleDayOfMonthDefinition": {
                      "name": "monthlyScheduleDayOfMonthDefinition",
                      "type": "array",
                      "description": "The schedule definition for running the threshold job",
                      "items": {
                        "name": "items",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "MonthlyScheduleDayOfWeekDefinition": {
                      "name": "MonthlyScheduleDayOfWeekDefinition",
                      "type": "object",
                      "properties": {
                        "dayOfMonthRecurrence": {
                          "name": "dayOfMonthRecurrence",
                          "type": "array",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "dates": {
                                "name": "dates",
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "recurringDaySequence": {
                          "name": "recurringDaySequence",
                          "type": "string"
                        }
                      }
                    },
                    "dateScheduleDefintion": {
                      "name": "dateScheduleDefintion",
                      "type": "array",
                      "description": "The date schedule is used to define a schedule that is based on specific dates, such as December 31st 2015, February 28th 2013",
                      "items": {
                        "name": "items",
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              },
              "consumingApplicationId": {
                "name": "consumingApplicationId",
                "type": "string",
                "description": "The identifier of the application that consumes performance indicators."
              },
              "producingApplicationId": {
                "name": "producingApplicationId",
                "type": "string",
                "description": "The identifier of the application that produces performance indicators."
              },
              "granularity": {
                "name": "granularity",
                "type": "string",
                "description": "Sampling rate of the collection or production of performance indicators.",
                "enum": [
                  "g_1mn",
                  "g_5mn",
                  "g_15mn",
                  "g_30mn",
                  "g_1h",
                  "g_24h",
                  "g_1m",
                  "g_1y",
                  "na"
                ]
              },
              "performanceIndicatorGroupSpecification": {
                "name": "performanceIndicatorGroupSpecification",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which a PerformanceIndicatorGroupSpecification is tagged."
                    },
                    "groupCategory": {
                      "name": "groupCategory",
                      "type": "string",
                      "description": "A grouping or set of PerformanceIndicatorGroupSpecifications that are classified together because of common characteristics, such as technology specific, service specific, or technology/service independent."
                    },
                    "performanceIndicatorSpecification": {
                      "name": "performanceIndicatorSpecification",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "union",
                        "description": "A product to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation & @referredType are related to the product entity and not the RelatedProductRefOrValue class itself",
                        "oneOf": [
                          {
                            "name": "items_variant_0",
                            "type": "object",
                            "properties": {
                              "version": {
                                "name": "version",
                                "type": "string",
                                "description": "Version of the performance indicator specification"
                              }
                            }
                          },
                          {
                            "name": "items_variant_1",
                            "type": "object",
                            "properties": {
                              "name": {
                                "name": "name",
                                "type": "string",
                                "description": "A word, term, or phrase by which a PerformanceIndicatorSpecification is known and distinguished from other PerformanceIndicatorSpecifications."
                              },
                              "description": {
                                "name": "description",
                                "type": "string",
                                "description": "A narrative that explains in detail what the PerformanceIndicatorSpecification is."
                              },
                              "perspective": {
                                "name": "perspective",
                                "type": "string",
                                "description": "The point of view for the PerformanceIndicatorSpecification, such as a single user instance or aggregation."
                              },
                              "indicatorCategory": {
                                "name": "indicatorCategory",
                                "type": "string",
                                "description": "A grouping or set of PerformanceIndicatorSpecifications that are classified together because of common characteristics, such as technology specific, service specific, or technology/service independent."
                              },
                              "indicatorType": {
                                "name": "indicatorType",
                                "type": "string",
                                "description": "This is enumeration for Indicator Type",
                                "enum": [
                                  "string",
                                  "int",
                                  "float",
                                  "double"
                                ]
                              },
                              "derivationAlgorithm": {
                                "name": "derivationAlgorithm",
                                "type": "string",
                                "description": "A step-by-step procedure used to calculate the value of PerformanceIndicator."
                              },
                              "derivationMethod": {
                                "name": "derivationMethod",
                                "type": "string",
                                "description": "For simple calculations, the method used to calculate the value of a PerformanceIndicator, such as average, minimum, maximum, sum and so forth."
                              },
                              "validFor": {
                                "name": "validFor",
                                "type": "object",
                                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                                "properties": {
                                  "startDateTime": {
                                    "name": "startDateTime",
                                    "type": "string",
                                    "description": "Start of the time period, using IETC-RFC-3339 format",
                                    "format": "date-time"
                                  },
                                  "endDateTime": {
                                    "name": "endDateTime",
                                    "type": "string",
                                    "description": "End of the time period, using IETC-RFC-3339 format",
                                    "format": "date-time"
                                  }
                                }
                              },
                              "collectionType": {
                                "name": "collectionType",
                                "type": "string",
                                "description": "This is enumeration for CollectionType state",
                                "enum": [
                                  "cumulative",
                                  "delta",
                                  "discrete_event",
                                  "gauge",
                                  "status_inspection"
                                ]
                              },
                              "indicatorUnit": {
                                "name": "indicatorUnit",
                                "type": "string",
                                "description": "The unit by which the indicator is measured. For example, seconds, KBs, rate per second, etc."
                              },
                              "performanceIndicatorSpecRelationship": {
                                "name": "performanceIndicatorSpecRelationship",
                                "type": "array",
                                "items": {
                                  "name": "items",
                                  "type": "object",
                                  "properties": {
                                    "relationshipType": {
                                      "name": "relationshipType",
                                      "type": "string",
                                      "description": ""
                                    },
                                    "role": {
                                      "name": "role",
                                      "type": "string",
                                      "description": "The association role for this service specification"
                                    },
                                    "validFor": {
                                      "name": "validFor",
                                      "type": "object",
                                      "description": "Reference to TimePeriod"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "performanceIndicatorSpecification": {
                "name": "performanceIndicatorSpecification",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to PerformanceIndicatorSpecificationRefOrValue"
                }
              },
              "trackingRecord": {
                "name": "trackingRecord",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "Describes the action being done, such as: ack, clear"
                    },
                    "characteristic": {
                      "name": "characteristic",
                      "type": "array",
                      "description": "A generic list of any type of elements. Used for vendor Extensions or loose element encapsulation from other namespaces",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the characteristic"
                          },
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "Data type of the value of the characteristic"
                          },
                          "characteristicRelationship": {
                            "name": "characteristicRelationship",
                            "type": "array",
                            "description": "Collection of characteristic relationships",
                            "items": {
                              "name": "items",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "name": "id",
                                  "type": "string",
                                  "description": "Unique identifier of the characteristic"
                                },
                                "relationshipType": {
                                  "name": "relationshipType",
                                  "type": "string",
                                  "description": "The type of relationship"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "systemId": {
                      "name": "systemId",
                      "type": "string",
                      "description": "Describes the system Id from which the action was done"
                    },
                    "time": {
                      "name": "time",
                      "type": "string",
                      "description": "Describes the time at which the action was done",
                      "format": "date-time"
                    },
                    "user": {
                      "name": "user",
                      "type": "string",
                      "description": "Describes the user doing the action"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the TrackingRecord."
                    }
                  }
                }
              },
              "monitoredInstancesCriteria": {
                "name": "monitoredInstancesCriteria",
                "type": "object",
                "properties": {
                  "monitoredObjectInstances": {
                    "name": "monitoredObjectInstances",
                    "type": "array",
                    "items": {
                      "name": "items",
                      "type": "string"
                    }
                  }
                }
              },
              "monitoredClassCriteria": {
                "name": "monitoredClassCriteria",
                "type": "object",
                "properties": {
                  "monitoredObjectClass": {
                    "name": "monitoredObjectClass",
                    "type": "string",
                    "description": "A monitored object class for specifying the set of instances that are referenced by a PM query."
                  },
                  "objectInstanceFilter": {
                    "name": "objectInstanceFilter",
                    "type": "string",
                    "description": "A filter that can be used in conjunction with the monitored object class for specifying the set of instances that are referenced by a PM query."
                  }
                }
              },
              "outputFormat": {
                "name": "outputFormat",
                "type": "string"
              },
              "reportingPeriod": {
                "name": "reportingPeriod",
                "type": "string",
                "description": "Possible values for the reporting period",
                "enum": [
                  "r_1mn",
                  "r_5mn",
                  "r_15mn",
                  "r_30mn",
                  "r_1h",
                  "r_24h",
                  "na"
                ]
              },
              "jobCollectionFilter": {
                "name": "jobCollectionFilter",
                "type": "object",
                "description": "Reference to DataFilterMap"
              },
              "searchTaskFilter": {
                "name": "searchTaskFilter",
                "type": "object",
                "description": "Reference to DataFilterMap"
              },
              "jobOnDemand": {
                "name": "jobOnDemand",
                "type": "boolean",
                "description": "True if the job is a single job to be executed immediately in which case the reportingPeriod and scheduleDefinition would not be applicable, false otherwise"
              }
            }
          }
        }
      }
    }
  },
  "performanceIndicatorGroupSpecification": {
    "tableName": "PerformanceIndicatorGroupSpecification",
    "endpoints": [
      {
        "operationId": "listPerformanceIndicatorGroupSpecification",
        "path": "/performanceIndicatorGroupSpecification",
        "method": "get"
      },
      {
        "operationId": "createPerformanceIndicatorGroupSpecification",
        "path": "/performanceIndicatorGroupSpecification",
        "method": "post"
      },
      {
        "operationId": "retrievePerformanceIndicatorGroupSpecification",
        "path": "/performanceIndicatorGroupSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePerformanceIndicatorGroupSpecification",
        "path": "/performanceIndicatorGroupSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPerformanceIndicatorGroupSpecification",
        "path": "/performanceIndicatorGroupSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "A word, term, or phrase by which a PerformanceIndicatorGroupSpecification is tagged."
              },
              "groupCategory": {
                "name": "groupCategory",
                "type": "string",
                "description": "A grouping or set of PerformanceIndicatorGroupSpecifications that are classified together because of common characteristics, such as technology specific, service specific, or technology/service independent."
              },
              "performanceIndicatorSpecification": {
                "name": "performanceIndicatorSpecification",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "A product to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation & @referredType are related to the product entity and not the RelatedProductRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "Version of the performance indicator specification"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "A word, term, or phrase by which a PerformanceIndicatorSpecification is known and distinguished from other PerformanceIndicatorSpecifications."
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative that explains in detail what the PerformanceIndicatorSpecification is."
                        },
                        "perspective": {
                          "name": "perspective",
                          "type": "string",
                          "description": "The point of view for the PerformanceIndicatorSpecification, such as a single user instance or aggregation."
                        },
                        "indicatorCategory": {
                          "name": "indicatorCategory",
                          "type": "string",
                          "description": "A grouping or set of PerformanceIndicatorSpecifications that are classified together because of common characteristics, such as technology specific, service specific, or technology/service independent."
                        },
                        "indicatorType": {
                          "name": "indicatorType",
                          "type": "string",
                          "description": "This is enumeration for Indicator Type",
                          "enum": [
                            "string",
                            "int",
                            "float",
                            "double"
                          ]
                        },
                        "derivationAlgorithm": {
                          "name": "derivationAlgorithm",
                          "type": "string",
                          "description": "A step-by-step procedure used to calculate the value of PerformanceIndicator."
                        },
                        "derivationMethod": {
                          "name": "derivationMethod",
                          "type": "string",
                          "description": "For simple calculations, the method used to calculate the value of a PerformanceIndicator, such as average, minimum, maximum, sum and so forth."
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                          "properties": {
                            "startDateTime": {
                              "name": "startDateTime",
                              "type": "string",
                              "description": "Start of the time period, using IETC-RFC-3339 format",
                              "format": "date-time"
                            },
                            "endDateTime": {
                              "name": "endDateTime",
                              "type": "string",
                              "description": "End of the time period, using IETC-RFC-3339 format",
                              "format": "date-time"
                            }
                          }
                        },
                        "collectionType": {
                          "name": "collectionType",
                          "type": "string",
                          "description": "This is enumeration for CollectionType state",
                          "enum": [
                            "cumulative",
                            "delta",
                            "discrete_event",
                            "gauge",
                            "status_inspection"
                          ]
                        },
                        "indicatorUnit": {
                          "name": "indicatorUnit",
                          "type": "string",
                          "description": "The unit by which the indicator is measured. For example, seconds, KBs, rate per second, etc."
                        },
                        "performanceIndicatorSpecRelationship": {
                          "name": "performanceIndicatorSpecRelationship",
                          "type": "array",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "relationshipType": {
                                "name": "relationshipType",
                                "type": "string",
                                "description": ""
                              },
                              "role": {
                                "name": "role",
                                "type": "string",
                                "description": "The association role for this service specification"
                              },
                              "validFor": {
                                "name": "validFor",
                                "type": "object",
                                "description": "Reference to TimePeriod"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "performanceIndicatorSpecification": {
    "tableName": "PerformanceIndicatorSpecification",
    "endpoints": [
      {
        "operationId": "listPerformanceIndicatorSpecification",
        "path": "/performanceIndicatorSpecification",
        "method": "get"
      },
      {
        "operationId": "createPerformanceIndicatorSpecification",
        "path": "/performanceIndicatorSpecification",
        "method": "post"
      },
      {
        "operationId": "retrievePerformanceIndicatorSpecification",
        "path": "/performanceIndicatorSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deletePerformanceIndicatorSpecification",
        "path": "/performanceIndicatorSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchPerformanceIndicatorSpecification",
        "path": "/performanceIndicatorSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "A word, term, or phrase by which a PerformanceIndicatorSpecification is known and distinguished from other PerformanceIndicatorSpecifications."
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "A narrative that explains in detail what the PerformanceIndicatorSpecification is."
              },
              "perspective": {
                "name": "perspective",
                "type": "string",
                "description": "The point of view for the PerformanceIndicatorSpecification, such as a single user instance or aggregation."
              },
              "indicatorCategory": {
                "name": "indicatorCategory",
                "type": "string",
                "description": "A grouping or set of PerformanceIndicatorSpecifications that are classified together because of common characteristics, such as technology specific, service specific, or technology/service independent."
              },
              "indicatorType": {
                "name": "indicatorType",
                "type": "string",
                "description": "This is enumeration for Indicator Type",
                "enum": [
                  "string",
                  "int",
                  "float",
                  "double"
                ]
              },
              "derivationAlgorithm": {
                "name": "derivationAlgorithm",
                "type": "string",
                "description": "A step-by-step procedure used to calculate the value of PerformanceIndicator."
              },
              "derivationMethod": {
                "name": "derivationMethod",
                "type": "string",
                "description": "For simple calculations, the method used to calculate the value of a PerformanceIndicator, such as average, minimum, maximum, sum and so forth."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "collectionType": {
                "name": "collectionType",
                "type": "string",
                "description": "This is enumeration for CollectionType state",
                "enum": [
                  "cumulative",
                  "delta",
                  "discrete_event",
                  "gauge",
                  "status_inspection"
                ]
              },
              "indicatorUnit": {
                "name": "indicatorUnit",
                "type": "string",
                "description": "The unit by which the indicator is measured. For example, seconds, KBs, rate per second, etc."
              },
              "performanceIndicatorSpecRelationship": {
                "name": "performanceIndicatorSpecRelationship",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": ""
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this service specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "performanceMeasurement": {
    "tableName": "PerformanceMeasurement",
    "endpoints": [
      {
        "operationId": "listPerformanceMeasurement",
        "path": "/performanceMeasurement",
        "method": "get"
      },
      {
        "operationId": "retrievePerformanceMeasurement",
        "path": "/performanceMeasurement/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "A free-text description of the performance measurement"
              },
              "measurementCollectionJob": {
                "name": "measurementCollectionJob",
                "type": "object",
                "description": "Reference to a MeasurementCollectionJob",
                "properties": {}
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "relatedMeasurement": {
                "name": "relatedMeasurement",
                "type": "array",
                "description": "related Performance measurements array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": ""
                    },
                    "relatedMeasurement": {
                      "name": "relatedMeasurement",
                      "type": "union",
                      "description": "A PerformanceMeasurement to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation & @referredType are related to the product entity and not the RelatedProductRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "relatedMeasurement_variant_0",
                          "type": "object",
                          "properties": {
                            "version": {
                              "name": "version",
                              "type": "string",
                              "description": "Version of the PerformanceMeasurement"
                            }
                          }
                        },
                        {
                          "name": "relatedMeasurement_variant_1",
                          "type": "object",
                          "description": "Reference to PerformanceMeasurement"
                        }
                      ]
                    },
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for this PerformanceMeasurement"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "tag": {
                "name": "tag",
                "type": "object",
                "description": "The optional tag object attached to this entire measurement"
              }
            }
          }
        }
      }
    }
  },
  "trackingRecord": {
    "tableName": "TrackingRecord",
    "endpoints": [
      {
        "operationId": "listTrackingRecord",
        "path": "/trackingRecord",
        "method": "get"
      },
      {
        "operationId": "retrieveTrackingRecord",
        "path": "/trackingRecord/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Describes the action being done, such as: ack, clear"
              },
              "characteristic": {
                "name": "characteristic",
                "type": "array",
                "description": "A generic list of any type of elements. Used for vendor Extensions or loose element encapsulation from other namespaces",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "description": "Collection of characteristic relationships",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "systemId": {
                "name": "systemId",
                "type": "string",
                "description": "Describes the system Id from which the action was done"
              },
              "time": {
                "name": "time",
                "type": "string",
                "description": "Describes the time at which the action was done",
                "format": "date-time"
              },
              "user": {
                "name": "user",
                "type": "string",
                "description": "Describes the user doing the action"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "Identifier of the TrackingRecord."
              }
            }
          }
        }
      }
    }
  },
  "sla": {
    "tableName": "Sla",
    "endpoints": [
      {
        "operationId": "slaFind",
        "path": "/sla",
        "method": "get"
      },
      {
        "operationId": "slaCreate",
        "path": "/sla",
        "method": "post"
      },
      {
        "operationId": "slaGet",
        "path": "/sla/{slaId}",
        "method": "get"
      },
      {
        "operationId": "slaUpdate",
        "path": "/sla/{slaId}",
        "method": "put"
      },
      {
        "operationId": "slaDelete",
        "path": "/sla/{slaId}",
        "method": "delete"
      },
      {
        "operationId": "slaPatch",
        "path": "/sla/{slaId}",
        "method": "patch"
      }
    ]
  },
  "slaViolation": {
    "tableName": "SlaViolation",
    "endpoints": [
      {
        "operationId": "slaViolationFind",
        "path": "/slaViolation",
        "method": "get"
      },
      {
        "operationId": "slaViolationCreate",
        "path": "/slaViolation",
        "method": "post"
      },
      {
        "operationId": "slaViolationGet",
        "path": "/slaViolation/{slaViolationId}",
        "method": "get"
      },
      {
        "operationId": "slaViolationUpdate",
        "path": "/slaViolation/{slaViolationId}",
        "method": "put"
      },
      {
        "operationId": "slaViolationDelete",
        "path": "/slaViolation/{slaViolationId}",
        "method": "delete"
      },
      {
        "operationId": "slaViolationPatch",
        "path": "/slaViolation/{slaViolationId}",
        "method": "patch"
      }
    ]
  },
  "cancelProductOrder": {
    "tableName": "CancelProductOrder",
    "endpoints": [
      {
        "operationId": "listCancelProductOrder",
        "path": "/cancelProductOrder",
        "method": "get"
      },
      {
        "operationId": "createCancelProductOrder",
        "path": "/cancelProductOrder",
        "method": "post"
      },
      {
        "operationId": "retrieveCancelProductOrder",
        "path": "/cancelProductOrder/{id}",
        "method": "get"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "productOrder": {
                "name": "productOrder",
                "type": "object",
                "description": "A reference to an existing Product Order.",
                "properties": {}
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date and time when the CancelProductOrder was created",
                "format": "date-time"
              },
              "requestedCancellationDate": {
                "name": "requestedCancellationDate",
                "type": "string",
                "description": "Date when the submitter wants the order to be cancelled",
                "format": "date-time"
              },
              "cancellationReason": {
                "name": "cancellationReason",
                "type": "string",
                "description": "Reason why the order is cancelled."
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Possible values for the state of a task",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "inProgress",
                  "cancelled",
                  "done",
                  "terminatedWithError"
                ]
              },
              "effectiveCancellationDate": {
                "name": "effectiveCancellationDate",
                "type": "string",
                "description": "Date when the order is cancelled.",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "productOrder": {
    "tableName": "ProductOrder",
    "endpoints": [
      {
        "operationId": "listProductOrder",
        "path": "/productOrder",
        "method": "get"
      },
      {
        "operationId": "createProductOrder",
        "path": "/productOrder",
        "method": "post"
      },
      {
        "operationId": "retrieveProductOrder",
        "path": "/productOrder/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProductOrder",
        "path": "/productOrder/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchProductOrder",
        "path": "/productOrder/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "agreement": {
                "name": "agreement",
                "type": "array",
                "description": "A reference to an agreement defined in the context of the product order",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                  "properties": {}
                }
              },
              "billingAccount": {
                "name": "billingAccount",
                "type": "object",
                "properties": {
                  "ratingType": {
                    "name": "ratingType",
                    "type": "string",
                    "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
                  }
                }
              },
              "state": {
                "name": "state",
                "type": "string",
                "description": "Possible values for the state of the order",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "pending",
                  "held",
                  "inProgress",
                  "cancelled",
                  "completed",
                  "failed",
                  "partial",
                  "assessingCancellation",
                  "pendingCancellation",
                  "draft",
                  "inProgress.accepted"
                ]
              },
              "requestedInitialState": {
                "name": "requestedInitialState",
                "type": "string",
                "description": "Possible values for the requested initial state of the order from client- by default acknowledged is considered",
                "enum": [
                  "acknowledged",
                  "draft"
                ]
              },
              "cancellationDate": {
                "name": "cancellationDate",
                "type": "string",
                "description": "Date when the order is cancelled. This is used when order is cancelled. ",
                "format": "date-time"
              },
              "cancellationReason": {
                "name": "cancellationReason",
                "type": "string",
                "description": "Reason why the order is cancelled. This is used when order is cancelled. "
              },
              "category": {
                "name": "category",
                "type": "string",
                "description": "Used to categorize the order from a business perspective that can be useful for the OM system (e.g. \"enterprise\", \"residential\", ...)"
              },
              "channel": {
                "name": "channel",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "channel": {
                      "name": "channel",
                      "type": "object",
                      "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
                      "properties": {}
                    }
                  }
                }
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the product order"
              },
              "expectedCompletionDate": {
                "name": "expectedCompletionDate",
                "type": "string",
                "description": "Expected delivery date amended by the provider",
                "format": "date-time"
              },
              "externalId": {
                "name": "externalId",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              },
              "note": {
                "name": "note",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "notificationContact": {
                "name": "notificationContact",
                "type": "string",
                "description": "Contact attached to the order to send back information regarding this order"
              },
              "orderTotalPrice": {
                "name": "orderTotalPrice",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains in detail the semantics of this order item price."
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A short descriptive name such as \"Subscription price\"."
                    },
                    "productOfferingPrice": {
                      "name": "productOfferingPrice",
                      "type": "object",
                      "properties": {
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "Version of the product offering price"
                        }
                      }
                    },
                    "recurringChargePeriod": {
                      "name": "recurringChargePeriod",
                      "type": "string",
                      "description": "Could be month, week..."
                    },
                    "unitOfMeasure": {
                      "name": "unitOfMeasure",
                      "type": "string",
                      "description": "Could be minutes, GB..."
                    },
                    "billingAccount": {
                      "name": "billingAccount",
                      "type": "object",
                      "description": "Reference to BillingAccountRef"
                    },
                    "priceAlteration": {
                      "name": "priceAlteration",
                      "type": "array",
                      "description": "a strucuture used to describe a price alteration",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "applicationDuration": {
                            "name": "applicationDuration",
                            "type": "integer",
                            "description": "Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge)"
                          },
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "A narrative that explains in detail the semantics of this order item price alteration"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the order item price alteration"
                          },
                          "productOfferingPrice": {
                            "name": "productOfferingPrice",
                            "type": "object",
                            "description": "Reference to ProductOfferingPriceRef"
                          },
                          "priceType": {
                            "name": "priceType",
                            "type": "string",
                            "description": "A category that describes the price such as recurring, one time and usage."
                          },
                          "priority": {
                            "name": "priority",
                            "type": "integer",
                            "description": "Priority level for applying this alteration among all the defined alterations on the order item price"
                          },
                          "recurringChargePeriod": {
                            "name": "recurringChargePeriod",
                            "type": "string",
                            "description": "Could be month, week..."
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "Could be minutes, GB..."
                          },
                          "price": {
                            "name": "price",
                            "type": "object",
                            "properties": {
                              "dutyFreeAmount": {
                                "name": "dutyFreeAmount",
                                "type": "object",
                                "description": "A base / value business entity used to represent money",
                                "properties": {
                                  "unit": {
                                    "name": "unit",
                                    "type": "string",
                                    "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "number",
                                    "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                                    "format": "float"
                                  }
                                }
                              },
                              "percentage": {
                                "name": "percentage",
                                "type": "number",
                                "description": "Percentage to apply for ProdOfferPriceAlteration",
                                "format": "float"
                              },
                              "taxIncludedAmount": {
                                "name": "taxIncludedAmount",
                                "type": "object",
                                "description": "Reference to Money"
                              },
                              "taxRate": {
                                "name": "taxRate",
                                "type": "number",
                                "description": "Tax rate",
                                "format": "float"
                              }
                            }
                          }
                        }
                      }
                    },
                    "price": {
                      "name": "price",
                      "type": "object",
                      "description": "Reference to Price"
                    },
                    "priceType": {
                      "name": "priceType",
                      "type": "string",
                      "description": "indicate if the price is for recurrent or no-recurrent charge"
                    }
                  }
                }
              },
              "payment": {
                "name": "payment",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "If an immediate payment has been done at the product order submission, the payment information are captured and stored (as a reference) in the order.",
                  "properties": {}
                }
              },
              "orderRelationship": {
                "name": "orderRelationship",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "@referredType": {
                      "name": "@referredType",
                      "type": "string",
                      "description": "The actual type of the target instance when needed for disambiguation."
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Id of the related order"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Relationship type as correlates, triggers, etc..."
                    }
                  }
                }
              },
              "priority": {
                "name": "priority",
                "type": "string",
                "description": "A way that can be used by consumers to prioritize orders in OM system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)"
              },
              "productOfferingQualification": {
                "name": "productOfferingQualification",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "A productOfferingQualification that has been executed previously",
                  "properties": {}
                }
              },
              "quote": {
                "name": "quote",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Quote reference. It's a Quote that has been executed previously.",
                  "properties": {}
                }
              },
              "productOrderErrorMessage": {
                "name": "productOrderErrorMessage",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "name": "timestamp",
                      "type": "string",
                      "description": "Date when the error happened",
                      "format": "date-time"
                    },
                    "productOrderItem": {
                      "name": "productOrderItem",
                      "type": "array",
                      "description": "A list of order item references corresponded to this error",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "ProductOrderHref": {
                            "name": "ProductOrderHref",
                            "type": "string",
                            "description": "Reference of the related ProductOrder."
                          },
                          "@referredType": {
                            "name": "@referredType",
                            "type": "string",
                            "description": "The actual type of the target instance when needed for disambiguation."
                          },
                          "productOrderId": {
                            "name": "productOrderId",
                            "type": "string",
                            "description": "Unique identifier of a refered product order."
                          },
                          "productOrderItemId": {
                            "name": "productOrderItemId",
                            "type": "string",
                            "description": "Identifier of a product order item. "
                          }
                        }
                      }
                    }
                  }
                }
              },
              "productOrderJeopardyAlert": {
                "name": "productOrderJeopardyAlert",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "productOrderItem": {
                      "name": "productOrderItem",
                      "type": "array",
                      "description": "A list of order item references corresponded to this alert",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to ProductOrderItemRef"
                      }
                    }
                  }
                }
              },
              "productOrderMilestone": {
                "name": "productOrderMilestone",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "productOrderItem": {
                      "name": "productOrderItem",
                      "type": "array",
                      "description": "A list of order item references corresponded to this alert",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to ProductOrderItemRef"
                      }
                    }
                  }
                }
              },
              "productOrderItem": {
                "name": "productOrderItem",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "quantity": {
                      "name": "quantity",
                      "type": "integer",
                      "description": "Quantity ordered"
                    },
                    "action": {
                      "name": "action",
                      "type": "string",
                      "description": "action to be performed on the entity managed by the item",
                      "enum": [
                        "add",
                        "modify",
                        "delete",
                        "noChange"
                      ]
                    },
                    "appointment": {
                      "name": "appointment",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "An explanatory text regarding the appointment made with a party"
                        }
                      }
                    },
                    "billingAccount": {
                      "name": "billingAccount",
                      "type": "object",
                      "description": "Reference to BillingAccountRef"
                    },
                    "itemPrice": {
                      "name": "itemPrice",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to OrderPrice"
                      }
                    },
                    "itemTerm": {
                      "name": "itemTerm",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "description": {
                            "name": "description",
                            "type": "string",
                            "description": "Description of the productOrderTerm"
                          },
                          "duration": {
                            "name": "duration",
                            "type": "object",
                            "description": "A time interval in a given unit of time",
                            "properties": {
                              "amount": {
                                "name": "amount",
                                "type": "integer",
                                "description": "Time interval (number of seconds, minutes, hours, etc.)"
                              },
                              "units": {
                                "name": "units",
                                "type": "string",
                                "description": "Unit of time (seconds, minutes, hours, etc.)"
                              }
                            }
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the productOrderTerm"
                          }
                        }
                      }
                    },
                    "itemTotalPrice": {
                      "name": "itemTotalPrice",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to OrderPrice"
                      }
                    },
                    "note": {
                      "name": "note",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to Note"
                      }
                    },
                    "payment": {
                      "name": "payment",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to PaymentRef"
                      }
                    },
                    "product": {
                      "name": "product",
                      "type": "union",
                      "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product entity and not the ProductRefOrValue class itself",
                      "oneOf": [
                        {
                          "name": "product_variant_0",
                          "type": "object",
                          "properties": {
                            "agreementItem": {
                              "name": "agreementItem",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "agreementName": {
                                    "name": "agreementName",
                                    "type": "string",
                                    "description": "Name of the related entity."
                                  },
                                  "agreementHref": {
                                    "name": "agreementHref",
                                    "type": "string",
                                    "description": "Reference of the related entity."
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  },
                                  "agreementId": {
                                    "name": "agreementId",
                                    "type": "string",
                                    "description": "Unique identifier of a related entity."
                                  },
                                  "agreementItemId": {
                                    "name": "agreementItemId",
                                    "type": "string",
                                    "description": "Id of an item of a Agreement"
                                  }
                                }
                              }
                            },
                            "billingAccount": {
                              "name": "billingAccount",
                              "type": "object",
                              "description": "Reference to BillingAccountRef"
                            },
                            "creationDate": {
                              "name": "creationDate",
                              "type": "string",
                              "description": "Date and time when the product was created",
                              "format": "date-time"
                            },
                            "description": {
                              "name": "description",
                              "type": "string",
                              "description": "Is the description of the product. It could be copied from the description of the Product Offering."
                            },
                            "isBundle": {
                              "name": "isBundle",
                              "type": "boolean",
                              "description": "If true, the product is a ProductBundle which is an instantiation of a BundledProductOffering. If false, the product is a ProductComponent which is an instantiation of a SimpleProductOffering."
                            },
                            "isCustomerVisible": {
                              "name": "isCustomerVisible",
                              "type": "boolean",
                              "description": "If true, the product is visible by the customer."
                            },
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "Name of the product. It could be the same as the name of the product offering"
                            },
                            "orderDate": {
                              "name": "orderDate",
                              "type": "string",
                              "description": "Is the date when the product was ordered",
                              "format": "date-time"
                            },
                            "productCharacteristic": {
                              "name": "productCharacteristic",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Unique identifier of the characteristic"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the characteristic"
                                  },
                                  "valueType": {
                                    "name": "valueType",
                                    "type": "string",
                                    "description": "Data type of the value of the characteristic"
                                  },
                                  "characteristicRelationship": {
                                    "name": "characteristicRelationship",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "name": "id",
                                          "type": "string",
                                          "description": "Unique identifier of the characteristic"
                                        },
                                        "relationshipType": {
                                          "name": "relationshipType",
                                          "type": "string",
                                          "description": "The type of relationship"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "productOffering": {
                              "name": "productOffering",
                              "type": "object",
                              "properties": {
                                "version": {
                                  "name": "version",
                                  "type": "string",
                                  "description": "Version of the product offering"
                                }
                              }
                            },
                            "productOrderItem": {
                              "name": "productOrderItem",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "orderItemAction": {
                                    "name": "orderItemAction",
                                    "type": "object",
                                    "description": "Reference to ItemActionType"
                                  },
                                  "orderHref": {
                                    "name": "orderHref",
                                    "type": "string",
                                    "description": "Reference of the related entity."
                                  },
                                  "@referredType": {
                                    "name": "@referredType",
                                    "type": "string",
                                    "description": "The actual type of the target instance when needed for disambiguation."
                                  },
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the  Order"
                                  },
                                  "orderId": {
                                    "name": "orderId",
                                    "type": "string",
                                    "description": "Unique identifier of a related  Order."
                                  },
                                  "orderItemId": {
                                    "name": "orderItemId",
                                    "type": "string",
                                    "description": "Id of an item of a prduct order"
                                  }
                                }
                              }
                            },
                            "product": {
                              "name": "product",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Reference to ProductRefOrValue"
                              }
                            },
                            "productPrice": {
                              "name": "productPrice",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Description of the Product price"
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the Product price"
                                  },
                                  "productOfferingPrice": {
                                    "name": "productOfferingPrice",
                                    "type": "object",
                                    "description": "Reference to ProductOfferingPriceRef"
                                  },
                                  "recurringChargePeriod": {
                                    "name": "recurringChargePeriod",
                                    "type": "string",
                                    "description": "Used for recurring charge to indicate period (month, week, etc..)."
                                  },
                                  "unitOfMeasure": {
                                    "name": "unitOfMeasure",
                                    "type": "string",
                                    "description": "Unit of Measure if price depending on it (Gb, SMS volume, etc..)"
                                  },
                                  "price": {
                                    "name": "price",
                                    "type": "object",
                                    "description": "Reference to Price"
                                  },
                                  "priceAlteration": {
                                    "name": "priceAlteration",
                                    "type": "array",
                                    "items": {
                                      "name": "items",
                                      "type": "object",
                                      "description": "Reference to PriceAlteration"
                                    }
                                  },
                                  "priceType": {
                                    "name": "priceType",
                                    "type": "string",
                                    "description": "indicate if the price is for recurrent or no-recurrent charge"
                                  }
                                }
                              }
                            },
                            "productRelationship": {
                              "name": "productRelationship",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "name": "id",
                                    "type": "string",
                                    "description": "Id of the related product"
                                  },
                                  "relationshipType": {
                                    "name": "relationshipType",
                                    "type": "string",
                                    "description": "Relationship type as relies on, bundles, etc..."
                                  }
                                }
                              }
                            },
                            "productSerialNumber": {
                              "name": "productSerialNumber",
                              "type": "string",
                              "description": "Is the serial number for the product. This is typically applicable to tangible products e.g. Broadband Router."
                            },
                            "productSpecification": {
                              "name": "productSpecification",
                              "type": "object",
                              "properties": {
                                "version": {
                                  "name": "version",
                                  "type": "string",
                                  "description": "Version of the product specification"
                                },
                                "targetProductSchema": {
                                  "name": "targetProductSchema",
                                  "type": "object",
                                  "description": "The reference object to the schema and type of target product which is described by product specification",
                                  "properties": {
                                    "@type": {
                                      "name": "@type",
                                      "type": "string",
                                      "description": "Class type of the target product"
                                    },
                                    "@schemaLocation": {
                                      "name": "@schemaLocation",
                                      "type": "string",
                                      "description": "This field provides a link to the schema describing the target product",
                                      "format": "uri"
                                    }
                                  }
                                }
                              }
                            },
                            "productTerm": {
                              "name": "productTerm",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "name": "description",
                                    "type": "string",
                                    "description": "Description of the productTerm"
                                  },
                                  "duration": {
                                    "name": "duration",
                                    "type": "object",
                                    "description": "Reference to Duration"
                                  },
                                  "validFor": {
                                    "name": "validFor",
                                    "type": "object",
                                    "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                                    "properties": {
                                      "startDateTime": {
                                        "name": "startDateTime",
                                        "type": "string",
                                        "description": "Start of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      },
                                      "endDateTime": {
                                        "name": "endDateTime",
                                        "type": "string",
                                        "description": "End of the time period, using IETC-RFC-3339 format",
                                        "format": "date-time"
                                      }
                                    }
                                  },
                                  "name": {
                                    "name": "name",
                                    "type": "string",
                                    "description": "Name of the productTerm"
                                  }
                                }
                              }
                            },
                            "realizingResource": {
                              "name": "realizingResource",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Resource reference, for when Resource is used by other entities.",
                                "properties": {}
                              }
                            },
                            "realizingService": {
                              "name": "realizingService",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "description": "Service reference, for when Service is used by other entities.",
                                "properties": {}
                              }
                            },
                            "relatedParty": {
                              "name": "relatedParty",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string",
                                    "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                  },
                                  "partyOrPartyRole": {
                                    "name": "partyOrPartyRole",
                                    "type": "union",
                                    "description": "",
                                    "oneOf": [
                                      {
                                        "name": "partyOrPartyRole_variant_0",
                                        "type": "object",
                                        "description": "A Party reference",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "partyId": {
                                            "name": "partyId",
                                            "type": "string",
                                            "description": "The identifier of the engaged party that is linked to the PartyRole object."
                                          },
                                          "partyName": {
                                            "name": "partyName",
                                            "type": "string",
                                            "description": "The name of the engaged party that is linked to the PartyRole object."
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_2",
                                        "type": "object",
                                        "properties": {
                                          "gender": {
                                            "name": "gender",
                                            "type": "string",
                                            "description": "Gender"
                                          },
                                          "placeOfBirth": {
                                            "name": "placeOfBirth",
                                            "type": "string",
                                            "description": "Reference to the place where the individual was born"
                                          },
                                          "countryOfBirth": {
                                            "name": "countryOfBirth",
                                            "type": "string",
                                            "description": "Country where the individual was born"
                                          },
                                          "nationality": {
                                            "name": "nationality",
                                            "type": "string",
                                            "description": "Nationality"
                                          },
                                          "maritalStatus": {
                                            "name": "maritalStatus",
                                            "type": "string",
                                            "description": "Marital status (married, divorced, widow ...)"
                                          },
                                          "birthDate": {
                                            "name": "birthDate",
                                            "type": "string",
                                            "description": "Birth date",
                                            "format": "date-time"
                                          },
                                          "deathDate": {
                                            "name": "deathDate",
                                            "type": "string",
                                            "description": "Date of death",
                                            "format": "date-time"
                                          },
                                          "title": {
                                            "name": "title",
                                            "type": "string",
                                            "description": "Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ..."
                                          },
                                          "aristocraticTitle": {
                                            "name": "aristocraticTitle",
                                            "type": "string",
                                            "description": "e.g. Baron, Graf, Earl"
                                          },
                                          "generation": {
                                            "name": "generation",
                                            "type": "string",
                                            "description": "e.g.. Sr, Jr, III (the third)"
                                          },
                                          "preferredGivenName": {
                                            "name": "preferredGivenName",
                                            "type": "string",
                                            "description": "Contains the chosen name by which the individual prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                          },
                                          "familyNamePrefix": {
                                            "name": "familyNamePrefix",
                                            "type": "string",
                                            "description": "Family name prefix"
                                          },
                                          "legalName": {
                                            "name": "legalName",
                                            "type": "string",
                                            "description": "Legal name or birth name (name one has for official purposes)"
                                          },
                                          "middleName": {
                                            "name": "middleName",
                                            "type": "string",
                                            "description": "Middles name or initial"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "Full name flatten (first, middle, and last names) - this is the name that is expected to be presented in reference data types such as PartyRef, RelatedParty, etc. that refer to Individual"
                                          },
                                          "formattedName": {
                                            "name": "formattedName",
                                            "type": "string",
                                            "description": "A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean)"
                                          },
                                          "location": {
                                            "name": "location",
                                            "type": "string",
                                            "description": "Temporary current location of the individual (may be used if the individual has approved its sharing)"
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Valid values for the lifecycle state of the individual",
                                            "enum": [
                                              "initialized",
                                              "validated",
                                              "deceased"
                                            ]
                                          },
                                          "otherName": {
                                            "name": "otherName",
                                            "type": "array",
                                            "description": "List of other names by which this individual is known",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name.",
                                              "properties": {
                                                "title": {
                                                  "name": "title",
                                                  "type": "string",
                                                  "description": "Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,...."
                                                },
                                                "aristocraticTitle": {
                                                  "name": "aristocraticTitle",
                                                  "type": "string",
                                                  "description": "e.g. Baron, Graf, Earl, etc."
                                                },
                                                "generation": {
                                                  "name": "generation",
                                                  "type": "string",
                                                  "description": "e.g. Sr, Jr, etc."
                                                },
                                                "givenName": {
                                                  "name": "givenName",
                                                  "type": "string",
                                                  "description": "First name"
                                                },
                                                "preferredGivenName": {
                                                  "name": "preferredGivenName",
                                                  "type": "string",
                                                  "description": "Contains the chosen name by which the person prefers to be addressed. Note: This name may be a name other than a given name, such as a nickname"
                                                },
                                                "familyNamePrefix": {
                                                  "name": "familyNamePrefix",
                                                  "type": "string",
                                                  "description": "Family name prefix"
                                                },
                                                "familyName": {
                                                  "name": "familyName",
                                                  "type": "string",
                                                  "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                                },
                                                "legalName": {
                                                  "name": "legalName",
                                                  "type": "string",
                                                  "description": "Legal name or birth name (name one has for official purposes)"
                                                },
                                                "middleName": {
                                                  "name": "middleName",
                                                  "type": "string",
                                                  "description": "Middle name or initial"
                                                },
                                                "fullName": {
                                                  "name": "fullName",
                                                  "type": "string",
                                                  "description": "Full name flatten (first, middle, and last names)"
                                                },
                                                "formattedName": {
                                                  "name": "formattedName",
                                                  "type": "string",
                                                  "description": ". A fully formatted name in one string with all of its pieces in their proper place and all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese, Korean, etc.)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "individualIdentification": {
                                            "name": "individualIdentification",
                                            "type": "array",
                                            "description": "List of official identifications issued to the individual, such as passport, driving licence, social security number",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "identificationId": {
                                                  "name": "identificationId",
                                                  "type": "string",
                                                  "description": "Identifier"
                                                },
                                                "issuingAuthority": {
                                                  "name": "issuingAuthority",
                                                  "type": "string",
                                                  "description": "Authority which has issued the identifier, such as: social security, town hall"
                                                },
                                                "issuingDate": {
                                                  "name": "issuingDate",
                                                  "type": "string",
                                                  "description": "Date at which the identifier was issued",
                                                  "format": "date-time"
                                                },
                                                "identificationType": {
                                                  "name": "identificationType",
                                                  "type": "string",
                                                  "description": "Identification type (passport, national identity card, drivers license, social security number, birth certificate)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "attachment": {
                                                  "name": "attachment",
                                                  "type": "union",
                                                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                                                  "oneOf": [
                                                    {
                                                      "name": "attachment_variant_0",
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "name": "name",
                                                          "type": "string",
                                                          "description": "The name of the attachment"
                                                        },
                                                        "description": {
                                                          "name": "description",
                                                          "type": "string",
                                                          "description": "A narrative text describing the content of the attachment"
                                                        },
                                                        "url": {
                                                          "name": "url",
                                                          "type": "string",
                                                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                                                        },
                                                        "content": {
                                                          "name": "content",
                                                          "type": "string",
                                                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                                                          "format": "base64"
                                                        },
                                                        "size": {
                                                          "name": "size",
                                                          "type": "object",
                                                          "description": "An amount in a given unit",
                                                          "properties": {
                                                            "amount": {
                                                              "name": "amount",
                                                              "type": "number",
                                                              "description": "Numeric value in a given unit",
                                                              "format": "float"
                                                            },
                                                            "units": {
                                                              "name": "units",
                                                              "type": "string",
                                                              "description": "Unit"
                                                            }
                                                          }
                                                        },
                                                        "validFor": {
                                                          "name": "validFor",
                                                          "type": "object",
                                                          "description": "Reference to TimePeriod"
                                                        },
                                                        "attachmentType": {
                                                          "name": "attachmentType",
                                                          "type": "string",
                                                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                                                        },
                                                        "mimeType": {
                                                          "name": "mimeType",
                                                          "type": "string",
                                                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "attachment_variant_1",
                                                      "type": "object",
                                                      "properties": {
                                                        "description": {
                                                          "name": "description",
                                                          "type": "string",
                                                          "description": "A narrative text describing the content of the attachment"
                                                        },
                                                        "url": {
                                                          "name": "url",
                                                          "type": "string",
                                                          "description": "Link to the attachment media/content"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "disability": {
                                            "name": "disability",
                                            "type": "array",
                                            "description": "List of disabilities suffered by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Lack or inadequate strength or ability.",
                                              "properties": {
                                                "disabilityCode": {
                                                  "name": "disabilityCode",
                                                  "type": "string",
                                                  "description": "Code of the disability"
                                                },
                                                "disabilityName": {
                                                  "name": "disabilityName",
                                                  "type": "string",
                                                  "description": "Name of the disability"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "languageAbility": {
                                            "name": "languageAbility",
                                            "type": "array",
                                            "description": "List of national languages known by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Ability of an individual to understand or converse in a language.",
                                              "properties": {
                                                "languageCode": {
                                                  "name": "languageCode",
                                                  "type": "string",
                                                  "description": "Language code (RFC 5646)"
                                                },
                                                "languageName": {
                                                  "name": "languageName",
                                                  "type": "string",
                                                  "description": "Language name"
                                                },
                                                "isFavouriteLanguage": {
                                                  "name": "isFavouriteLanguage",
                                                  "type": "boolean",
                                                  "description": "A “true” value specifies whether the language is considered by the individual as his favourite one"
                                                },
                                                "writingProficiency": {
                                                  "name": "writingProficiency",
                                                  "type": "string",
                                                  "description": "Writing proficiency evaluated for this language"
                                                },
                                                "readingProficiency": {
                                                  "name": "readingProficiency",
                                                  "type": "string",
                                                  "description": "Reading proficiency evaluated for this language"
                                                },
                                                "speakingProficiency": {
                                                  "name": "speakingProficiency",
                                                  "type": "string",
                                                  "description": "Speaking proficiency evaluated for this language"
                                                },
                                                "listeningProficiency": {
                                                  "name": "listeningProficiency",
                                                  "type": "string",
                                                  "description": "Listening proficiency evaluated for this language"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "skill": {
                                            "name": "skill",
                                            "type": "array",
                                            "description": "List of skills exhibited by the individual",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level).",
                                              "properties": {
                                                "skillCode": {
                                                  "name": "skillCode",
                                                  "type": "string",
                                                  "description": "Code of the skill"
                                                },
                                                "skillName": {
                                                  "name": "skillName",
                                                  "type": "string",
                                                  "description": "Name of the skill, such as Java language"
                                                },
                                                "evaluatedLevel": {
                                                  "name": "evaluatedLevel",
                                                  "type": "string",
                                                  "description": "Level of expertise in a skill evaluated for an individual"
                                                },
                                                "comment": {
                                                  "name": "comment",
                                                  "type": "string",
                                                  "description": "A free text comment linked to the evaluation done"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "familyName": {
                                            "name": "familyName",
                                            "type": "string",
                                            "description": "Contains the non-chosen or inherited name. Also known as last name in the Western context"
                                          },
                                          "givenName": {
                                            "name": "givenName",
                                            "type": "string",
                                            "description": "First name of the individual"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_3",
                                        "type": "object",
                                        "properties": {
                                          "isLegalEntity": {
                                            "name": "isLegalEntity",
                                            "type": "boolean",
                                            "description": "If value is true, the organization is a legal entity known by a national referential."
                                          },
                                          "isHeadOffice": {
                                            "name": "isHeadOffice",
                                            "type": "boolean",
                                            "description": "If value is true, the organization is the head office"
                                          },
                                          "organizationType": {
                                            "name": "organizationType",
                                            "type": "string",
                                            "description": "Type of Organization (company, department...)"
                                          },
                                          "existsDuring": {
                                            "name": "existsDuring",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "Organization name (department name for example)"
                                          },
                                          "nameType": {
                                            "name": "nameType",
                                            "type": "string",
                                            "description": "Type of the name : Co, Inc, Ltd, etc."
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Valid values for the lifecycle state of the organization",
                                            "enum": [
                                              "initialized",
                                              "validated",
                                              "closed"
                                            ]
                                          },
                                          "otherName": {
                                            "name": "otherName",
                                            "type": "array",
                                            "description": "List of additional names by which the organization is known",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "tradingName": {
                                                  "name": "tradingName",
                                                  "type": "string",
                                                  "description": "The name that the organization trades under"
                                                },
                                                "nameType": {
                                                  "name": "nameType",
                                                  "type": "string",
                                                  "description": "Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh"
                                                },
                                                "name": {
                                                  "name": "name",
                                                  "type": "string",
                                                  "description": "Organization name (department name for example)"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "organizationIdentification": {
                                            "name": "organizationIdentification",
                                            "type": "array",
                                            "description": "List of official identifiers given to the organization, for example company number in the registry of companies",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "identificationId": {
                                                  "name": "identificationId",
                                                  "type": "string",
                                                  "description": "Identifier"
                                                },
                                                "issuingAuthority": {
                                                  "name": "issuingAuthority",
                                                  "type": "string",
                                                  "description": "Authority which has issued the identifier (chamber of commerce...)"
                                                },
                                                "issuingDate": {
                                                  "name": "issuingDate",
                                                  "type": "string",
                                                  "description": "Date at which the identifier was issued",
                                                  "format": "date-time"
                                                },
                                                "identificationType": {
                                                  "name": "identificationType",
                                                  "type": "string",
                                                  "description": "Type of identification information used to identify the company in a country or internationally"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "attachment": {
                                                  "name": "attachment",
                                                  "type": "object",
                                                  "description": "Reference to AttachmentRefOrValue"
                                                }
                                              }
                                            }
                                          },
                                          "organizationChildRelationship": {
                                            "name": "organizationChildRelationship",
                                            "type": "array",
                                            "description": "List of organizations that are contained within this organization. For example if this organization is the Legal Department, the child organizations might include Claims, Courts, Contracts",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "relationshipType": {
                                                  "name": "relationshipType",
                                                  "type": "string",
                                                  "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                                },
                                                "organization": {
                                                  "name": "organization",
                                                  "type": "object",
                                                  "properties": {}
                                                }
                                              }
                                            }
                                          },
                                          "organizationParentRelationship": {
                                            "name": "organizationParentRelationship",
                                            "type": "object",
                                            "properties": {
                                              "relationshipType": {
                                                "name": "relationshipType",
                                                "type": "string",
                                                "description": "Type of the relationship. Could be juridical, hierarchical, geographical, functional for example."
                                              },
                                              "organization": {
                                                "name": "organization",
                                                "type": "object",
                                                "description": "Reference to OrganizationRef"
                                              }
                                            }
                                          },
                                          "tradingName": {
                                            "name": "tradingName",
                                            "type": "string",
                                            "description": "Name that the organization (unit) trades under"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_4",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "name": "name",
                                            "type": "string",
                                            "description": "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity."
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "A description of the PartyRole."
                                          },
                                          "role": {
                                            "name": "role",
                                            "type": "string",
                                            "description": "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification."
                                          },
                                          "engagedParty": {
                                            "name": "engagedParty",
                                            "type": "object",
                                            "description": "Reference to PartyRef"
                                          },
                                          "partyRoleSpecification": {
                                            "name": "partyRoleSpecification",
                                            "type": "object",
                                            "description": "Party role specification reference. A party role specification gives additional details on the part played by a party in a given context.",
                                            "properties": {}
                                          },
                                          "characteristic": {
                                            "name": "characteristic",
                                            "type": "array",
                                            "description": "Describes the characteristic of a party role.",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to Characteristic"
                                            }
                                          },
                                          "account": {
                                            "name": "account",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Account reference. A account may be a party account or a financial account.",
                                              "properties": {}
                                            }
                                          },
                                          "agreement": {
                                            "name": "agreement",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to AgreementRef"
                                            }
                                          },
                                          "contactMedium": {
                                            "name": "contactMedium",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Identifier for this contact medium."
                                                },
                                                "preferred": {
                                                  "name": "preferred",
                                                  "type": "boolean",
                                                  "description": "If true, indicates that is the preferred contact medium"
                                                },
                                                "contactType": {
                                                  "name": "contactType",
                                                  "type": "string",
                                                  "description": "Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used."
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "paymentMethod": {
                                            "name": "paymentMethod",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
                                              "properties": {}
                                            }
                                          },
                                          "creditProfile": {
                                            "name": "creditProfile",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "creditProfileDate": {
                                                  "name": "creditProfileDate",
                                                  "type": "string",
                                                  "description": "The date the profile was established",
                                                  "format": "date-time"
                                                },
                                                "creditRiskRating": {
                                                  "name": "creditRiskRating",
                                                  "type": "integer",
                                                  "description": "This is an integer whose value is used to rate the risk"
                                                },
                                                "creditScore": {
                                                  "name": "creditScore",
                                                  "type": "integer",
                                                  "description": "A measure of a person or organizations creditworthiness calculated on the basis of a combination of factors such as their income and credit history"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                }
                                              }
                                            }
                                          },
                                          "relatedParty": {
                                            "name": "relatedParty",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to RelatedPartyOrPartyRole"
                                            }
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "Used to track the lifecycle status of the party role."
                                          },
                                          "statusReason": {
                                            "name": "statusReason",
                                            "type": "string",
                                            "description": "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection."
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          }
                                        }
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_5",
                                        "type": "object",
                                        "description": "When business partner is the Supplier ",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_6",
                                        "type": "object",
                                        "description": "When business partner is the BusinessPartner ",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_7",
                                        "type": "object",
                                        "properties": {}
                                      },
                                      {
                                        "name": "partyOrPartyRole_variant_8",
                                        "type": "object",
                                        "properties": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "place": {
                              "name": "place",
                              "type": "array",
                              "items": {
                                "name": "items",
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "name": "role",
                                    "type": "string"
                                  },
                                  "place": {
                                    "name": "place",
                                    "type": "union",
                                    "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place entity and not the PlaceRefOrValue class itself",
                                    "oneOf": [
                                      {
                                        "name": "place_variant_0",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "name": "id",
                                            "type": "string",
                                            "description": "Unique identifier of the geographic location"
                                          },
                                          "href": {
                                            "name": "href",
                                            "type": "string",
                                            "description": "An URI used to access to the geographic location resource"
                                          },
                                          "@type": {
                                            "name": "@type",
                                            "type": "string",
                                            "description": "The name of the GeoJSON structure used in the geometry attribute",
                                            "enum": [
                                              "GeoJsonPoint",
                                              "GeoJsonMultiPoint",
                                              "GeoJsonLineString",
                                              "GeoJsonMultiLineString",
                                              "GeoJsonPolygon"
                                            ]
                                          },
                                          "bbox": {
                                            "name": "bbox",
                                            "type": "array",
                                            "description": "A bounding box array that contains the geometry. The axes order follows the axes order of the geometry",
                                            "items": {
                                              "name": "items",
                                              "type": "number"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "name": "place_variant_1",
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "name": "code",
                                            "type": "string",
                                            "description": "A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]"
                                          },
                                          "creationDate": {
                                            "name": "creationDate",
                                            "type": "string",
                                            "description": "Date and time when the GeographicSite was created",
                                            "format": "date-time"
                                          },
                                          "description": {
                                            "name": "description",
                                            "type": "string",
                                            "description": "Text describing additional information regarding the site"
                                          },
                                          "status": {
                                            "name": "status",
                                            "type": "string",
                                            "description": "The condition of the GeographicSite, such as planned, underConstruction, cancelled, active, inactive, former"
                                          },
                                          "relatedParty": {
                                            "name": "relatedParty",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to RelatedPartyOrPartyRole"
                                            }
                                          },
                                          "externalIdentifier": {
                                            "name": "externalIdentifier",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to ExternalIdentifier"
                                            }
                                          },
                                          "calendar": {
                                            "name": "calendar",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "day": {
                                                  "name": "day",
                                                  "type": "string",
                                                  "description": "Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend, all week, ...)"
                                                },
                                                "timeZone": {
                                                  "name": "timeZone",
                                                  "type": "string",
                                                  "description": "Indication of the timezone applicable to the calendar information (e.g.: Paris, GMT+1)"
                                                },
                                                "hourPeriod": {
                                                  "name": "hourPeriod",
                                                  "type": "array",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "properties": {
                                                      "endHour": {
                                                        "name": "endHour",
                                                        "type": "string",
                                                        "description": "The time when the status ends applying"
                                                      },
                                                      "startHour": {
                                                        "name": "startHour",
                                                        "type": "string",
                                                        "description": "The time when the status starts applying"
                                                      }
                                                    }
                                                  }
                                                },
                                                "status": {
                                                  "name": "status",
                                                  "type": "string",
                                                  "description": "Indication of the availability of the caledar period (e.g.: available, booked, etc.)"
                                                }
                                              }
                                            }
                                          },
                                          "place": {
                                            "name": "place",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to PlaceRefOrValue"
                                            }
                                          },
                                          "siteRelationship": {
                                            "name": "siteRelationship",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "href": {
                                                  "name": "href",
                                                  "type": "string",
                                                  "description": "Reference of the related geographic site"
                                                },
                                                "role": {
                                                  "name": "role",
                                                  "type": "string",
                                                  "description": "Role of the related site in the relationship"
                                                },
                                                "validFor": {
                                                  "name": "validFor",
                                                  "type": "object",
                                                  "description": "Reference to TimePeriod"
                                                },
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Unique identifier of the related site entity within the server"
                                                },
                                                "relationshipType": {
                                                  "name": "relationshipType",
                                                  "type": "string",
                                                  "description": "Type of relationship"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "name": "place_variant_2",
                                        "type": "object",
                                        "properties": {
                                          "city": {
                                            "name": "city",
                                            "type": "string",
                                            "description": "City that the address is in"
                                          },
                                          "country": {
                                            "name": "country",
                                            "type": "string",
                                            "description": "Country that the address is in"
                                          },
                                          "locality": {
                                            "name": "locality",
                                            "type": "string",
                                            "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET], or a suburb, a bounded locality within a city, town or shire principally of urban character [ANZLICSTREET]"
                                          },
                                          "postcode": {
                                            "name": "postcode",
                                            "type": "string",
                                            "description": "descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also know as zipcode)"
                                          },
                                          "stateOrProvince": {
                                            "name": "stateOrProvince",
                                            "type": "string",
                                            "description": "the State or Province that the address is in"
                                          },
                                          "streetName": {
                                            "name": "streetName",
                                            "type": "string",
                                            "description": "Name of the street or other street type"
                                          },
                                          "streetNr": {
                                            "name": "streetNr",
                                            "type": "string",
                                            "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses"
                                          },
                                          "streetNrLast": {
                                            "name": "streetNrLast",
                                            "type": "string",
                                            "description": "Last number in a range of street numbers allocated to a property"
                                          },
                                          "streetNrLastSuffix": {
                                            "name": "streetNrLastSuffix",
                                            "type": "string",
                                            "description": "Last street number suffix for a ranged address"
                                          },
                                          "streetNrSuffix": {
                                            "name": "streetNrSuffix",
                                            "type": "string",
                                            "description": "the first street number suffix"
                                          },
                                          "streetSuffix": {
                                            "name": "streetSuffix",
                                            "type": "string",
                                            "description": "A modifier denoting a relative direction"
                                          },
                                          "streetType": {
                                            "name": "streetType",
                                            "type": "string",
                                            "description": "alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf "
                                          },
                                          "countryCode": {
                                            "name": "countryCode",
                                            "type": "array",
                                            "description": "Country codes are short alphabetic or numeric geographical codes (geocodes) developed to represent countries and dependent areas, for use in data processing and communications. Several different systems have been developed to do this. The term country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes, the E.164 country calling codes.",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "format": {
                                                  "name": "format",
                                                  "type": "string",
                                                  "description": "Standard/Regulatory definition identifier. e.g., ISO 3166-1"
                                                },
                                                "value": {
                                                  "name": "value",
                                                  "type": "string",
                                                  "description": "The value of the resource in the corresponding standard.e.g., a country code value"
                                                }
                                              }
                                            }
                                          },
                                          "externalIdentifier": {
                                            "name": "externalIdentifier",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "description": "Reference to ExternalIdentifier"
                                            }
                                          },
                                          "geographicLocation": {
                                            "name": "geographicLocation",
                                            "type": "union",
                                            "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the GeographicLocation entity and not the GeographicLocationRefOrValue class itself",
                                            "oneOf": [
                                              {
                                                "name": "geographicLocation_variant_0",
                                                "type": "object",
                                                "description": "Reference to GeographicLocation"
                                              },
                                              {
                                                "name": "geographicLocation_variant_1",
                                                "type": "object",
                                                "properties": {}
                                              }
                                            ]
                                          },
                                          "geographicSubAddress": {
                                            "name": "geographicSubAddress",
                                            "type": "array",
                                            "items": {
                                              "name": "items",
                                              "type": "object",
                                              "properties": {
                                                "buildingName": {
                                                  "name": "buildingName",
                                                  "type": "string",
                                                  "description": "allows for buildings that have well-known names"
                                                },
                                                "href": {
                                                  "name": "href",
                                                  "type": "string",
                                                  "description": "Link to the subAddress"
                                                },
                                                "id": {
                                                  "name": "id",
                                                  "type": "string",
                                                  "description": "Unique Identifier of the subAddress"
                                                },
                                                "levelNumber": {
                                                  "name": "levelNumber",
                                                  "type": "string",
                                                  "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
                                                },
                                                "levelType": {
                                                  "name": "levelType",
                                                  "type": "string",
                                                  "description": "describes level types within a building"
                                                },
                                                "name": {
                                                  "name": "name",
                                                  "type": "string",
                                                  "description": "Name of the subAddress to identify it with a meaningful identification"
                                                },
                                                "privateStreetName": {
                                                  "name": "privateStreetName",
                                                  "type": "string",
                                                  "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office."
                                                },
                                                "privateStreetNumber": {
                                                  "name": "privateStreetNumber",
                                                  "type": "string",
                                                  "description": "private streets numbers internal to a private street"
                                                },
                                                "subUnit": {
                                                  "name": "subUnit",
                                                  "type": "array",
                                                  "description": "Representation of a SubUnit. It is used for describing subunit within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
                                                  "items": {
                                                    "name": "items",
                                                    "type": "object",
                                                    "properties": {
                                                      "subUnitNumber": {
                                                        "name": "subUnitNumber",
                                                        "type": "string",
                                                        "description": "The discriminator used for the subunit, often just a simple number but may also be a range."
                                                      },
                                                      "subUnitType": {
                                                        "name": "subUnitType",
                                                        "type": "string",
                                                        "description": "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK"
                                                      }
                                                    }
                                                  }
                                                },
                                                "subAddressType": {
                                                  "name": "subAddressType",
                                                  "type": "string",
                                                  "description": "Type of subAddress : it can be a subunit or a private street"
                                                }
                                              }
                                            }
                                          },
                                          "geographicAddressType": {
                                            "name": "geographicAddressType",
                                            "type": "string",
                                            "description": "Classification of the address, e.g., residential, industrial "
                                          }
                                        }
                                      },
                                      {
                                        "name": "place_variant_3",
                                        "type": "object",
                                        "description": "Place reference.",
                                        "properties": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "startDate": {
                              "name": "startDate",
                              "type": "string",
                              "description": "Is the date from which the product starts",
                              "format": "date-time"
                            },
                            "status": {
                              "name": "status",
                              "type": "string",
                              "description": "Possible values for the status of the product",
                              "enum": [
                                "created",
                                "pendingActive",
                                "cancelled",
                                "active",
                                "pendingTerminate",
                                "terminated",
                                "suspended",
                                "aborted "
                              ]
                            },
                            "terminationDate": {
                              "name": "terminationDate",
                              "type": "string",
                              "description": "Is the date when the product was terminated",
                              "format": "date-time"
                            },
                            "intent": {
                              "name": "intent",
                              "type": "union",
                              "description": "Intent Ref (if Intent already exists) or Value (if Intent be created or its details be presented)",
                              "oneOf": [
                                {
                                  "name": "intent_variant_0",
                                  "type": "object",
                                  "description": "Intent reference, for when Intent is used by other entities",
                                  "properties": {}
                                },
                                {
                                  "name": "intent_variant_1",
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "name": "description",
                                      "type": "string",
                                      "description": "The description of the intent."
                                    },
                                    "validFor": {
                                      "name": "validFor",
                                      "type": "object",
                                      "description": "Reference to TimePeriod"
                                    },
                                    "isBundle": {
                                      "name": "isBundle",
                                      "type": "boolean",
                                      "description": "isBundle determines whether an intent represents a single intent (false), or a bundle of intents(true)."
                                    },
                                    "priority": {
                                      "name": "priority",
                                      "type": "string",
                                      "description": "Can be used by intent owner to prioritize intents in an intent management system"
                                    },
                                    "statusChangeDate": {
                                      "name": "statusChangeDate",
                                      "type": "string",
                                      "description": "A date time( DateTime). The date that the entity status changed to the current one",
                                      "format": "date-time"
                                    },
                                    "context": {
                                      "name": "context",
                                      "type": "string",
                                      "description": "A string used to give a context to the intent"
                                    },
                                    "version": {
                                      "name": "version",
                                      "type": "string",
                                      "description": "A field that identifies the specific version of an instance of an intent."
                                    },
                                    "intentSpecification": {
                                      "name": "intentSpecification",
                                      "type": "object",
                                      "description": "Reference to EntityRef"
                                    },
                                    "intentRelationship": {
                                      "name": "intentRelationship",
                                      "type": "array",
                                      "description": "A list of intents related to this intent",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "A uni-directionmal relationship from this entity to a target entity instance",
                                        "properties": {
                                          "href": {
                                            "name": "href",
                                            "type": "string"
                                          },
                                          "name": {
                                            "name": "name",
                                            "type": "string"
                                          },
                                          "role": {
                                            "name": "role",
                                            "type": "string",
                                            "description": "The association role for this entity"
                                          },
                                          "validFor": {
                                            "name": "validFor",
                                            "type": "object",
                                            "description": "Reference to TimePeriod"
                                          },
                                          "associationSpec": {
                                            "name": "associationSpec",
                                            "type": "object",
                                            "description": "Reference to EntityRef"
                                          },
                                          "@baseType": {
                                            "name": "@baseType",
                                            "type": "string",
                                            "description": "When sub-classing, this defines the super-class"
                                          },
                                          "@schemaLocation": {
                                            "name": "@schemaLocation",
                                            "type": "string",
                                            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                                          },
                                          "relationshipType": {
                                            "name": "relationshipType",
                                            "type": "string",
                                            "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                                          },
                                          "id": {
                                            "name": "id",
                                            "type": "string"
                                          },
                                          "@referredType": {
                                            "name": "@referredType",
                                            "type": "string"
                                          },
                                          "@type": {
                                            "name": "@type",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "characteristic": {
                                      "name": "characteristic",
                                      "type": "array",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "Reference to Characteristic"
                                      }
                                    },
                                    "relatedParty": {
                                      "name": "relatedParty",
                                      "type": "array",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "properties": {
                                          "role": {
                                            "name": "role",
                                            "type": "string",
                                            "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                                          },
                                          "partyOrPartyRole": {
                                            "name": "partyOrPartyRole",
                                            "type": "union",
                                            "description": "",
                                            "oneOf": [
                                              {
                                                "name": "partyOrPartyRole_variant_0",
                                                "type": "object",
                                                "description": "Reference to PartyRef"
                                              },
                                              {
                                                "name": "partyOrPartyRole_variant_1",
                                                "type": "object",
                                                "description": "Reference to PartyRoleRef"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "attachment": {
                                      "name": "attachment",
                                      "type": "array",
                                      "description": "Attachments that may be of relevance to this intent, such as picture, document, media",
                                      "items": {
                                        "name": "items",
                                        "type": "object",
                                        "description": "Reference to AttachmentRefOrValue"
                                      }
                                    },
                                    "name": {
                                      "name": "name",
                                      "type": "string",
                                      "description": "The name of the intent."
                                    },
                                    "expression": {
                                      "name": "expression",
                                      "type": "object",
                                      "properties": {
                                        "expressionLanguage": {
                                          "name": "expressionLanguage",
                                          "type": "string",
                                          "description": "Possible values for the serialized Expression language of an intent or Intent report",
                                          "enum": [
                                            "Turtle",
                                            "JSON-LD",
                                            "RDF-XML",
                                            "Other"
                                          ]
                                        },
                                        "iri": {
                                          "name": "iri",
                                          "type": "string",
                                          "description": "Internationalized Resource Identifier of the intent Expression"
                                        },
                                        "expressionValue": {
                                          "name": "expressionValue",
                                          "type": "string",
                                          "description": "expression value is the ontology-encoded form of the Intent such as RDF-XML, Turtle, Json-LD,..."
                                        }
                                      }
                                    },
                                    "creationDate": {
                                      "name": "creationDate",
                                      "type": "string",
                                      "description": "Date and time of the creation of this REST resource",
                                      "format": "date-time"
                                    },
                                    "lastUpdate": {
                                      "name": "lastUpdate",
                                      "type": "string",
                                      "description": "Date and time of the last update of this REST resource",
                                      "format": "date-time"
                                    },
                                    "lifecycleStatus": {
                                      "name": "lifecycleStatus",
                                      "type": "string",
                                      "description": "Used to indicate the current lifecycle status of this intent"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "name": "product_variant_1",
                          "type": "object",
                          "description": "A Product reference",
                          "properties": {}
                        }
                      ]
                    },
                    "productOffering": {
                      "name": "productOffering",
                      "type": "object",
                      "description": "Reference to ProductOfferingRef"
                    },
                    "productOfferingQualificationItem": {
                      "name": "productOfferingQualificationItem",
                      "type": "object",
                      "properties": {
                        "productOfferingQualificationName": {
                          "name": "productOfferingQualificationName",
                          "type": "string",
                          "description": "Name of the related entity."
                        },
                        "productOfferingQualificationHref": {
                          "name": "productOfferingQualificationHref",
                          "type": "string",
                          "description": "Reference of the related entity."
                        },
                        "@referredType": {
                          "name": "@referredType",
                          "type": "string",
                          "description": "The actual type of the target instance when needed for disambiguation."
                        },
                        "productOfferingQualificationId": {
                          "name": "productOfferingQualificationId",
                          "type": "string",
                          "description": "Unique identifier of a related entity."
                        },
                        "itemId": {
                          "name": "itemId",
                          "type": "string",
                          "description": "Id of an item of a product offering qualification"
                        }
                      }
                    },
                    "quoteItem": {
                      "name": "quoteItem",
                      "type": "object",
                      "properties": {
                        "quoteHref": {
                          "name": "quoteHref",
                          "type": "string",
                          "description": "Reference of the related quote."
                        },
                        "@referredType": {
                          "name": "@referredType",
                          "type": "string",
                          "description": "The actual type of the target instance when needed for disambiguation."
                        },
                        "quoteId": {
                          "name": "quoteId",
                          "type": "string",
                          "description": "Unique identifier of a refered quote."
                        },
                        "quoteItemId": {
                          "name": "quoteItemId",
                          "type": "string",
                          "description": "Identifier of a quote item. "
                        }
                      }
                    },
                    "productOrderItem": {
                      "name": "productOrderItem",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to ProductOrderItem"
                      }
                    },
                    "productOrderItemRelationship": {
                      "name": "productOrderItemRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Id of the related Order item (must be in the same Order)"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Relationship type as relies on, bundles, etc..."
                          }
                        }
                      }
                    },
                    "state": {
                      "name": "state",
                      "type": "string",
                      "description": "Possible values for the state of the product order item",
                      "enum": [
                        "acknowledged",
                        "rejected",
                        "pending",
                        "held",
                        "inProgress",
                        "cancelled",
                        "completed",
                        "failed",
                        "partial",
                        "assessingCancellation",
                        "pendingCancellation"
                      ]
                    },
                    "qualification": {
                      "name": "qualification",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to ProductOfferingQualificationRef"
                      }
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the ProductOrder item (generally it is a sequence number 01, 02, 03, ...)"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to RelatedPartyRefOrPartyRoleRef"
                }
              },
              "requestedCompletionDate": {
                "name": "requestedCompletionDate",
                "type": "string",
                "description": "Requested delivery date from the requestor perspective",
                "format": "date-time"
              },
              "requestedStartDate": {
                "name": "requestedStartDate",
                "type": "string",
                "description": "Order fulfillment start date wished by the requestor. This is used when, for any reason, requestor cannot allow seller to begin to operationally begin the fulfillment before a date. ",
                "format": "date-time"
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "Date and time when the ProductOrder was created",
                "format": "date-time"
              },
              "completionDate": {
                "name": "completionDate",
                "type": "string",
                "description": "Date when the ProductOrder was completed",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "troubleTicket": {
    "tableName": "TroubleTicket",
    "endpoints": [
      {
        "operationId": "listTroubleTicket",
        "path": "/troubleTicket",
        "method": "get"
      },
      {
        "operationId": "createTroubleTicket",
        "path": "/troubleTicket",
        "method": "post"
      },
      {
        "operationId": "retrieveTroubleTicket",
        "path": "/troubleTicket/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTroubleTicket",
        "path": "/troubleTicket/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTroubleTicket",
        "path": "/troubleTicket/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the trouble ticket, typically a short description provided by the user that create the ticket"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the trouble or issue"
              },
              "severity": {
                "name": "severity",
                "type": "string",
                "description": "The severity of the issue. Indicate the implication of the issue on the expected functionality e.g. of a system, application, service etc.. \nSeverity values can be for example : Critical, Major, Minor"
              },
              "ticketType": {
                "name": "ticketType",
                "type": "string",
                "description": "represent a business type of the trouble ticket e.g. incident, complain, request"
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "File(s) attached to the trouble ticket. e.g. pictur of broken device, scaning of a bill or charge",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                          "properties": {
                            "startDateTime": {
                              "name": "startDateTime",
                              "type": "string",
                              "description": "Start of the time period, using IETC-RFC-3339 format",
                              "format": "date-time"
                            },
                            "endDateTime": {
                              "name": "endDateTime",
                              "type": "string",
                              "description": "End of the time period, using IETC-RFC-3339 format",
                              "format": "date-time"
                            }
                          }
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "channel": {
                "name": "channel",
                "type": "object",
                "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
                "properties": {}
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "The date on which the trouble ticket was created",
                "format": "date-time"
              },
              "requestedResolutionDate": {
                "name": "requestedResolutionDate",
                "type": "string",
                "description": "The resolution date requested by the user",
                "format": "date-time"
              },
              "expectedResolutionDate": {
                "name": "expectedResolutionDate",
                "type": "string",
                "description": "The expected resolution date determined by the trouble ticket system",
                "format": "date-time"
              },
              "resolutionDate": {
                "name": "resolutionDate",
                "type": "string",
                "description": "The date and time the trouble ticket was resolved",
                "format": "date-time"
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "The date and time that the trouble ticket was last updated",
                "format": "date-time"
              },
              "note": {
                "name": "note",
                "type": "array",
                "description": "The note(s) that are associated to the ticket.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Identifier of the note within its containing entity"
                    },
                    "author": {
                      "name": "author",
                      "type": "string",
                      "description": "Author of the note"
                    },
                    "date": {
                      "name": "date",
                      "type": "string",
                      "description": "Date of the note",
                      "format": "date-time"
                    },
                    "text": {
                      "name": "text",
                      "type": "string",
                      "description": "Text of the note"
                    }
                  }
                }
              },
              "priority": {
                "name": "priority",
                "type": "string",
                "description": "The priority of the trouble ticket and how quickly the issue should be resolved. Example: Critical, High, Medium, Low. The value is set by the ticket management system considering the severity, ticket type etc..."
              },
              "relatedEntity": {
                "name": "relatedEntity",
                "type": "array",
                "description": "An entity that is related to the ticket such as a bill, a product, etc. The entity against which the ticket is associated.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string"
                    },
                    "entity": {
                      "name": "entity",
                      "type": "object",
                      "description": "Reference to EntityRef"
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "The related party(ies) that are associated to the ticket.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Possible values for the status of the trouble ticket",
                "enum": [
                  "acknowledged",
                  "rejected",
                  "pending",
                  "held",
                  "inProgress",
                  "cancelled",
                  "closed",
                  "resolved"
                ]
              },
              "statusChangeDate": {
                "name": "statusChangeDate",
                "type": "string",
                "description": "The date and time the status changed.",
                "format": "date-time"
              },
              "statusChangeReason": {
                "name": "statusChangeReason",
                "type": "string",
                "description": "The reason for changing the status"
              },
              "statusChangeHistory": {
                "name": "statusChangeHistory",
                "type": "array",
                "description": "The status change history that are associated to the ticket. Populated by the server",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "statusChangeDate": {
                      "name": "statusChangeDate",
                      "type": "string",
                      "description": "The date and time the status changed.",
                      "format": "date-time"
                    },
                    "statusChangeReason": {
                      "name": "statusChangeReason",
                      "type": "string",
                      "description": "The reason why the status changed."
                    },
                    "status": {
                      "name": "status",
                      "type": "object",
                      "description": "Reference to TroubleTicketStatusType"
                    }
                  }
                }
              },
              "troubleTicketRelationship": {
                "name": "troubleTicketRelationship",
                "type": "array",
                "description": "A list of trouble ticket relationships (TroubleTicketRelationship [*]). Represents a relationship between trouble tickets",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the related trouble ticket"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the trouble ticket"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship"
                    }
                  }
                }
              },
              "troubleTicketSpecification": {
                "name": "troubleTicketSpecification",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "The version of the trouble ticket specification, in case it is desired to maintain multiple versions of trouble ticket specifications"
                  }
                }
              },
              "troubleTicketCharacteristic": {
                "name": "troubleTicketCharacteristic",
                "type": "array",
                "description": "List of characteristics of the trouble ticket",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the characteristic"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "Data type of the value of the characteristic"
                    },
                    "characteristicRelationship": {
                      "name": "characteristicRelationship",
                      "type": "array",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "id": {
                            "name": "id",
                            "type": "string",
                            "description": "Unique identifier of the characteristic"
                          },
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "The type of relationship"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "troubleTicketSpecification": {
    "tableName": "TroubleTicketSpecification",
    "endpoints": [
      {
        "operationId": "listTroubleTicketSpecification",
        "path": "/troubleTicketSpecification",
        "method": "get"
      },
      {
        "operationId": "createTroubleTicketSpecification",
        "path": "/troubleTicketSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveTroubleTicketSpecification",
        "path": "/troubleTicketSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteTroubleTicketSpecification",
        "path": "/troubleTicketSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchTroubleTicketSpecification",
        "path": "/troubleTicketSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name given to the specification"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the specification"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status of this specification such as inDesign,active,rejected,retired"
              },
              "specCharacteristic": {
                "name": "specCharacteristic",
                "type": "array",
                "description": "List of characteristics that the entity can take",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                      "properties": {
                        "startDateTime": {
                          "name": "startDateTime",
                          "type": "string",
                          "description": "Start of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        },
                        "endDateTime": {
                          "name": "endDateTime",
                          "type": "string",
                          "description": "End of the time period, using IETC-RFC-3339 format",
                          "format": "date-time"
                        }
                      }
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "Parties who manage or otherwise have an interest in this specification",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "Reference to TimePeriod"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "The version of the trouble ticket specification, in case it is desired to maintain multiple versions of trouble ticket specifications"
              },
              "creationDate": {
                "name": "creationDate",
                "type": "string",
                "description": "The date on which the trouble ticket specification was created",
                "format": "date-time"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update of the specification",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "category": {
    "tableName": "Category",
    "endpoints": [
      {
        "operationId": "listCategory",
        "path": "/category",
        "method": "get"
      },
      {
        "operationId": "createCategory",
        "path": "/category",
        "method": "post"
      },
      {
        "operationId": "retrieveCategory",
        "path": "/category/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteCategory",
        "path": "/category/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchCategory",
        "path": "/category/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the category"
              },
              "isRoot": {
                "name": "isRoot",
                "type": "boolean",
                "description": "If true, this Boolean indicates that the category is a root of categories"
              },
              "parent": {
                "name": "parent",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "Version of the category"
                  }
                }
              },
              "productOffering": {
                "name": "productOffering",
                "type": "array",
                "description": "List of product offerings that are referred to by the category",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the product offering"
                    }
                  }
                }
              },
              "subCategory": {
                "name": "subCategory",
                "type": "array",
                "description": "The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other (sub-)categories and/or product offerings.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to CategoryRef"
                }
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Category version"
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the category"
              }
            }
          }
        }
      }
    }
  },
  "productCatalog": {
    "tableName": "ProductCatalog",
    "endpoints": [
      {
        "operationId": "listProductCatalog",
        "path": "/productCatalog",
        "method": "get"
      },
      {
        "operationId": "createProductCatalog",
        "path": "/productCatalog",
        "method": "post"
      },
      {
        "operationId": "retrieveProductCatalog",
        "path": "/productCatalog/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProductCatalog",
        "path": "/productCatalog/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchProductCatalog",
        "path": "/productCatalog/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of this catalog"
              },
              "catalogType": {
                "name": "catalogType",
                "type": "string",
                "description": "Type of this Catalog, like Product, Service, Resource etc."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Catalog version"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "List of parties involved in this catalog",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the catalog"
              },
              "category": {
                "name": "category",
                "type": "array",
                "description": "List of root categories contained in this catalog",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the category"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "productOffering": {
    "tableName": "ProductOffering",
    "endpoints": [
      {
        "operationId": "listProductOffering",
        "path": "/productOffering",
        "method": "get"
      },
      {
        "operationId": "createProductOffering",
        "path": "/productOffering",
        "method": "post"
      },
      {
        "operationId": "retrieveProductOffering",
        "path": "/productOffering/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProductOffering",
        "path": "/productOffering/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchProductOffering",
        "path": "/productOffering/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the productOffering"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether a productOffering represents a single productOffering (false), or a bundle of productOfferings (true)."
              },
              "isSellable": {
                "name": "isSellable",
                "type": "boolean",
                "description": "A flag indicating if this product offer can be sold stand-alone for sale or not. If this flag is false it indicates that the offer can only be sold within a bundle."
              },
              "statusReason": {
                "name": "statusReason",
                "type": "string",
                "description": "A string providing a complementary information on the value of the lifecycle status attribute."
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "ProductOffering version"
              },
              "place": {
                "name": "place",
                "type": "array",
                "description": "Place defines the places where the products are sold or delivered.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Place reference.",
                  "properties": {}
                }
              },
              "serviceLevelAgreement": {
                "name": "serviceLevelAgreement",
                "type": "object",
                "description": "ServiceLevelAgreement reference: A service level agreement (SLA) is a type of agreement that represents a formal negotiated agreement between two parties designed to create a common understanding about products, services, priorities, responsibilities, and so forth. The SLA is a set of appropriate procedures and targets formally or informally agreed between parties in order to achieve and maintain specified Quality of Service.",
                "properties": {}
              },
              "channel": {
                "name": "channel",
                "type": "array",
                "description": "The channel defines the channel for selling product offerings.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc..",
                  "properties": {}
                }
              },
              "serviceCandidate": {
                "name": "serviceCandidate",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "Version of the service candidate"
                  }
                }
              },
              "category": {
                "name": "category",
                "type": "array",
                "description": "The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the category"
                    }
                  }
                }
              },
              "resourceCandidate": {
                "name": "resourceCandidate",
                "type": "object",
                "properties": {
                  "version": {
                    "name": "version",
                    "type": "string",
                    "description": "the version of resource candidate"
                  }
                }
              },
              "productOfferingTerm": {
                "name": "productOfferingTerm",
                "type": "array",
                "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "Description of the productOfferingTerm"
                    },
                    "duration": {
                      "name": "duration",
                      "type": "object",
                      "description": "A time interval in a given unit of time",
                      "properties": {
                        "amount": {
                          "name": "amount",
                          "type": "integer",
                          "description": "Time interval (number of seconds, minutes, hours, etc.)"
                        },
                        "units": {
                          "name": "units",
                          "type": "string",
                          "description": "Unit of time (seconds, minutes, hours, etc.)"
                        }
                      }
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the productOfferingTerm"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "productOfferingPrice": {
                "name": "productOfferingPrice",
                "type": "array",
                "description": "An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased. The price is valid for a defined period of time and may not represent the actual price paid by a customer.",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the ProductOfferingPrice entity and not the ProductOfferingPriceRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "Description of the productOfferingPrice"
                        },
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "ProductOfferingPrice version"
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "unitOfMeasure": {
                          "name": "unitOfMeasure",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "recurringChargePeriodType": {
                          "name": "recurringChargePeriodType",
                          "type": "string",
                          "description": "The period to repeat the application of the price\nCould be month, week..."
                        },
                        "recurringChargePeriodLength": {
                          "name": "recurringChargePeriodLength",
                          "type": "integer",
                          "description": "the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable"
                        },
                        "isBundle": {
                          "name": "isBundle",
                          "type": "boolean",
                          "description": "A flag indicating if this ProductOfferingPrice is composite (bundle) or not"
                        },
                        "price": {
                          "name": "price",
                          "type": "object",
                          "description": "A base / value business entity used to represent money",
                          "properties": {
                            "unit": {
                              "name": "unit",
                              "type": "string",
                              "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                            },
                            "value": {
                              "name": "value",
                              "type": "number",
                              "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                              "format": "float"
                            }
                          }
                        },
                        "percentage": {
                          "name": "percentage",
                          "type": "number",
                          "description": "Percentage to apply if this Product Offering Price is an Alteration (such as a Discount)",
                          "format": "float"
                        },
                        "bundledPopRelationship": {
                          "name": "bundledPopRelationship",
                          "type": "array",
                          "description": "this object represents a bundle relationship from a bundle product offering price (parent) to a simple product offering price (child). A simple product offering price may participate in more than one bundle relationship.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "version": {
                                "name": "version",
                                "type": "string",
                                "description": "Version of the referred product offering price."
                              }
                            }
                          }
                        },
                        "popRelationship": {
                          "name": "popRelationship",
                          "type": "array",
                          "description": "Product Offering Prices related to this Product Offering Price, for example a price alteration such as allowance or discount",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "role": {
                                "name": "role",
                                "type": "string",
                                "description": "The association role for the source product offering price"
                              },
                              "relationshipType": {
                                "name": "relationshipType",
                                "type": "string",
                                "description": "type of the relationship, for example override, discount, etc."
                              },
                              "version": {
                                "name": "version",
                                "type": "string",
                                "description": "Version of the referred product offering price."
                              }
                            }
                          }
                        },
                        "prodSpecCharValueUse": {
                          "name": "prodSpecCharValueUse",
                          "type": "array",
                          "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOfferingPrice to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering and ProcuctOfferingPrice level. The list of values in ProductSpecificationCharacteristicValueUse is a strict subset of the list of values as defined in the corresponding product specification characteristics.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "name": {
                                "name": "name",
                                "type": "string",
                                "description": "Name of the associated productSpecificationCharacteristic"
                              },
                              "id": {
                                "name": "id",
                                "type": "string",
                                "description": "Unique ID for the characteristic"
                              },
                              "description": {
                                "name": "description",
                                "type": "string",
                                "description": "A narrative that explains in detail what the productSpecificationCharacteristic is"
                              },
                              "valueType": {
                                "name": "valueType",
                                "type": "string",
                                "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                              },
                              "minCardinality": {
                                "name": "minCardinality",
                                "type": "integer",
                                "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                              },
                              "maxCardinality": {
                                "name": "maxCardinality",
                                "type": "integer",
                                "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                              },
                              "validFor": {
                                "name": "validFor",
                                "type": "object",
                                "description": "Reference to TimePeriod"
                              },
                              "productSpecCharacteristicValue": {
                                "name": "productSpecCharacteristicValue",
                                "type": "array",
                                "description": "A number or text that can be assigned to a ProductSpecificationCharacteristic.",
                                "items": {
                                  "name": "items",
                                  "type": "object",
                                  "properties": {
                                    "valueType": {
                                      "name": "valueType",
                                      "type": "string",
                                      "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                                    },
                                    "isDefault": {
                                      "name": "isDefault",
                                      "type": "boolean",
                                      "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                                    },
                                    "unitOfMeasure": {
                                      "name": "unitOfMeasure",
                                      "type": "string",
                                      "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                                    },
                                    "validFor": {
                                      "name": "validFor",
                                      "type": "object",
                                      "description": "Reference to TimePeriod"
                                    },
                                    "valueFrom": {
                                      "name": "valueFrom",
                                      "type": "integer",
                                      "description": "The low range value that a characteristic can take on"
                                    },
                                    "valueTo": {
                                      "name": "valueTo",
                                      "type": "integer",
                                      "description": "The upper range value that a characteristic can take on"
                                    },
                                    "rangeInterval": {
                                      "name": "rangeInterval",
                                      "type": "string",
                                      "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                                    },
                                    "regex": {
                                      "name": "regex",
                                      "type": "string",
                                      "description": "A regular expression constraint for given value"
                                    }
                                  }
                                }
                              },
                              "productSpecification": {
                                "name": "productSpecification",
                                "type": "object",
                                "properties": {
                                  "version": {
                                    "name": "version",
                                    "type": "string",
                                    "description": "Version of the product specification"
                                  },
                                  "targetProductSchema": {
                                    "name": "targetProductSchema",
                                    "type": "object",
                                    "description": "The reference object to the schema and type of target product which is described by product specification",
                                    "properties": {
                                      "@type": {
                                        "name": "@type",
                                        "type": "string",
                                        "description": "Class type of the target product"
                                      },
                                      "@schemaLocation": {
                                        "name": "@schemaLocation",
                                        "type": "string",
                                        "description": "This field provides a link to the schema describing the target product",
                                        "format": "uri"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "productOfferingTerm": {
                          "name": "productOfferingTerm",
                          "type": "array",
                          "description": "A list of conditions under which a ProductOfferingPrice is made available to Customers. For instance, a Product Offering Price can be offered with multiple commitment periods.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Reference to ProductOfferingTerm"
                          }
                        },
                        "place": {
                          "name": "place",
                          "type": "array",
                          "description": "Place defines the places where the products are sold or delivered.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "description": "Reference to PlaceRef"
                          }
                        },
                        "policy": {
                          "name": "policy",
                          "type": "array",
                          "description": "The Policy resource represents a policy/rule applied to ProductOfferingPrice.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "id": {
                                "name": "id",
                                "type": "string",
                                "description": "unique identifier"
                              },
                              "href": {
                                "name": "href",
                                "type": "string",
                                "description": "Hyperlink reference"
                              },
                              "version": {
                                "name": "version",
                                "type": "string"
                              },
                              "@type": {
                                "name": "@type",
                                "type": "string",
                                "description": "When sub-classing, this defines the sub-class Extensible name"
                              },
                              "@baseType": {
                                "name": "@baseType",
                                "type": "string",
                                "description": "When sub-classing, this defines the super-class"
                              },
                              "@schemaLocation": {
                                "name": "@schemaLocation",
                                "type": "string",
                                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                              }
                            }
                          }
                        },
                        "pricingLogicAlgorithm": {
                          "name": "pricingLogicAlgorithm",
                          "type": "array",
                          "description": "The PricingLogicAlgorithm entity represents an instantiation of an interface specification to external rating function (without a modeled behavior in SID). Some of the parameters of the interface definition may be already set (such as price per unit) and some may be gathered during the rating process from the event (such as call duration) or from ProductCharacteristicValues (such as assigned bandwidth).",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "description": {
                                "name": "description",
                                "type": "string",
                                "description": "Description of the PricingLogicAlgorithm"
                              },
                              "name": {
                                "name": "name",
                                "type": "string",
                                "description": "Name given to the PricingLogicAlgorithm"
                              },
                              "plaSpecId": {
                                "name": "plaSpecId",
                                "type": "string",
                                "description": "id of corresponding PricingLogicAlgorithm specification"
                              },
                              "validFor": {
                                "name": "validFor",
                                "type": "object",
                                "description": "Reference to TimePeriod"
                              }
                            }
                          }
                        },
                        "tax": {
                          "name": "tax",
                          "type": "array",
                          "description": "An amount of money levied on the price of a Product by a legislative body.",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "taxAmount": {
                                "name": "taxAmount",
                                "type": "object",
                                "description": "Reference to Money"
                              },
                              "taxCategory": {
                                "name": "taxCategory",
                                "type": "string",
                                "description": "Tax category"
                              },
                              "taxRate": {
                                "name": "taxRate",
                                "type": "number",
                                "description": "Applied rate of the tax",
                                "format": "float"
                              }
                            }
                          }
                        },
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "Name of the productOfferingPrice"
                        },
                        "priceType": {
                          "name": "priceType",
                          "type": "string",
                          "description": "A category that describes the price, such as recurring, discount, allowance, penalty, and so forth."
                        },
                        "lastUpdate": {
                          "name": "lastUpdate",
                          "type": "string",
                          "description": "the last update time of this ProductOfferingPrice",
                          "format": "date-time"
                        },
                        "lifecycleStatus": {
                          "name": "lifecycleStatus",
                          "type": "string",
                          "description": "the lifecycle status of this ProductOfferingPrice"
                        },
                        "externalIdentifier": {
                          "name": "externalIdentifier",
                          "type": "array",
                          "description": "List of external identifieers for the offering price, e.g. identifier in source catalog",
                          "items": {
                            "name": "items",
                            "type": "object",
                            "properties": {
                              "owner": {
                                "name": "owner",
                                "type": "string",
                                "description": "Name of the external system that owns the entity."
                              },
                              "externalIdentifierType": {
                                "name": "externalIdentifierType",
                                "type": "string",
                                "description": "Type of the identification, typically would be the type of the entity within the external system"
                              },
                              "id": {
                                "name": "id",
                                "type": "string",
                                "description": "identification of the entity within the external system."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "Version of the product offering price"
                        }
                      }
                    }
                  ]
                }
              },
              "agreement": {
                "name": "agreement",
                "type": "array",
                "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.",
                  "properties": {}
                }
              },
              "bundledProductOffering": {
                "name": "bundledProductOffering",
                "type": "array",
                "description": "A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "bundledProductOfferingOption": {
                      "name": "bundledProductOfferingOption",
                      "type": "object",
                      "properties": {
                        "numberRelOfferDefault": {
                          "name": "numberRelOfferDefault",
                          "type": "integer",
                          "description": "Default number of produc offereings that should be procured as part of the related BundledProductOffering"
                        },
                        "numberRelOfferLowerLimit": {
                          "name": "numberRelOfferLowerLimit",
                          "type": "integer",
                          "description": "lower limit for a product offering that can be procured as part of the related BundledProductOffering"
                        },
                        "numberRelOfferUpperLimit": {
                          "name": "numberRelOfferUpperLimit",
                          "type": "integer",
                          "description": "upper limit for a product offering that can be procured as part of the related BundledProductOffering"
                        }
                      }
                    }
                  }
                }
              },
              "bundledGroupProductOffering": {
                "name": "bundledGroupProductOffering",
                "type": "array",
                "description": "A group of ProductOfferings that can be selected for instantiation, e.g. between 2 and 7 from a list of 15 channel packs.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Locally unique identifier of the group, useful in case the parent product offering or group includes multiple groups."
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "The name of the group of child offerings. Required to distinguish several choice groups."
                    },
                    "bundledProductOffering": {
                      "name": "bundledProductOffering",
                      "type": "array",
                      "description": "Child offerings, from which instances can be created as direct or hierarchically indirect children of the parent offering.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to BundledProductOffering"
                      }
                    },
                    "bundledGroupProductOffering": {
                      "name": "bundledGroupProductOffering",
                      "type": "array",
                      "description": "Child groups of product offerings, to enable hierarchical sub-grouping.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to BundledGroupProductOffering"
                      }
                    },
                    "bundledGroupProductOfferingOption": {
                      "name": "bundledGroupProductOfferingOption",
                      "type": "object",
                      "properties": {
                        "numberRelOfferLowerLimit": {
                          "name": "numberRelOfferLowerLimit",
                          "type": "integer",
                          "description": "The minimum total number of instances of the child offerings directly of hierarchically in the group that should be instantiated"
                        },
                        "numberRelOfferUpperLimit": {
                          "name": "numberRelOfferUpperLimit",
                          "type": "integer",
                          "description": "The maximum total number of instances of the child offerings directly of hierarchically in the group that should be instantiated"
                        }
                      }
                    }
                  }
                }
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Complements the description of an element (for instance a product) through video, pictures...",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "Reference to Quantity"
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "marketSegment": {
                "name": "marketSegment",
                "type": "array",
                "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.",
                  "properties": {}
                }
              },
              "productOfferingRelationship": {
                "name": "productOfferingRelationship",
                "type": "array",
                "description": "A relationship between this product offering and other product offerings.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for the source product offering"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the referred product offering type."
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "Type of relationship between product offerings such as requires, exchangableTo, optionalFor"
                    },
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the referred product offering."
                    }
                  }
                }
              },
              "productOfferingCharacteristic": {
                "name": "productOfferingCharacteristic",
                "type": "array",
                "description": "A characteristic quality or distinctive feature of a ProductOffering. The characteristic can take on a discrete value fixed at design (catalog authoring) time, such as Mobile Plan Rank, and is not generally modifiable at inventory level.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to CharacteristicValueSpecification"
                      }
                    }
                  }
                }
              },
              "prodSpecCharValueUse": {
                "name": "prodSpecCharValueUse",
                "type": "array",
                "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ProductSpecificationCharacteristicValueUse"
                }
              },
              "policy": {
                "name": "policy",
                "type": "array",
                "description": "The Policy resource represents a policy/rule applied to ProductOffering.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to PolicyRef"
                }
              },
              "allowedAction": {
                "name": "allowedAction",
                "type": "array",
                "description": "List of actions that can be executed (in context of a product order) on products instantiated from this offering",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "channel": {
                      "name": "channel",
                      "type": "array",
                      "description": "A list of sales channels in which this action is allowed; for instance Remove might be allowed only in an assisted channel not in a self-service channel",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to ChannelRef"
                      }
                    },
                    "action": {
                      "name": "action",
                      "type": "string",
                      "description": "The name of the action"
                    }
                  }
                }
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the productOffering"
              },
              "productSpecification": {
                "name": "productSpecification",
                "type": "object",
                "description": "Reference to ProductSpecificationRef"
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "description": "List of external identifieers for the offering, e.g. identifier in source catalog",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Reference to ExternalIdentifier"
                }
              }
            }
          }
        }
      }
    }
  },
  "productOfferingPrice": {
    "tableName": "ProductOfferingPrice",
    "endpoints": [
      {
        "operationId": "listProductOfferingPrice",
        "path": "/productOfferingPrice",
        "method": "get"
      },
      {
        "operationId": "createProductOfferingPrice",
        "path": "/productOfferingPrice",
        "method": "post"
      },
      {
        "operationId": "retrieveProductOfferingPrice",
        "path": "/productOfferingPrice/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProductOfferingPrice",
        "path": "/productOfferingPrice/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchProductOfferingPrice",
        "path": "/productOfferingPrice/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "Description of the productOfferingPrice"
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "ProductOfferingPrice version"
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "unitOfMeasure": {
                "name": "unitOfMeasure",
                "type": "object",
                "description": "An amount in a given unit",
                "properties": {
                  "amount": {
                    "name": "amount",
                    "type": "number",
                    "description": "Numeric value in a given unit",
                    "format": "float"
                  },
                  "units": {
                    "name": "units",
                    "type": "string",
                    "description": "Unit"
                  }
                }
              },
              "recurringChargePeriodType": {
                "name": "recurringChargePeriodType",
                "type": "string",
                "description": "The period to repeat the application of the price\nCould be month, week..."
              },
              "recurringChargePeriodLength": {
                "name": "recurringChargePeriodLength",
                "type": "integer",
                "description": "the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "A flag indicating if this ProductOfferingPrice is composite (bundle) or not"
              },
              "price": {
                "name": "price",
                "type": "object",
                "description": "A base / value business entity used to represent money",
                "properties": {
                  "unit": {
                    "name": "unit",
                    "type": "string",
                    "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                  },
                  "value": {
                    "name": "value",
                    "type": "number",
                    "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type",
                    "format": "float"
                  }
                }
              },
              "percentage": {
                "name": "percentage",
                "type": "number",
                "description": "Percentage to apply if this Product Offering Price is an Alteration (such as a Discount)",
                "format": "float"
              },
              "bundledPopRelationship": {
                "name": "bundledPopRelationship",
                "type": "array",
                "description": "this object represents a bundle relationship from a bundle product offering price (parent) to a simple product offering price (child). A simple product offering price may participate in more than one bundle relationship.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the referred product offering price."
                    }
                  }
                }
              },
              "popRelationship": {
                "name": "popRelationship",
                "type": "array",
                "description": "Product Offering Prices related to this Product Offering Price, for example a price alteration such as allowance or discount",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "The association role for the source product offering price"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "type of the relationship, for example override, discount, etc."
                    },
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the referred product offering price."
                    }
                  }
                }
              },
              "prodSpecCharValueUse": {
                "name": "prodSpecCharValueUse",
                "type": "array",
                "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOfferingPrice to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering and ProcuctOfferingPrice level. The list of values in ProductSpecificationCharacteristicValueUse is a strict subset of the list of values as defined in the corresponding product specification characteristics.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the associated productSpecificationCharacteristic"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains in detail what the productSpecificationCharacteristic is"
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "productSpecCharacteristicValue": {
                      "name": "productSpecCharacteristicValue",
                      "type": "array",
                      "description": "A number or text that can be assigned to a ProductSpecificationCharacteristic.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    },
                    "productSpecification": {
                      "name": "productSpecification",
                      "type": "object",
                      "properties": {
                        "version": {
                          "name": "version",
                          "type": "string",
                          "description": "Version of the product specification"
                        },
                        "targetProductSchema": {
                          "name": "targetProductSchema",
                          "type": "object",
                          "description": "The reference object to the schema and type of target product which is described by product specification",
                          "properties": {
                            "@type": {
                              "name": "@type",
                              "type": "string",
                              "description": "Class type of the target product"
                            },
                            "@schemaLocation": {
                              "name": "@schemaLocation",
                              "type": "string",
                              "description": "This field provides a link to the schema describing the target product",
                              "format": "uri"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "productOfferingTerm": {
                "name": "productOfferingTerm",
                "type": "array",
                "description": "A list of conditions under which a ProductOfferingPrice is made available to Customers. For instance, a Product Offering Price can be offered with multiple commitment periods.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "Description of the productOfferingTerm"
                    },
                    "duration": {
                      "name": "duration",
                      "type": "object",
                      "description": "A time interval in a given unit of time",
                      "properties": {
                        "amount": {
                          "name": "amount",
                          "type": "integer",
                          "description": "Time interval (number of seconds, minutes, hours, etc.)"
                        },
                        "units": {
                          "name": "units",
                          "type": "string",
                          "description": "Unit of time (seconds, minutes, hours, etc.)"
                        }
                      }
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the productOfferingTerm"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "place": {
                "name": "place",
                "type": "array",
                "description": "Place defines the places where the products are sold or delivered.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "description": "Place reference.",
                  "properties": {}
                }
              },
              "policy": {
                "name": "policy",
                "type": "array",
                "description": "The Policy resource represents a policy/rule applied to ProductOfferingPrice.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "unique identifier"
                    },
                    "href": {
                      "name": "href",
                      "type": "string",
                      "description": "Hyperlink reference"
                    },
                    "version": {
                      "name": "version",
                      "type": "string"
                    },
                    "@type": {
                      "name": "@type",
                      "type": "string",
                      "description": "When sub-classing, this defines the sub-class Extensible name"
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string",
                      "description": "When sub-classing, this defines the super-class"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string",
                      "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                    }
                  }
                }
              },
              "pricingLogicAlgorithm": {
                "name": "pricingLogicAlgorithm",
                "type": "array",
                "description": "The PricingLogicAlgorithm entity represents an instantiation of an interface specification to external rating function (without a modeled behavior in SID). Some of the parameters of the interface definition may be already set (such as price per unit) and some may be gathered during the rating process from the event (such as call duration) or from ProductCharacteristicValues (such as assigned bandwidth).",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "Description of the PricingLogicAlgorithm"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name given to the PricingLogicAlgorithm"
                    },
                    "plaSpecId": {
                      "name": "plaSpecId",
                      "type": "string",
                      "description": "id of corresponding PricingLogicAlgorithm specification"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    }
                  }
                }
              },
              "tax": {
                "name": "tax",
                "type": "array",
                "description": "An amount of money levied on the price of a Product by a legislative body.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "taxAmount": {
                      "name": "taxAmount",
                      "type": "object",
                      "description": "Reference to Money"
                    },
                    "taxCategory": {
                      "name": "taxCategory",
                      "type": "string",
                      "description": "Tax category"
                    },
                    "taxRate": {
                      "name": "taxRate",
                      "type": "number",
                      "description": "Applied rate of the tax",
                      "format": "float"
                    }
                  }
                }
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the productOfferingPrice"
              },
              "priceType": {
                "name": "priceType",
                "type": "string",
                "description": "A category that describes the price, such as recurring, discount, allowance, penalty, and so forth."
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "the last update time of this ProductOfferingPrice",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "the lifecycle status of this ProductOfferingPrice"
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "description": "List of external identifieers for the offering price, e.g. identifier in source catalog",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "productSpecification": {
    "tableName": "ProductSpecification",
    "endpoints": [
      {
        "operationId": "listProductSpecification",
        "path": "/productSpecification",
        "method": "get"
      },
      {
        "operationId": "createProductSpecification",
        "path": "/productSpecification",
        "method": "post"
      },
      {
        "operationId": "retrieveProductSpecification",
        "path": "/productSpecification/{id}",
        "method": "get"
      },
      {
        "operationId": "deleteProductSpecification",
        "path": "/productSpecification/{id}",
        "method": "delete"
      },
      {
        "operationId": "patchProductSpecification",
        "path": "/productSpecification/{id}",
        "method": "patch"
      }
    ],
    "underlyingType": "Array<any>",
    "schema": {
      "name": "Array<Object>",
      "fields": {
        "items": {
          "name": "items",
          "type": "array",
          "items": {
            "name": "Object",
            "type": "object",
            "properties": {
              "@type": {
                "name": "@type",
                "type": "string",
                "description": "When sub-classing, this defines the sub-class Extensible name"
              },
              "@baseType": {
                "name": "@baseType",
                "type": "string",
                "description": "When sub-classing, this defines the super-class"
              },
              "@schemaLocation": {
                "name": "@schemaLocation",
                "type": "string",
                "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
              },
              "href": {
                "name": "href",
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "name": "id",
                "type": "string",
                "description": "unique identifier"
              },
              "brand": {
                "name": "brand",
                "type": "string",
                "description": "The manufacturer or trademark of the specification"
              },
              "description": {
                "name": "description",
                "type": "string",
                "description": "A narrative that explains in detail what the product specification is"
              },
              "isBundle": {
                "name": "isBundle",
                "type": "boolean",
                "description": "isBundle determines whether a productSpecification represents a single productSpecification (false), or a bundle of productSpecification (true)."
              },
              "productNumber": {
                "name": "productNumber",
                "type": "string",
                "description": "An identification number assigned to uniquely identity the specification"
              },
              "category": {
                "name": "category",
                "type": "array",
                "description": "The category resource is used to group product specifications in logical containers. Categories can contain other categories and/or other catalog entries.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the category"
                    }
                  }
                }
              },
              "validFor": {
                "name": "validFor",
                "type": "object",
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "properties": {
                  "startDateTime": {
                    "name": "startDateTime",
                    "type": "string",
                    "description": "Start of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  },
                  "endDateTime": {
                    "name": "endDateTime",
                    "type": "string",
                    "description": "End of the time period, using IETC-RFC-3339 format",
                    "format": "date-time"
                  }
                }
              },
              "version": {
                "name": "version",
                "type": "string",
                "description": "Product specification version"
              },
              "relatedParty": {
                "name": "relatedParty",
                "type": "array",
                "description": "A related party defines party or party role linked to a specific entity.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "role": {
                      "name": "role",
                      "type": "string",
                      "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'"
                    },
                    "partyOrPartyRole": {
                      "name": "partyOrPartyRole",
                      "type": "union",
                      "description": "",
                      "oneOf": [
                        {
                          "name": "partyOrPartyRole_variant_0",
                          "type": "object",
                          "description": "A Party reference",
                          "properties": {}
                        },
                        {
                          "name": "partyOrPartyRole_variant_1",
                          "type": "object",
                          "properties": {
                            "partyId": {
                              "name": "partyId",
                              "type": "string",
                              "description": "The identifier of the engaged party that is linked to the PartyRole object."
                            },
                            "partyName": {
                              "name": "partyName",
                              "type": "string",
                              "description": "The name of the engaged party that is linked to the PartyRole object."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "productSpecCharacteristic": {
                "name": "productSpecCharacteristic",
                "type": "array",
                "description": "A characteristic quality or distinctive feature of a ProductSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique ID for the characteristic"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications."
                    },
                    "valueType": {
                      "name": "valueType",
                      "type": "string",
                      "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    },
                    "description": {
                      "name": "description",
                      "type": "string",
                      "description": "A narrative that explains the CharacteristicSpecification."
                    },
                    "configurable": {
                      "name": "configurable",
                      "type": "boolean",
                      "description": "If true, the Boolean indicates that the target Characteristic is configurable"
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "minCardinality": {
                      "name": "minCardinality",
                      "type": "integer",
                      "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
                    },
                    "maxCardinality": {
                      "name": "maxCardinality",
                      "type": "integer",
                      "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
                    },
                    "isUnique": {
                      "name": "isUnique",
                      "type": "boolean",
                      "description": "Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic."
                    },
                    "regex": {
                      "name": "regex",
                      "type": "string",
                      "description": "A rule or principle represented in regular expression used to derive the value of a characteristic value."
                    },
                    "extensible": {
                      "name": "extensible",
                      "type": "boolean",
                      "description": "An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource."
                    },
                    "@valueSchemaLocation": {
                      "name": "@valueSchemaLocation",
                      "type": "string",
                      "description": "This (optional) field provides a link to the schema describing the value type."
                    },
                    "charSpecRelationship": {
                      "name": "charSpecRelationship",
                      "type": "array",
                      "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "relationshipType": {
                            "name": "relationshipType",
                            "type": "string",
                            "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                          },
                          "name": {
                            "name": "name",
                            "type": "string",
                            "description": "Name of the target characteristic within the specification"
                          },
                          "characteristicSpecificationId": {
                            "name": "characteristicSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the characteristic within the specification"
                          },
                          "parentSpecificationHref": {
                            "name": "parentSpecificationHref",
                            "type": "string",
                            "description": "Hyperlink reference to the parent specification containing the target characteristic",
                            "format": "uri"
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "parentSpecificationId": {
                            "name": "parentSpecificationId",
                            "type": "string",
                            "description": "Unique identifier of the parent specification containing the target characteristic"
                          }
                        }
                      }
                    },
                    "characteristicValueSpecification": {
                      "name": "characteristicValueSpecification",
                      "type": "array",
                      "description": "A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "properties": {
                          "valueType": {
                            "name": "valueType",
                            "type": "string",
                            "description": "A kind of value that the characteristic value can take on, such as numeric, text and so forth"
                          },
                          "isDefault": {
                            "name": "isDefault",
                            "type": "boolean",
                            "description": "If true, the Boolean Indicates if the value is the default value for a characteristic"
                          },
                          "unitOfMeasure": {
                            "name": "unitOfMeasure",
                            "type": "string",
                            "description": "A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot."
                          },
                          "validFor": {
                            "name": "validFor",
                            "type": "object",
                            "description": "Reference to TimePeriod"
                          },
                          "valueFrom": {
                            "name": "valueFrom",
                            "type": "integer",
                            "description": "The low range value that a characteristic can take on"
                          },
                          "valueTo": {
                            "name": "valueTo",
                            "type": "integer",
                            "description": "The upper range value that a characteristic can take on"
                          },
                          "rangeInterval": {
                            "name": "rangeInterval",
                            "type": "string",
                            "description": "An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\"."
                          },
                          "regex": {
                            "name": "regex",
                            "type": "string",
                            "description": "A regular expression constraint for given value"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "serviceSpecification": {
                "name": "serviceSpecification",
                "type": "array",
                "description": "ServiceSpecification(s) required to realize a ProductSpecification.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Service specification version"
                    }
                  }
                }
              },
              "bundledProductSpecification": {
                "name": "bundledProductSpecification",
                "type": "array",
                "description": "A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "href": {
                      "name": "href",
                      "type": "string",
                      "description": "Reference of the product specification"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "Unique identifier of the product specification"
                    },
                    "lifecycleStatus": {
                      "name": "lifecycleStatus",
                      "type": "string",
                      "description": "Used to indicate the current lifecycle status"
                    },
                    "name": {
                      "name": "name",
                      "type": "string",
                      "description": "Name of the product specification"
                    },
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the product specification"
                    }
                  }
                }
              },
              "productSpecificationRelationship": {
                "name": "productSpecificationRelationship",
                "type": "array",
                "description": "A migration, substitution, dependency or exclusivity relationship between/among product specifications.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "characteristic": {
                      "name": "characteristic",
                      "type": "array",
                      "description": "A characteristic that refines the relationship. For example, consider the relationship between broadband and TV. For a 4k TV it is important to know the minimum bandwidth to support 4k, so a characteristic Resolution might be defined on the relationship to allow capturing of this in the inventory",
                      "items": {
                        "name": "items",
                        "type": "object",
                        "description": "Reference to CharacteristicSpecification"
                      }
                    },
                    "validFor": {
                      "name": "validFor",
                      "type": "object",
                      "description": "Reference to TimePeriod"
                    },
                    "relationshipType": {
                      "name": "relationshipType",
                      "type": "string",
                      "description": "type of the relationship, for example override, discount, etc."
                    },
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Version of the referred product specification."
                    }
                  }
                }
              },
              "resourceSpecification": {
                "name": "resourceSpecification",
                "type": "array",
                "description": "The ResourceSpecification is required to realize a ProductSpecification.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "version": {
                      "name": "version",
                      "type": "string",
                      "description": "Resource Specification version"
                    }
                  }
                }
              },
              "attachment": {
                "name": "attachment",
                "type": "array",
                "description": "Complements the description of an element (for instance a product) through video, pictures...",
                "items": {
                  "name": "items",
                  "type": "union",
                  "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
                  "oneOf": [
                    {
                      "name": "items_variant_0",
                      "type": "object",
                      "properties": {
                        "name": {
                          "name": "name",
                          "type": "string",
                          "description": "The name of the attachment"
                        },
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                        },
                        "content": {
                          "name": "content",
                          "type": "string",
                          "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                          "format": "base64"
                        },
                        "size": {
                          "name": "size",
                          "type": "object",
                          "description": "An amount in a given unit",
                          "properties": {
                            "amount": {
                              "name": "amount",
                              "type": "number",
                              "description": "Numeric value in a given unit",
                              "format": "float"
                            },
                            "units": {
                              "name": "units",
                              "type": "string",
                              "description": "Unit"
                            }
                          }
                        },
                        "validFor": {
                          "name": "validFor",
                          "type": "object",
                          "description": "Reference to TimePeriod"
                        },
                        "attachmentType": {
                          "name": "attachmentType",
                          "type": "string",
                          "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
                        },
                        "mimeType": {
                          "name": "mimeType",
                          "type": "string",
                          "description": "a technical characterization of the attachment content format using IETF Mime Types"
                        }
                      }
                    },
                    {
                      "name": "items_variant_1",
                      "type": "object",
                      "properties": {
                        "description": {
                          "name": "description",
                          "type": "string",
                          "description": "A narrative text describing the content of the attachment"
                        },
                        "url": {
                          "name": "url",
                          "type": "string",
                          "description": "Link to the attachment media/content"
                        }
                      }
                    }
                  ]
                }
              },
              "policy": {
                "name": "policy",
                "type": "array",
                "description": "The Policy resource represents a policy/rule applied to ProductSpecification.",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "unique identifier"
                    },
                    "href": {
                      "name": "href",
                      "type": "string",
                      "description": "Hyperlink reference"
                    },
                    "version": {
                      "name": "version",
                      "type": "string"
                    },
                    "@type": {
                      "name": "@type",
                      "type": "string",
                      "description": "When sub-classing, this defines the sub-class Extensible name"
                    },
                    "@baseType": {
                      "name": "@baseType",
                      "type": "string",
                      "description": "When sub-classing, this defines the super-class"
                    },
                    "@schemaLocation": {
                      "name": "@schemaLocation",
                      "type": "string",
                      "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                    }
                  }
                }
              },
              "targetProductSchema": {
                "name": "targetProductSchema",
                "type": "object",
                "description": "The reference object to the schema and type of target product which is described by product specification",
                "properties": {
                  "@type": {
                    "name": "@type",
                    "type": "string",
                    "description": "Class type of the target product"
                  },
                  "@schemaLocation": {
                    "name": "@schemaLocation",
                    "type": "string",
                    "description": "This field provides a link to the schema describing the target product",
                    "format": "uri"
                  }
                }
              },
              "intentSpecification": {
                "name": "intentSpecification",
                "type": "object",
                "properties": {}
              },
              "lastUpdate": {
                "name": "lastUpdate",
                "type": "string",
                "description": "Date and time of the last update",
                "format": "date-time"
              },
              "lifecycleStatus": {
                "name": "lifecycleStatus",
                "type": "string",
                "description": "Used to indicate the current lifecycle status"
              },
              "name": {
                "name": "name",
                "type": "string",
                "description": "Name of the product specification"
              },
              "externalIdentifier": {
                "name": "externalIdentifier",
                "type": "array",
                "description": "List of external identifieers for the specification, e.g. identifier in source catalog",
                "items": {
                  "name": "items",
                  "type": "object",
                  "properties": {
                    "owner": {
                      "name": "owner",
                      "type": "string",
                      "description": "Name of the external system that owns the entity."
                    },
                    "externalIdentifierType": {
                      "name": "externalIdentifierType",
                      "type": "string",
                      "description": "Type of the identification, typically would be the type of the entity within the external system"
                    },
                    "id": {
                      "name": "id",
                      "type": "string",
                      "description": "identification of the entity within the external system."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}